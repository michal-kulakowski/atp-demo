
<Rules>

   <Rule group="PH_SYS_RULE_Authen_NetDev" id="PH_Rule_Access_1" phIncidentCategory="Network" function="SECURITY">
       <Name>Multiple Admin Login Failures: Net Device (no Source IP)</Name>
       <active>true</active>
    <Description> Detects multiple logon failures at a network device - 5 consecutive failures in a 10 minute period. This rule triggers for network devices that do not report a source IP address.  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_NET_DEV" severity="8">
      <ArgList>
        destIpAddr = ExcessNetLoginFailure.reptDevIpAddr, user = ExcessNetLoginFailure.user, incidentCount = ExcessNetLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessNetLoginFailure" name="ExcessNetLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) AND srcIpAddr IS NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,user,destIpPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_NetDev" id="PH_Rule_Access_2" phIncidentCategory="Network" function="SECURITY">
       <Name>Multiple Admin Login Failures: Net Device</Name>
       <active>true</active>
    <Description> Detects excessive logon failures at a network device - 5 consecutive failures in a 10 minute period. This rule triggers for network devices that report a source IP address.  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEV" severity="8">
      <ArgList>
        srcIpAddr = ExcessNetLoginFailure.srcIpAddr, destIpAddr = ExcessNetLoginFailure.reptDevIpAddr, user = ExcessNetLoginFailure.user, incidentCount = ExcessNetLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessNetLoginFailure" name="ExcessNetLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) AND srcIpAddr IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_NetDev" id="PH_Rule_Access_3" phIncidentCategory="Network" function="SECURITY">
       <Name>Repeated Admin Multiple Login Failures: Net Device</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of multiple logon failures at a network device </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_2_NET_DEV" severity="9">
      <ArgList>
        srcIpAddr = RepeatExcessNetLoginFailure.srcIpAddr, destIpAddr = RepeatExcessNetLoginFailure.destIpAddr, incidentCount =RepeatExcessNetLoginFailure.COUNT(*)  
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="86400">
       <SubPattern displayName="RepeatExcessNetLoginFailure" name="RepeatExcessNetLoginFailure">
         <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEV" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_5" phIncidentCategory="Server" function="SECURITY">
       <Name>Multiple Logon Failures: Server</Name>
       <active>true</active>
    <Description> Detects excessive logon failures at a server - 5 consecutive failures in a 10 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_SERVER" severity="6">
      <ArgList>
        srcIpAddr = ExcessServerLoginFailure.srcIpAddr, destIpAddr = ExcessServerLoginFailure.reptDevIpAddr, user = ExcessServerLoginFailure.user, incidentCount = ExcessServerLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessServerLoginFailure" name="ExcessServerLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) AND reptDevIpAddr NOT IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER) AND user NOT CONTAIN "$"</SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_6" phIncidentCategory="Server" function="SECURITY">
       <Name>Repeated Multiple Logon Failures: Server</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of multiple logon failures at a server from the same user. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_SERVER" severity="9">
      <ArgList>
        srcIpAddr = RepeatExcessServerLoginFailure.srcIpAddr, destIpAddr = RepeatExcessServerLoginFailure.destIpAddr, incidentCount = RepeatExcessServerLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
       <SubPattern displayName="RepeatExcessServerLoginFailure" name="RepeatExcessServerLoginFailure">
         <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_SERVER" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_10" phIncidentCategory="Server" function="SECURITY">
       <Name>Multiple Privileged Logon Failures: Server</Name>
       <active>true</active>
    <Description> Detects excessive privileged logon failures at a server - 3 consecutive failures in a 10 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER" severity="9">
      <ArgList>
        destIpAddr = ExcessPrivLoginFailure.reptDevIpAddr, user = ExcessPrivLoginFailure.user, incidentCount = ExcessPrivLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="ExcessPrivLoginFailure" name="ExcessPrivLoginFailure">
        <SingleEvtConstr> (eventType IN (Group@PH_SYS_EVENT_HostPrivLogonFailure) OR (eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN") AND user CONTAIN "Admin")) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr, user</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_App" id="PH_Rule_Access_15A" phIncidentCategory="Application" function="SECURITY">
       <Name>Multiple Logon Failures: Web Server</Name>
       <active>true</active>
    <Description> Detects excessive application logon failures - 5 consecutive failures in a 15 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_WEB" severity="6">
      <ArgList>
        srcIpAddr = ExcessWebLoginFailure.srcIpAddr, destIpAddr = ExcessWebLoginFailure.reptDevIpAddr, user = ExcessWebLoginFailure.user, incidentCount = ExcessWebLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
       <SubPattern displayName="ExcessWebLoginFailure" name="ExcessWebLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WebLogonFailure) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> srcIpAddr, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_App" id="PH_Rule_Access_16A" phIncidentCategory="Application" function="SECURITY">
       <Name>Repeated Multiple Logon Failures: Web Server</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of multiple application logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB" severity="9">
      <ArgList>
        srcIpAddr = Filter_Rule_Access_16_1.srcIpAddr, destIpAddr = Filter_Rule_Access_16_1.destIpAddr, incidentCount = Filter_Rule_Access_16_1.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
      <SubPattern displayName="Filter_Rule_Access_16_1" name="Filter_Rule_Access_16_1">
        <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	<GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_App" id="PH_Rule_Access_15B" phIncidentCategory="Application" function="SECURITY">
       <Name>Multiple Logon Failures: Database</Name>
       <active>true</active>
    <Description> Detects excessive database logon failures - 5 consecutive failures in a 10 minute period</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_DB" severity="6">
      <ArgList>
        srcIpAddr = ExcessDBLoginFailure1.srcIpAddr, srcName = ExcessDBLoginFailure2.srcName, destIpAddr = ExcessDBLoginFailure1.reptDevIpAddr, user = ExcessDBLoginFailure1.user, incidentCount = ExcessDBLoginFailure1.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessDBLoginFailure1" name="ExcessDBLoginFailure1">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DBLogonFailure) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> srcIpAddr, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="OR"/>
       <SubPattern displayName="ExcessDBLoginFailure2" name="ExcessDBLoginFailure2">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DBLogonFailure) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> srcName, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <GlobalConstr>ExcessDBLoginFailure1.reptDevIpAddr = ExcessDBLoginFailure2.reptDevIpAddr AND ExcessDBLoginFailure1.user = ExcessDBLoginFailure2.user </GlobalConstr>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcName,user,destIpPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_App" id="PH_Rule_Access_16B" phIncidentCategory="Application" function="SECURITY">
       <Name>Repeated Multiple Logon Failures: Database</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of multiple application logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_DB" severity="9">
      <ArgList>
        srcIpAddr = Filter_Rule_Access_16_1.srcIpAddr, srcName = Filter_Rule_Access_16_2.srcName, destIpAddr = Filter_Rule_Access_16_1.destIpAddr, incidentCount = Filter_Rule_Access_16_1.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
      <SubPattern displayName="Filter_Rule_Access_16_1" name="Filter_Rule_Access_16_1">
        <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_DB" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	<GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
      </SubPattern>
      <Operator rank="0" type="OR"/>
      <SubPattern displayName="Filter_Rule_Access_16_2" name="Filter_Rule_Access_16_2">
        <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_DB" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	<GroupByAttr>srcName,eventType,destIpAddr </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <GlobalConstr>Filter_Rule_Access_16_1.destIpAddr = Filter_Rule_Access_16_2.destIpAddr </GlobalConstr>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcName,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>
   
   <Rule group="PH_SYS_RULE_Authen_App" id="PH_Rule_Access_15C" phIncidentCategory="Application" function="SECURITY">
       <Name>Multiple Logon Failures: Misc App</Name>
       <active>true</active>
    <Description> Detects excessive application logon failures - 5 consecutive failures in a 10 minute period. Application logsons include the one that may require authentication for accessing the authentication, such as HTTP, SNMP, FTP, POP3, IMAP etc. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_APPL" severity="6">
      <ArgList>
        srcIpAddr = ExcessMiscAppLoginFailure1.srcIpAddr, destIpAddr = ExcessMiscAppLoginFailure1.reptDevIpAddr, user = ExcessMiscAppLoginFailure1.user, incidentCount = ExcessMiscAppLoginFailure1.COUNT(*), destIpAddr = ExcessMiscAppLoginFailure2.reptDevIpAddr, user = ExcessMiscAppLoginFailure2.user, incidentCount = ExcessMiscAppLoginFailure2.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessMiscAppLoginFailure1" name="ExcessMiscAppLoginFailure1">
         <SingleEvtConstr> srcIpAddr IS NOT NULL AND eventType IN (Group@PH_SYS_EVENT_AppLogonFailure) AND eventType NOT IN (Group@PH_SYS_EVENT_AAALogonFailure) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> srcIpAddr, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="OR"/>
       <SubPattern displayName="ExcessMiscAppLoginFailure2" name="ExcessMiscAppLoginFailure2">
         <SingleEvtConstr> srcIpAddr IS NULL AND eventType IN (Group@PH_SYS_EVENT_AppLogonFailure) AND eventType NOT IN (Group@PH_SYS_EVENT_AAALogonFailure) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,destIpPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_App" id="PH_Rule_Access_16C" phIncidentCategory="Application" function="SECURITY">
       <Name>Repeated Multiple Logon Failures: Misc App</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of multiple application logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_APPL" severity="9">
      <ArgList>
        srcIpAddr = RepeatExcessMiscAppLoginFailure1.srcIpAddr, destIpAddr = RepeatExcessMiscAppLoginFailure1.destIpAddr, incidentCount = RepeatExcessMiscAppLoginFailure1.COUNT(*), destIpAddr = RepeatExcessMiscAppLoginFailure2.destIpAddr, incidentCount = RepeatExcessMiscAppLoginFailure2.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
      <SubPattern displayName="RepeatExcessMiscAppLoginFailure1" name="RepeatExcessMiscAppLoginFailure1">
        <SingleEvtConstr> srcIpAddr IS NOT NULL AND eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	<GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
      </SubPattern>
      <Operator rank="0" type="OR"/>
      <SubPattern displayName="RepeatExcessMiscAppLoginFailure2" name="RepeatExcessMiscAppLoginFailure2">
        <SingleEvtConstr> srcIpAddr IS NULL AND eventType = "PH_RULE_EXCESS_FAILED_LOGON_APPL" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	<GroupByAttr>eventType,destIpAddr </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_20" phIncidentCategory="Application" function="SECURITY">
       <Name>Multiple Logon Failures: Domain</Name>
       <active>true</active>
    <Description> Detects multiple domain logon failures - 5 consecutive failures in a 10 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_DOMAIN" severity="4">
      <ArgList>
        srcIpAddr = ExcessDomainLoginFailure.srcIpAddr, destIpAddr = ExcessDomainLoginFailure.reptDevIpAddr, domain = ExcessDomainLoginFailure.domain, user = ExcessDomainLoginFailure.user, incidentCount = ExcessDomainLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessDomainLoginFailure" name="ExcessDomainLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DomainLogonFailure) AND reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)   </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> srcIpAddr, reptDevIpAddr, user, domain </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,winLogonFailCode2,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_21" phIncidentCategory="Application" function="SECURITY">
       <Name>Repeated Multiple Logon Failures: Domain</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of multiple domain logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_DOMAIN" severity="8">
      <ArgList>
        srcIpAddr = RepeatExcessDomainLoginFailure.srcIpAddr, destIpAddr = RepeatExcessDomainLoginFailure.destIpAddr, incidentCount = RepeatExcessDomainLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
       <SubPattern displayName="RepeatExcessDomainLoginFailure" name="RepeatExcessDomainLoginFailure">
         <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_DOMAIN" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_25" phIncidentCategory="Network" function="SECURITY">
       <Name> Multiple Logon Failures: VPN </Name>
       <active>true</active>
    <Description> Detects multiple VPN logon failures - 5 consecutive failures in a 10 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_VPN" severity="4">
      <ArgList>
        srcIpAddr = ExcessVPNLoginFailure.srcIpAddr, destIpAddr = ExcessVPNLoginFailure.reptDevIpAddr, user = ExcessVPNLoginFailure.user, incidentCount = ExcessVPNLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessVPNLoginFailure" name="ExcessVPNLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_VPNLogonFailure) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr> srcIpAddr, reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_26" phIncidentCategory="Network" function="SECURITY">
       <Name> Repeated Multiple Logon Failures: VPN </Name>
       <active>false</active>
    <Description> Detects repeating occurrences of excessive VPN logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_VPN" severity="8">
      <ArgList>
        srcIpAddr = RepeatExcessVPNLoginFailure.srcIpAddr, destIpAddr = RepeatExcessVPNLoginFailure.destIpAddr, incidentCount = RepeatExcessVPNLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
       <SubPattern displayName="RepeatExcessVPNLoginFailure" name="RepeatExcessVPNLoginFailure">
         <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_VPN" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,eventType,destIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>
   
   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_30" phIncidentCategory="Network" function="SECURITY">
       <Name>Multiple Logon Failures: WLAN</Name>
       <active>true</active>
    <Description> Detects multiple Wireless logon failures - 5 consecutive failures in a 10 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FAILED_LOGON_WIRELESS" severity="4">
      <ArgList>
        srcMACAddr = ExcessWLANLoginFailure.srcMACAddr, destIpAddr = ExcessWLANLoginFailure.reptDevIpAddr, user = ExcessWLANLoginFailure.user, incidentCount = ExcessWLANLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessWLANLoginFailure" name="ExcessWLANLoginFailure">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WirelessLogonFailure) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5 </GroupEvtConstr>
	 <GroupByAttr> srcMACAddr,reptDevIpAddr,user,eventType </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcMACAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_31" phIncidentCategory="Network" function="SECURITY">
       <Name>Repeated Multiple Logon Failures: WLAN</Name>
       <active>false</active>
    <Description> Detects repeating occurrences of excessive wireless LAN logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WIRELESS" severity="8">
      <ArgList>
        srcMACAddr = RepeatExcessWLANLoginFailure.srcMACAddr, destIpAddr = RepeatExcessWLANLoginFailure.destIpAddr, incidentCount = RepeatExcessWLANLoginFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
       <SubPattern displayName="RepeatExcessWLANLoginFailure" name="RepeatExcessWLANLoginFailure">
         <SingleEvtConstr> eventType = "PH_RULE_EXCESS_FAILED_LOGON_WIRELESS" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>srcMACAddr,user,destIpAddr,eventType </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>


   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_51A" phIncidentCategory="Application" function="SECURITY">
       <Name>Account Locked: Domain</Name>
       <active>true</active>
    <Description> Detects account lockout caused by excessive logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCOUNT_LOCKOUT_DOMAIN" severity="10">
      <ArgList>
        destIpAddr = DomainAcctLockout.reptDevIpAddr, user = DomainAcctLockout.user, incidentCount = DomainAcctLockout.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_ACCT_LOCKOUT</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="DomainAcctLockout" name="DomainAcctLockout">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DomainAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>
   
   <Rule group="PH_SYS_RULE_Authen_NetDev" id="PH_Rule_Access_51B" phIncidentCategory="Network" function="SECURITY">
       <Name>Account Locked: Network Device</Name>
       <active>true</active>
    <Description> Detects account lockout caused by excessive logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCOUNT_LOCKOUT_NET_DEV" severity="10">
      <ArgList>
        srcIpAddr = NetDevAcctLockout.srcIpAddr, destIpAddr = NetDevAcctLockout.reptDevIpAddr, user = NetDevAcctLockout.user, incidentCount = NetDevAcctLockout.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="NetDevAcctLockout" name="NetDevAcctLockout">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_51C" phIncidentCategory="Server" function="SECURITY">
       <Name>Account Locked: Server</Name>
       <active>true</active>
    <Description> Detects account lockout caused by excessive logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCOUNT_LOCKOUT_SERVER" severity="10">
      <ArgList>
        destIpAddr = ServerAcctLockout.reptDevIpAddr, user = ServerAcctLockout.user, incidentCount = ServerAcctLockout.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="ServerAcctLockout" name="ServerAcctLockout">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostAccountLocked) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) AND reptDevIpAddr NOT IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER) AND eventType != "PH_AUDIT_ACCOUNT_LOCKED" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_51D" phIncidentCategory="Server" function="SECURITY">
   <Name>Account Locked: System</Name>
   <active>true</active>
    <Description> Detects system (FortiSIEM) account lockout caused by excessive logon failures </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCOUNT_LOCKOUT_SYSTEM" severity="10">
      <ArgList>
        srcIpAddr = AOLockout.srcIpAddr, user = AOLockout.targetUser, incidentCount = AOLockout.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="AOLockout" name="AOLockout">
         <SingleEvtConstr>eventType = "PH_AUDIT_ACCOUNT_LOCKED" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, targetUser </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,targetUser,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_52" phIncidentCategory="Server" function="SECURITY">
       <Name> Disabled Account Logon Attempt </Name>
       <active>true</active>
    <Description> Detects logon attempts to disabled accounts </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DISABLED_ACCOUNT_ACCESS" severity="9">
      <ArgList>
        destIpAddr = DisabledAcctLogin.reptDevIpAddr, user = DisabledAcctLogin.user, incidentCount = DisabledAcctLogin.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="DisabledAcctLogin" name="DisabledAcctLogin">
         <SingleEvtConstr> eventType = "Win-Security-531" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_53" phIncidentCategory="Server" function="SECURITY">
     <Name> Logon Time Restriction Violation </Name>
     <active>true</active>
    <Description> Detects logon attempts at times which are not permitted by policy </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LOGON_TIME_VIOLATION" severity="8">
      <ArgList>
        destIpAddr = LoginTimeViolation.reptDevIpAddr, user = LoginTimeViolation.user, incidentCount = LoginTimeViolation.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="LoginTimeViolation" name="LoginTimeViolation">
         <SingleEvtConstr> eventType = "Win-Security-530" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Overall" id="PH_Rule_Access_54" phIncidentCategory="Other" function="SECURITY">
       <Name> Multiple Logon Failures: Same Src, Multiple Hosts </Name>
       <active>true</active>
    <Description> Detects the same source having excessive logon failures at distinct hosts </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FAILED_LOGON_MULTIPLE_HOSTS" severity="10">
      <ArgList>
        srcIpAddr = PasswordScan_ManyDest.srcIpAddr, incidentCount = PasswordScan_ManyDest.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="PasswordScan_ManyDest" name="PasswordScan_ManyDest">
         <SingleEvtConstr> eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN", "PH_RULE_EXCESS_FAILED_LOGON_WIRELESS") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 10 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Overall" id="PH_Rule_Access_55" phIncidentCategory="Other" function="SECURITY">
     <Name> Multiple Logon Failures: Same Src and Dest, Multiple Accounts </Name>
     <active>true</active>
    <Description> Detects same source having excessive login failures at the same destination host but multiple distinct accounts are used during the logon failure </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FAILED_LOGON_MULTIPLE_ACCOUNTS" severity="10">
      <ArgList>
        srcIpAddr = PasswordScan_SameDest_ManyAcct.srcIpAddr, destIpAddr = PasswordScan_SameDest_ManyAcct.destIpAddr, incidentCount = PasswordScan_SameDest_ManyAcct.COUNT (DISTINCT user)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="3600">
      <SubPattern displayName="PasswordScan_SameDest_ManyAcct" name="PasswordScan_SameDest_ManyAcct">
        <SingleEvtConstr> eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_2_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS") </SingleEvtConstr>
	<GroupEvtConstr>COUNT (DISTINCT user) &gt;= 3 </GroupEvtConstr>
	<GroupByAttr>srcIpAddr,destIpAddr </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>
   
   <Rule group="PH_SYS_RULE_Authen_Overall" id="PH_Rule_Access_56" phIncidentCategory="Other" function="SECURITY">
       <Name> Suspicious Logon Failure: no following successful login </Name>
       <active>true</active>
    <Description> Detects an unusual condition where a source has authentication failures at a host but that is not followed by a successful authentication at the same host within 2 hours </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SUSPICIOUS_FAILED_LOGON_NO_SUCCESS" severity="8">
      <ArgList>
        srcIpAddr = FailedLogin.srcIpAddr, destIpAddr = FailedLogin.destIpAddr, user = FailedLogin.user
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="7200">
      <SubPattern displayName="FailedLogin" name="FailedLogin">
        <SingleEvtConstr> eventType IN ("PH_RULE_EXCESS_FAILED_LOGON_NET_DEVICE","PH_RULE_EXCESS_FAILED_LOGON_SERVER","PH_RULE_EXCESS_FAILED_PRIV_LOGON_SERVER","PH_RULE_EXCESS_FAILED_LOGON_DB", "PH_RULE_REPEAT_EXCESS_FAILED_LOGON_WEB", "PH_RULE_EXCESS_FAILED_LOGON_APPL","PH_RULE_EXCESS_FAILED_LOGON_DOMAIN", "PH_RULE_EXCESS_FAILED_LOGON_VPN","PH_RULE_EXCESS_FAILED_LOGON_WIRELESS") </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
	<GroupByAttr>srcIpAddr,destIpAddr,user </GroupByAttr>
      </SubPattern>
      <Operator rank="0" type="NOT_FOLLOWED_BY"/>
      <SubPattern displayName="SuccessLogin" name="SuccessLogin">
	<SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess, Group@PH_SYS_EVENT_HostPrivLogonSuccess, Group@PH_SYS_EVENT_DomainLogonSuccess, Group@PH_SYS_EVENT_VPNLogonSuccess, Group@PH_SYS_EVENT_WirelessLogonSuccess, Group@PH_SYS_EVENT_AppLogonSuccess) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,reptDevIpAddr,user </GroupByAttr>
      </SubPattern>
      <GlobalConstr>FailedLogin.destIpAddr = SuccessLogin.reptDevIpAddr AND FailedLogin.srcIpAddr = SuccessLogin.srcIpAddr, FailedLogin.user = SuccessLogin.user   </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

    <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_57" phIncidentCategory="Network" function="SECURITY">
     <Name> Successful VPN Logon From Outside My Country </Name>
     <active>true</active>
    <Description> Detects VPN logon from outside my country. My Country is set to "United States" and may need to be changed for outside United States deployments </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VPN_LOGON_SUCCESS_OUTSIDE_COUNTRY" severity="8">
      <ArgList>
        srcIpAddr = VPNLoginOutside.srcIpAddr, user = VPNLoginOutside.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="VPNLoginOutside" name="VPNLoginOutside">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_VPNLogonSuccess, Group@PH_SYS_EVENT_VPNLogoff) AND srcGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME) AND eventType NOT IN ("ASA-713049-SiteToSite-VPN-Logon-success")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Network" id="PH_Rule_Access_58" phIncidentCategory="Network" function="SECURITY">
     <Name> Failed VPN Logon From Outside My Country </Name>
     <active>true</active>
    <Description> Detects VPN logon from outside my country. My Country is set to "United States" and may need to be changed for outside United States deployments </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VPN_FAILED_LOGON_OUTSIDE_COUNTRY" severity="8">
      <ArgList>
        srcIpAddr = VPNLoginOutside.srcIpAddr, user = VPNLoginOutside.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="VPNLoginOutside" name="VPNLoginOutside">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_VPNLogonFailure) AND srcGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3 </GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_59" phIncidentCategory="Server" function="SECURITY">
     <Name>Successful Account Activity On a Disabled Account </Name>
     <active>true</active>
    <Description> Detects successful account activity to a recently disabled account </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SUCCESS_ACTIVITY_ON_DISABLED_ACCT" severity="8">
      <ArgList>
        hostIpAddr = AcctDisabled.reptDevIpAddr, user = AcctDisabled.targetUser
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
       <SubPattern displayName="AcctDisabled" name="AcctDisabled">
         <SingleEvtConstr> eventType IN ("Win-Security-629","Win-Security-4725") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,targetUser </GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="FOLLOWED_BY"/>
       <SubPattern displayName="SuccessLogin" name="SuccessLogin">
	<SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess, Group@PH_SYS_EVENT_DomainLogonSuccess) </SingleEvtConstr>
	<GroupByAttr>reptDevIpAddr,user </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
      <GlobalConstr>AcctDisabled.reptDevIpAddr = SuccessLogin.reptDevIpAddr AND AcctDisabled.targetUser = SuccessLogin.user </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

  <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_60" phIncidentCategory="Server" function="SECURITY">
     <Name>Failed Account Activity On Disabled Account </Name>
     <active>true</active>
    <Description> Detects failedaccount activity to a recently disabled account </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FAILED_ACTIVITY_ON_DISABLED_ACCT" severity="8">
      <ArgList>
        hostIpAddr = AcctDisabled.reptDevIpAddr, user = AcctDisabled.targetUser
      </ArgList>
    </IncidentDef>
    <PatternClause window="86400">
       <SubPattern displayName="AcctDisabled" name="AcctDisabled">
         <SingleEvtConstr> eventType IN ("Win-Security-629","Win-Security-4725") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,targetUser </GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="FOLLOWED_BY"/>
       <SubPattern displayName="FailedLogin" name="FailedLogin">
	<SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_DomainLogonFailure) </SingleEvtConstr>
	<GroupByAttr>reptDevIpAddr,user </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
      <GlobalConstr>AcctDisabled.reptDevIpAddr = FailedLogin.reptDevIpAddr AND AcctDisabled.targetUser = FailedLogin.user </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,user,computer,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

    <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_61" phIncidentCategory="Server" function="SECURITY">
     <Name>Concurrent Successful Authentications To Same Account From Multiple Countries</Name>
     <active>true</active>
    <Description> Detects simultaneous successful server/network device/domain authentications to the same system and the same account from different countries. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple countries. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CONCURRENT_SUCCESS_AUTH_MULTI_COUNTRY" severity="9">
      <ArgList>
        destIpAddr = MultiCountryLogon.reptDevIpAddr, user = MultiCountryLogon.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="MultiCountryLogon" name="MultiCountryLogon">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess) AND user IS NOT NULL AND srcGeoCountry IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (DISTINCT srcGeoCountry) &gt;= 2 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_62" phIncidentCategory="Server" function="SECURITY">
     <Name>Concurrent Successful Authentications To Same Account From Multiple Cities</Name>
     <active>true</active>
    <Description> Detects simultaneous successful server/network device/domain authentications to the same system and the same account from different cities. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple cities. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CONCURRENT_SUCCESS_AUTH_MULTI_CITY" severity="9">
      <ArgList>
        destIpAddr = MultiCityLogon.reptDevIpAddr, user = MultiCityLogon.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="MultiCityLogon" name="MultiCityLogon">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess) AND user IS NOT NULL AND srcGeoCity IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (DISTINCT srcGeoCity) &gt;= 2 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,srcGeoCity,user,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

    <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_63" phIncidentCategory="Server" function="SECURITY">
     <Name>Concurrent Failed Authentications To Same Account  From Multiple Countries</Name>
     <active>true</active>
    <Description> Detects simultaneous failed server/network device/domain authentications to the same system and the same account from different countries. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple countries. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CONCURRENT_FAILED_AUTH_MULTI_COUNTRY" severity="9">
      <ArgList>
        destIpAddr = MultiCountryLogon.reptDevIpAddr, user = MultiCountryLogon.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="MultiCountryLogon" name="MultiCountryLogon">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_DomainLogonFailure) AND user IS NOT NULL AND srcGeoCountry IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (DISTINCT srcGeoCountry) &gt;= 2 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_64" phIncidentCategory="Server" function="SECURITY">
     <Name>Concurrent Failed Authentications To Same Account From Multiple Cities</Name>
     <active>true</active>
    <Description> Detects simultaneous failed server/network device/domain authentications to the same system and the same account from different cities. This may indicate stolen credentials unless it is an administrative account and is supposed to be accessed by administrators from multiple cities. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CONCURRENT_FAILED_AUTH_MULTI_CITY" severity="9">
      <ArgList>
        destIpAddr = MultiCityLogon.reptDevIpAddr, user = MultiCityLogon.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="MultiCityLogon" name="MultiCityLogon">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_DomainLogonFailure) AND user IS NOT NULL AND srcGeoCity IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (DISTINCT srcGeoCity) &gt;= 2 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,srcGeoCity,user,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_65" phIncidentCategory="Network" function="SECURITY">
     <Name>Concurrent VPN Authentications To Same Account From Different Cities</Name>
     <active>true</active>
    <Description> Detects simultaneous VPN authentications to the same account within a short period of time from different cities. This may indicate a stolen credential. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CONCURRENT_VPN_AUTH_MULTI_CITY" severity="9">
      <ArgList>
        user = VPNLogonDistinctCity.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="VPNLogonDistinctCity" name="VPNLogonDistinctCity">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_VPNLogonSuccess,Group@PH_SYS_EVENT_VPNLogonFailure) AND user IS NOT NULL AND srcGeoCity IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(DISTINCT srcGeoCity) &gt;= 2 </GroupEvtConstr>
	 <GroupByAttr>user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,srcGeoCity,user,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>
   
   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_66" phIncidentCategory="Server" function="SECURITY">
     <Name>Dormant Account Successful Logon</Name>
     <active>false</active>
    <Description> Detects that an account that has been dormant for more than 60 days have been successfully logged on to. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DORMANT_USER_LOGON" severity="9">
      <ArgList>
        hostIpAddr = DormantUser.hostIpAddr, user = DormantUser.user, userFullName = DormantUser.userFullName
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="DormantUser" name="DormantUser">
         <SingleEvtConstr> eventType = "PH_DISCOV_ADS_DORMANT_ACCT" AND daysSinceLastLogon &gt;= 60</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>hostIpAddr,user,userFullName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="FOLLOWED_BY"/>
       <SubPattern displayName="LogonSuccess" name="LogonSuccess">
         <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess)</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
       <GlobalConstr>DormantUser.hostIpAddr = LogonSuccess.reptDevIpAddr AND DormantUser.user = LogonSuccess.user </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,userFullName,daysSinceLastLogon,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>


   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_67" phIncidentCategory="Server" function="SECURITY">
     <Name>Transient Account Usage</Name>
     <active>true</active>
    <Description> Detects that an account was created, used and then deleted within a short period of time </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TRANSIENT_ACCT_USAGE" severity="9">
      <ArgList>
        user = AccountCreated.user, targetUser = AccountCreated.targetUser 
      </ArgList>
    </IncidentDef>
    <PatternClause window="3600">
       <SubPattern displayName="AccountCreated" name="AccountCreated">
         <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_AccountCreated) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>user,targetUser</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="FOLLOWED_BY"/>
       <SubPattern displayName="LogonSuccess" name="LogonSuccess">
         <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess,Group@PH_SYS_EVENT_DomainLogonSuccess)</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>user</GroupByAttr>
       </SubPattern>
        <Operator rank="1" type="FOLLOWED_BY"/>
       <SubPattern displayName="AccountDeleted" name="AccountDeleted">
         <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_AccountDeleted)</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
	 <GroupByAttr>targetUser</GroupByAttr>
       </SubPattern>
       <GlobalConstr>AccountCreated.targetUser = LogonSuccess.user AND LogonSuccess.user = AccountDeleted.targetUser</GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,srcGeoCountry,user,targetUser,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_68" phIncidentCategory="Server" function="SECURITY">
       <Name>Privileged Command Execution Failure</Name>
       <active>true</active>
    <Description> Detects excessive privileged command execution (e.g. sudo exec) failure at a server</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FAILED_PRIV_EXEC" severity="9">
      <ArgList>
        destIpAddr = PrivExecFailure.reptDevIpAddr, user = PrivExecFailure.user, incidentCount = PrivExecFailure.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="PrivExecFailure" name="PrivExecFailure">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HostPrivExecFailure) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr, user</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

    <Rule group="PH_SYS_RULE_Authen_Server" id="PH_Rule_Access_69" phIncidentCategory="Server" function="SECURITY">
       <Name>Suspicious logon attempt detected</Name>
       <active>true</active>
    <Description> Detects suspicious logon attempts that indicate policy violations, e.g. root logon to database servers, default passwords, attempts to bypass authentication, root logon over unencrypted protocols such as Telnet, ftp, anonymous logons etc.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SUSPICIOUS_LOGON" severity="9">
      <ArgList>
        srcIpAddr = SuspiciousLogon.srcIpAddr,destIpAddr = SuspiciousLogon.reptDevIpAddr,incidentCount = SuspiciousLogon.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="SuspiciousLogon" name="SuspiciousLogon">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_SuspiciousLogon) </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>srcIpAddr, reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Authen_Overall" id="PH_Rule_Access_70" phIncidentCategory="Other" function="SECURITY">
       <Name>Brute Force Login Success </Name>
       <active>true</active>
    <Description> Detects an unusual condition where a source has authentication failures followed by a successful authentication at the same host within 15 minutes </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BRUTEFORCE_LOGON_SUCCESS" severity="9">
      <ArgList>
        srcIpAddr = FailedLogin.srcIpAddr, destIpAddr = FailedLogin.reptDevIpAddr, user = FailedLogin.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="FailedLogin" name="FailedLogin">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_LogonFailure) </SingleEvtConstr>
	<GroupEvtConstr>COUNT(*) &gt;= 5 </GroupEvtConstr>
	<GroupByAttr>srcIpAddr,reptDevIpAddr,user </GroupByAttr>
      </SubPattern>
      <Operator rank="0" type="FOLLOWED_BY"/>
      <SubPattern displayName="SuccessLogin" name="SuccessLogin">
	<SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Logon) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,reptDevIpAddr,user </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
      <GlobalConstr>FailedLogin.reptDevIpAddr = SuccessLogin.reptDevIpAddr AND FailedLogin.srcIpAddr = SuccessLogin.srcIpAddr AND FailedLogin.user = SuccessLogin.user   </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,srcIpAddr,destIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

</Rules>
<Rules>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_ACI_1" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Cisco ACI Critical Fault</Name>
    <active>true</active>
    <Description> Detects a critical Cisco ACI fault </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_CRIT_FAULT" severity="9">
      <ArgList>
        reptDevName = ACIFault.reptDevName, oid = ACIFault.oid, policyName = ACIFault.policyName, changeSet = ACIFault.changeSet
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="ACIFault" name="ACIFault">
        <SingleEvtConstr> eventType ="Cisco_ACI_Fault_Record" AND eventSeverity &gt; 8 </SingleEvtConstr>
	<GroupByAttr> reptDevName, oid, policyName, changeSet </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 10 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,oid, policyName, changeSet, description, rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_ACI_2" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI Node Health Critical </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI Node health has reached a critical level </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_NODE_HEALTH_CRIT" severity="9"  >
      <ArgList>
        reptDevIpAddr = NodeHealthCrit.reptDevIpAddr, reptDevName = NodeHealthCrit.reptDevName, role = NodeHealthCrit.role, healthScore = NodeHealthCrit.AVG(healthScore)
      </ArgList>
    </IncidentDef> 
    <PatternClause window="600">
       <SubPattern displayName="NodeHealthCrit" name="NodeHealthCrit">
	 <Description> </Description>
	 <SingleEvtConstr>eventType = "Cisco_ACI_Node_Health" </SingleEvtConstr>
         <GroupEvtConstr> 
	   AVG(healthScore) &lt; DeviceToCMDBAttr(reptDevIpAddr:ACIHealthScoreThreshCrit) AND COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,role</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,role,healthScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_ACI_3" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI Node Health Warning </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI Node health has reached a warning level </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_NODE_HEALTH_WARN" severity="7"  >
      <ArgList>
        reptDevIpAddr = NodeHealthWarn.reptDevIpAddr, 
	reptDevName = NodeHealthWarn.reptDevName, 
	role = NodeHealthWarn.role, 
	healthScore = NodeHealthWarn.AVG(healthScore)
      </ArgList>
    </IncidentDef> 
    <PatternClause window="600">
       <SubPattern displayName="NodeHealthWarn" name="NodeHealthWarn">
	 <Description> </Description>
	 <SingleEvtConstr> eventType = "Cisco_ACI_Node_Health" </SingleEvtConstr>
         <GroupEvtConstr> AVG(healthScore) &lt;= DeviceToCMDBAttr(hostIpAddr:ACIHealthScoreThreshWarn) AND 
	   AVG(healthScore) &gt;= DeviceToCMDBAttr(hostIpAddr:ACIHealthScoreThreshCrit) AND 
	   COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,role</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,role,healthScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_ACI_4" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI System Health Critical </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI System health has reached a critical level </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_SYS_HEALTH_CRIT" severity="9"  >
      <ArgList>
        reptDevIpAddr = SystemHealthCrit.reptDevIpAddr, 
	reptDevName = SystemHealthCrit.reptDevName, 
	sysDN = SystemHealthCrit.sysDN, 
	healthScore = SystemHealthCrit.AVG(healthScore)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="SystemHealthCrit" name="SystemHealthCrit">
	 <Description> </Description>
	 <SingleEvtConstr>eventType = "Cisco_ACI_Overall_Health" </SingleEvtConstr>
         <GroupEvtConstr> 
	   AVG(healthScore) &lt; DeviceToCMDBAttr(reptDevIpAddr:ACIHealthScoreThreshCrit) AND COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,sysDN </GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,sysDN,healthScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_ACI_5" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI System Health Warning </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI system health has reached a warning level </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_SYS_HEALTH_WARN" severity="7"  >
      <ArgList>
        reptDevIpAddr = SystemHealthWarn.reptDevIpAddr, 
	reptDevName = SystemHealthWarn.reptDevName, 
	sysDN = SystemHealthWarn.sysDN, 
	healthScore = SystemHealthWarn.AVG(healthScore)
      </ArgList>
    </IncidentDef> 
    <PatternClause window="600">
       <SubPattern displayName="SystemHealthWarn" name="SystemHealthWarn">
	 <Description> </Description>
	 <SingleEvtConstr> eventType = "Cisco_ACI_Overall_Health" </SingleEvtConstr>
         <GroupEvtConstr> AVG(healthScore) &lt;= DeviceToCMDBAttr(hostIpAddr:ACIHealthScoreThreshWarn) AND 
	   AVG(healthScore) &gt;= DeviceToCMDBAttr(hostIpAddr:ACIHealthScoreThreshCrit) AND 
	   COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,sysDN</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,sysDN,healthScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_ACI_6" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI Tenant Health Critical </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI Tenant health has reached a critical level </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_TENANT_HEALTH_CRIT" severity="9"  >
      <ArgList>
        reptDevIpAddr = TenantHealthCrit.reptDevIpAddr, 
	reptDevName = TenantHealthCrit.reptDevName, 
	tenantName = TenantHealthCrit.tenantName, 
	healthScore = TenantHealthCrit.AVG(healthScore)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="TenantHealthCrit" name="TenantHealthCrit">
	 <Description> </Description>
	 <SingleEvtConstr>eventType = "Cisco_ACI_Tenant_Health" </SingleEvtConstr>
         <GroupEvtConstr> 
	   AVG(healthScore) &lt; DeviceToCMDBAttr(reptDevIpAddr:ACIHealthScoreThreshCrit) AND COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,tenantName </GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,tenantName,healthScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_ACI_7" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI Tenant Health Warning </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI Tenant health has reached a warning level </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_TENANT_HEALTH_WARN" severity="7"  >
      <ArgList>
        reptDevIpAddr = TenantHealthWarn.reptDevIpAddr, 
	reptDevName = TenantHealthWarn.reptDevName, 
	tenantName = TenantHealthWarn.tenantName, 
	healthScore = TenantHealthWarn.AVG(healthScore)
      </ArgList>
    </IncidentDef> 
    <PatternClause window="600">
       <SubPattern displayName="TenantHealthWarn" name="TenantHealthWarn">
	 <Description> </Description>
	 <SingleEvtConstr> eventType = "Cisco_ACI_Tenant_Health" </SingleEvtConstr>
         <GroupEvtConstr> AVG(healthScore) &lt;= DeviceToCMDBAttr(hostIpAddr:ACIHealthScoreThreshWarn) AND 
	   AVG(healthScore) &gt;= DeviceToCMDBAttr(hostIpAddr:ACIHealthScoreThreshCrit) AND 
	   COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,tenantName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,tenantName,healthScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_ACI_8" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Cisco ACI Cluster Unavailable </Name>
    <active>true</active>
    <Description>Detects that Cisco ACI Cluster is not fully available </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CISCO_ACI_CLUSTER_UNAVAIL" severity="9"  >
      <ArgList>
        reptDevIpAddr = SystemHealthWarn.reptDevIpAddr, 
	reptDevName = SystemHealthWarn.reptDevName, 
	controllerName = SystemHealthWarn.controllerName, 	
	sysDN = SystemHealthWarn.sysDN
      </ArgList>
    </IncidentDef> 
    <PatternClause window="600">
       <SubPattern displayName="SystemHealthWarn" name="SystemHealthWarn">
	 <Description> </Description>
	 <SingleEvtConstr> eventType = "Cisco_ACI_Cluster_Health" </SingleEvtConstr>
         <GroupEvtConstr> adminState != "in-service" OR operationalState != "available" OR healthState != "fully-fit"
	 </GroupEvtConstr>
         <GroupByAttr>reptDevIpAddr,reptDevName,controllerName,sysDN</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,controllerName,sysDN,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

</Rules>
<Rules>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_1" phIncidentCategory="Network" function="SECURITY">
    <Name>Backdoor Found</Name>
    <active>true</active>
    <Description> Detects connection to or response from a backdoor. A successful exploit often creates a backdoor to which a malicious host can connect. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BACKDOOR_FOUND" severity="9">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_Backdoor_Found) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_2" phIncidentCategory="Network" function="SECURITY">
    <Name>Spyware Found</Name>
    <active>true</active>
    <Description>Detects spyware installed on hosts and it is not clear whether the spyware was cleaned or not. Spyware are malicious applications that can be installed on hosts without the knowledge of the user. Once installed, a spyware automatically run each time the host is started, records URLs visited, user name, password and credit card information and send this information to spyware authors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SPYWARE_FOUND" severity="9">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_Spyware_Found) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
 
  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_3" phIncidentCategory="Network" function="SECURITY">
    <Name>Spyware Found And Cleaned</Name>
    <active>true</active>
    <Description>Detects that host or gateway IPS found and cleaned spyware installed on hosts. Spyware are malicious applications that can be installed on hosts without the knowledge of the user. Once installed, a spyware automatically run each time the host is started, records URLs visited, user name, password and credit card information and send this information to spyware authors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SPYWARE_FOUND_CLEANED" severity="5">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_Spyware_Remedy_Success) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_4" phIncidentCategory="Network" function="SECURITY">
    <Name>Suspicious Database Logon</Name>
    <active>true</active>
    <Description>Detects suspicious database logon - success or failure. This includes multiple login failures, privileged logins, brute force successful logins </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SUSPICIOUS_DB_LOGON" severity="7">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr,destIpAddr = IPS.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SERVER_FAILED_LOGIN</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_MultipleDBLogonFailure, Group@PH_SYS_EVENT_SuspiciousDBLogonAttempt) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_5" phIncidentCategory="Network" function="SECURITY">
    <Name>Info Leak Exploits</Name>
    <active>true</active>
    <Description>Detects information leak attacks </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INFO_LEAK_ATTACK" severity="5">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_InfoLeakExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule> 
 
  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_6" phIncidentCategory="Network" function="SECURITY">
    <Name>Privilege Escalation Exploits</Name>
    <active>true</active>
    <Description>Detects privilege escalation attempts</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PRIV_ESCALATE_ATTACK" severity="7">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_PrivEscalationExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule> 

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_7" phIncidentCategory="Network" function="SECURITY">
    <Name>ARP Exploit</Name>
    <active>true</active>
    <Description>Detects ARP attack </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ARP_ATTACK" severity="7">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_ARPExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_8" phIncidentCategory="Network" function="SECURITY">
    <Name>Identity Spoofing Exploit</Name>
    <active>true</active>
    <Description>Detects IP Address spoofing exploits </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SPOOF_ATTACK" severity="7">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_SpoofExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
 
 <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_9" phIncidentCategory="Network" function="SECURITY">
    <Name>Replay Exploit</Name>
    <active>true</active>
    <Description>Detects replay exploits </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPLAY_ATTACK" severity="7">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_ReplayExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_10" phIncidentCategory="Network" function="SECURITY">
    <Name>Session Hijacking Exploit</Name>
    <active>true</active>
    <Description>Detects seesion hijacking exploits </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SESSION_HIJACK_ATTACK" severity="7">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr,destIpAddr = IPS.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_SessionHijackExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_11" phIncidentCategory="Network" function="SECURITY">
    <Name>Compromised Host Detected</Name>
    <active>true</active>
    <Description>Detects traffic that indicates a comproimised host </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SESSION_COMPROMISED_HOST" severity="9">
      <ArgList>
        srcIpAddr = IPS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_Compromised) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_12" phIncidentCategory="Network" function="SECURITY">
    <Name>Wireless Man-in-the-middle attack detected</Name>
    <active>true</active>
    <Description>Detects traffic that indicates a man in the middle attack  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WIRELESS_MITM_ATTACK" severity="9">
      <ArgList>
        srcMACAddr = IPS.srcMACAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="IPS" name="IPS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_WirelessMITM) </SingleEvtConstr>
	<GroupByAttr>srcMACAddr</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,srcMACAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
   <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_13" phIncidentCategory="Network" function="SECURITY">
    <Name>DoS Attack on Network Devices</Name>
    <active>true</active>
    <Description>Detects high severity Denial of Service Attacks on network devices that typically exploits a code vulnerability and causes excessive resource (CPU or memory) utilization or crashes the device</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_NETWORK_DOS" severity="9">
      <ArgList>
        srcIpAddr = DoS.srcIpAddr, destIpAddr = DoS.destIpAddr 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_UNDER_ATTACK</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="DoS" name="DoS">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND destIpAddr IN (Group@PH_SYS_DEVICE_Network) AND eventType IN (Group@PH_SYS_EVENT_DoSExploit) AND eventSeverity &gt;= 7 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_14" phIncidentCategory="Network" function="SECURITY">
    <Name>Stealth Scan </Name>
    <active>true</active>
    <Description>Detects scans using a tool like NMap, Satan, Saint, Nikto etc </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SCAN_STEALTH" severity="9">
      <ArgList>
        srcIpAddr = IPSScan.srcIpAddr, incidentCount = IPSScan.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSScan" name="IPSScan">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_ToolReconn) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_15" phIncidentCategory="Application" function="SECURITY">
    <Name>Targeted System/Application Scan </Name>
    <active>true</active>
    <Description>Detects targeted application or detailed system level scans  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SCAN_APP_SYS" severity="7">
      <ArgList>
        srcIpAddr = IPSScan.srcIpAddr, incidentCount = IPSScan.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSScan" name="IPSScan">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_AppReconn,Group@PH_SYS_EVENT_HostReconn) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_16" phIncidentCategory="Network" function="SECURITY">
    <Name>WLAN Scan </Name>
    <active>true</active>
    <Description>Detects Wireless LAN scanning activity using tools such as NetStumbler, Wellenreiter etc  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SCAN_WLAN" severity="7">
      <ArgList>
        srcMACAddr = IPSScan.srcMACAddr, incidentCount = IPSScan.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSScan" name="IPSScan">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WirelessReconn) </SingleEvtConstr>
	<GroupByAttr> srcMACAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcMACAddr,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_ADV_17" phIncidentCategory="Network" function="SECURITY">
    <Name>DoS Attack on WLAN Infrastructure</Name>
    <active>true</active>
    <Description>Detects high severity Denial of Service Attacks on WLAN infrastructure</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_WLAN_DOS" severity="9">
      <ArgList>
        srcMACAddr = DoS.srcMACAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DoS" name="DoS">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WirelessDoS) AND eventSeverity &gt;= 7 </SingleEvtConstr>
	<GroupByAttr> srcMACAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcMACAddr,destMACAddr,reptDevIpAddr,reptDevName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_18" phIncidentCategory="Network" function="SECURITY">
    <Name>IPS/Anti-virus Evasion attempts</Name>
    <active>true</active>
    <Description>Detects NIPS evasion attempts </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EVASION_NIPS" severity="7">
      <ArgList>
        srcIpAddr = IPSScan.srcIpAddr, incidentCount = IPSScan.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSScan" name="IPSScan">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_EvasionExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_19" phIncidentCategory="Network" function="SECURITY">
    <Name>Default password usage</Name>
    <active>true</active>
    <Description>Detects use of default password on a destination host</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEFAULT_PWD" severity="7">
      <ArgList>
        destIpAddr = IPSScan.destIpAddr, incidentCount = IPSScan.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSScan" name="IPSScan">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType IN (Group@PH_SYS_EVENT_DefaultPwd) </SingleEvtConstr>
	<GroupByAttr> destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_20" phIncidentCategory="Server" function="SECURITY">
    <Name>System Exploit Detected by Network IPS</Name>
    <active>true</active>
    <Description>Detects an IPS detected exploit (e.g. Buffer overflow, Privilege escalation) optionally preceded by a Reconnaissance</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYSTEM_EXPLOIT_IPS" severity="7">
      <ArgList>
        srcIpAddr = Reconn.srcIpAddr, destIpAddr = Attack.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_UNDER_ATTACK</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Reconn" name="Reconn">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Reconn) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>

      <Operator rank="1" type="FOLLOWED_BY"/>

      <SubPattern displayName="Attack" name="Attack">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND 
	  eventType IN (Group@PH_SYS_EVENT_BufferOverflowExploit, Group@PH_SYS_EVENT_CommandExecExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>

      <Operator rank="0" type="OR"/>

      <SubPattern displayName="Attack" name="Attack">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND 
	  eventType IN (Group@PH_SYS_EVENT_BufferOverflowExploit, Group@PH_SYS_EVENT_CommandExecExploit) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>

      <GlobalConstr> Reconn.destIpAddr = Attack.destIpAddr</GlobalConstr>

    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_ADV_21" phIncidentCategory="Server" function="SECURITY">
    <Name>System Exploit Detected by Network IPS - Likely Success </Name>
    <active>true</active>
    <Description>Detects a likely succesful IPS detected exploit (e.g. Buffer overflow, Privilege escalation) optionally preceded by a Reconnaissance and follwed by outbound connections and/or excessive scanning</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYSTEM_EXPLOIT_IPS_LIKELY" severity="8">
      <ArgList>
        destIpAddr = Exploit.destIpAddr
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_UNDER_ATTACK</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Exploit" name="Exploit">
        <SingleEvtConstr> eventType = "PH_RULE_SYSTEM_EXPLOIT_IPS" </SingleEvtConstr>
	<GroupByAttr> destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>

      <Operator rank="1" type="FOLLOWED_BY"/>

      <SubPattern displayName="Outbound" name="Outbound">
        <SingleEvtConstr> destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND 
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND destIpPort IN (21,23,80,443)</SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>

      <Operator rank="0" type="OR"/>

      <SubPattern displayName="Deny" name="Deny">
        <SingleEvtConstr> eventType = "PH_RULE_EXCESS_DENY_SRC" </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>

      <GlobalConstr> Exploit.destIpAddr = Outbound.srcIpAddr AND Exploit.destIpAddr = Deny.srcIpAddr</GlobalConstr>

    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>

<Rules>
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Excessive_ICMP_Unreachables" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Excessive ICMP Unreachables</Name>
    <active>true</active>
    <Description> Detects an usually high frequency of ICMP destination unreachable packets between the same source and destination - this indicates routing error </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ICMP_UNREACH_SAME_HOSTS" severity="6">
      <ArgList>
        srcIpAddr = ExcessICMPUnreach.srcIpAddr, destIpAddr =ExcessICMPUnreach.destIpAddr   
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="ExcessICMPUnreach" name="ExcessICMPUnreach">
        <SingleEvtConstr> ipProto = 1 AND icmpType = 3 AND eventType IN ("IOS-NETFLOW-BI", Group@PH_SYS_EVENT_PermitTraffic,Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 10 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_No_Response_To_Ping_Net" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Down - no ping response</Name>
    <Description>Detects a device does not respond to ping - 10 out of 10 ping packets are lost - either the host is down or there is a routing problem</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NON_RESPONSIVE_NET_DEV" severity="10">
      <ArgList>
        hostIpAddr = AllPingLossNet.hostIpAddr, hostName = AllPingLossNet.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="120">
       <SubPattern displayName="AllPingLossNet" name="AllPingLossNet">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	  <GroupEvtConstr> AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="OR"/>
       <SubPattern displayName="SystemShutdown" name="SystemShutdown">
	 <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_SystemShutdown) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	 <GroupByAttr>hostIpAddr,hostName </GroupByAttr>
       </SubPattern>
       <GlobalConstr>AllPingLossNet.hostIpAddr = SystemShutdown.hostIpAddr </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,pktLossPct,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NON_RESPONSIVE_NET_DEV_CLEAR">
	<ArgList>hostIpAddr = AllPingLossNet_CLEAR.hostIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NON_RESPONSIVE_NET_DEV.hostIpAddr = PH_RULE_NON_RESPONSIVE_NET_DEV_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="AllPingLossNet_CLEAR" name="AllPingLossNet_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	  <GroupEvtConstr> AVG(pktLossPct) &lt; 10 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Degraded_Ping_Net" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Degraded - Lossy Ping Response</Name>
    <active>true</active>
    <Description> Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_PING_NET_DEV" severity="8">
      <ArgList>
        hostIpAddr = PartPingLossNet.hostIpAddr,hostName=PartPingLossNet.hostName, pktLossPct=PartPingLossNet.AVG(pktLossPct))
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
       <SubPattern displayName="PartPingLossNet" name="PartPingLossNet">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	 <GroupEvtConstr> AVG(pktLossPct) &gt;= 50 AND AVG(pktLossPct) &lt; 100 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Aut-o" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DEGRADED_PING_NET_DEV_CLEAR">
	<ArgList>hostIpAddr = PartPingLossNet_CLEAR.hostIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DEGRADED_PING_NET_DEV.hostIpAddr = PH_RULE_DEGRADED_PING_NET_DEV_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="PartPingLossNet_CLEAR" name="PartPingLossNet_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	  <!--<GroupEvtConstr> AVG(pktLossPct) &lt; 10 AND AVG(avgDurationMSec) &lt; 50 AND COUNT(*) &gt;= 2 </GroupEvtConstr>-->
          <GroupEvtConstr> AVG(pktLossPct) &lt; 10 AND COUNT(*) &gt;= 2 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_No_Response_To_Ping_Server" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Server Down - No Ping Response</Name>
    <Description>Detects a device does not respond to ping - 10 out of 10 ping packets are lost - either the host is down or there is a routing problem</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NON_RESPONSIVE_SERVER" severity="10">
      <ArgList>
        hostIpAddr = AllPingLossSrv.hostIpAddr, hostName = AllPingLossSrv.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="AllPingLossSrv" name="AllPingLossSrv">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	  <GroupEvtConstr> AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostIpAddr, hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,pktLossPct,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NON_RESPONSIVE_SERVER_CLEAR">
	<ArgList>hostIpAddr = AllPingLossSrv_CLEAR.hostIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NON_RESPONSIVE_SERVER.hostIpAddr = PH_RULE_NON_RESPONSIVE_SERVER_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="AllPingLossSrv_CLEAR" name="AllPingLossSrv_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(pktLossPct) &lt; 10 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Degraded_Ping_Server" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Server Degraded - Lossy Ping Response</Name>
    <active>true</active>
    <Description> Detects a host with degraded ping response - more than 50% packet loss and more than 100 ms avg response time</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_PING_SERVER" severity="8">
      <ArgList>
        hostIpAddr = PartPingLossSrv.hostIpAddr, hostName=PartPingLossSrv.hostName, pktLossPct=PartPingLossSrv.AVG(pktLossPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="PartPingLossSrv" name="PartPingLossSrv">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <!--<GroupEvtConstr> (AVG(pktLossPct) &gt;= 50 OR AVG(avgDurationMSec) &gt;= 100) AND COUNT(*) &gt;= 1 </GroupEvtConstr>-->
	 <GroupEvtConstr> AVG(pktLossPct) &gt;= 50 AND AVG(pktLossPct) &lt; 100 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,avgDurationMSec,minDurationMSec,pktLossPct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DEGRADED_PING_SERVER_CLEAR">
	<ArgList>hostIpAddr = PartPingLossSrv_CLEAR.hostIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DEGRADED_PING_SERVER.hostIpAddr = PH_RULE_DEGRADED_PING_SERVER_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="PartPingLossSrv_CLEAR" name="PartPingLossSrv_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PING_STAT" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
          <GroupEvtConstr> AVG(pktLossPct) &lt; 10 AND COUNT(*) &gt;= 2 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_10" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Non-critical Network Device Interface Staying Down</Name>
    <active>true</active>
    <Description> Detects that a non-critical interface of a network device is staying down - that is didn't come up within 5 minutes of going down </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DOWN_INTF_NET_NONCRIT" severity="9">
      <ArgList>
        hostIpAddr = IntfDownNetDev.hostIpAddr,hostName = IntfDownNetDev.hostName, intfName = IntfDownNetDev.intfName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
       <SubPattern displayName="IntfDownNetDev" name="IntfDownNetDev">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "No" </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
       </SubPattern>
       <Operator rank="0" type="NOT_FOLLOWED_BY"/>
       <SubPattern displayName="IntfUpNetDev" name="IntfUpNetDev">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "No" </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
       </SubPattern>
       <GlobalConstr>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr AND IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </AttrList>
    </TriggerEventDisplay>

    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DOWN_INTF_NET_NONCRIT_CLEAR">
	<ArgList>hostIpAddr = IntfDownNetDev_CLEAR.hostIpAddr,intfName = IntfDownNetDev_CLEAR.intfName</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DOWN_INTF_NET_NONCRIT.hostIpAddr = PH_RULE_DOWN_INTF_NET_NONCRIT_CLEAR.hostIpAddr, PH_RULE_DOWN_INTF_NET_NONCRIT.intfName = PH_RULE_DOWN_INTF_NET_NONCRIT_CLEAR.intfName </ClearConstr>
      <PatternClause window="120">
	<SubPattern displayName="IntfDownNetDev_CLEAR" name="IntfDownNetDev_CLEAR">
          <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "No" </SingleEvtConstr>
          <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	</SubPattern>
	<Operator rank="0" type="NOT_FOLLOWED_BY"/>
	<SubPattern displayName="IntfUpNetDev_CLEAR" name="IntfUpNetDev_CLEAR">
          <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "No" </SingleEvtConstr>
          <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	</SubPattern>
	<GlobalConstr>IntfDownNetDev_CLEAR.hostIpAddr = IntfUpNetDev_CLEAR.hostIpAddr AND IntfDownNetDev_CLEAR.intfName = IntfUpNetDev_CLEAR.intfName 
	</GlobalConstr>
      </PatternClause>
    </ClearCondition>
  </Rule>

   <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_11" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Server Network Interface Staying Down</Name>
    <active>true</active>
    <Description> Detects that a network interface of a server stays down - that is didn't come up within 5 minutes of going down </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DOWN_INTF_SERVER" severity="6">
      <ArgList>
        hostIpAddr = IntfDownSrv.hostIpAddr, hostName = IntfDownSrv.hostName, intfName = IntfDownSrv.intfName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="IntfDownSrv" name="IntfDownSrv">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="NOT_FOLLOWED_BY"/>
       <SubPattern displayName="IntfUpSrv" name="IntfUpSrv">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
       </SubPattern>
       <GlobalConstr>IntfDownSrv.hostIpAddr = IntfUpSrv.hostIpAddr AND IntfDownSrv.intfName = IntfUpSrv.intfName 
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_12" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Interface Flapping</Name>
    <active>true</active>
    <Description> Detects that a network interface of a network device is flapping - that is, coming up and down more than 3 times in 15 minutes. This may indicate hardware issues. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INTF_FLAP_NET_DEV" severity="9">
      <ArgList>
        hostIpAddr = IntfDownNetDev.hostIpAddr, hostName = IntfDownNetDev.hostName, intfName = IntfDownNetDev.intfName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="IntfDownNetDev" name="IntfDownNetDev">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, intfName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="AND"/>
       <SubPattern displayName="IntfUpNetDev" name="IntfUpNetDev">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
       </SubPattern>
       <GlobalConstr>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr AND IntfDownNetDev.intfName = IntfUpNetDev.intfName 
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_13" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Server Network Interface Flapping</Name>
    <active>true</active>
    <Description> Detects that a network interface of a server is flapping - that is, coming up and down more than 3 times in 15 minutes. This may indicate hardware issues. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INTF_FLAP_SERVER" severity="9">
      <ArgList>
        hostIpAddr = IntfDownSrv.hostIpAddr, hostName = IntfDownSrv.hostName, intfName = IntfDownSrv.intfName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="IntfDownSrv" name="IntfDownSrv">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, intfName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="AND"/>
       <SubPattern displayName="IntfUpSrv" name="IntfUpSrv">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
       </SubPattern>
       <GlobalConstr>IntfDownSrv.hostIpAddr = IntfUpSrv.hostIpAddr AND IntfDownSrv.intfName = IntfUpSrv.intfName 
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,intfName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_14" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Interface Duplex Mismatch</Name>
    <active>true</active>
    <Description> Detects half/Full duplex mismatch on an network interface. This indicates configuration issues. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INTF_DUPLEX_MISMATCH" severity="9">
      <ArgList>
        srcIpAddr = IntfDuplexMismatch.reptDevIpAddr,srcIntfName = IntfDuplexMismatch.srcIntfName,destName = IntfDuplexMismatch.destName,destIntfName = IntfDuplexMismatch.destIntfName	
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="IntfDuplexMismatch" name="IntfDuplexMismatch">
        <SingleEvtConstr> eventType = "IOS-CDP-DUPLEX_MISMATCH" AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	<GroupEvtConstr>COUNT(*) &gt; 5</GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,srcIntfName,destName,destIntfName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIntfName,destName,destIntfName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_No_Service_Response" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Service Down - No Response to STM</Name>
    <Description>Detects a service suddenly went down from up state and is no longer responding to synthetic transaction monitoring probes.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NON_RESPONSIVE_SERVICE" severity="9">
      <ArgList>
        hostName=AppDown.hostName,hostIpAddr=AppDown.hostIpAddr,endUserMonitorName=AppDown.endUserMonitorName
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="AppDown" name="AppDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_FAIL" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,endUserMonitorName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,endUserMonitorName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NON_RESPONSIVE_SERVICE_CLEAR">
	<ArgList>hostIpAddr=AppDown_CLEAR.hostIpAddr,hostName=AppDown_CLEAR.hostName,endUserMonitorName=AppDown_CLEAR.endUserMonitorName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NON_RESPONSIVE_SERVICE.hostIpAddr = PH_RULE_NON_RESPONSIVE_SERVICE_CLEAR.hostIpAddr,
                    PH_RULE_NON_RESPONSIVE_SERVICE.hostName = PH_RULE_NON_RESPONSIVE_SERVICE_CLEAR.hostName,
                    PH_RULE_NON_RESPONSIVE_SERVICE.endUserMonitorName = PH_RULE_NON_RESPONSIVE_SERVICE_CLEAR.endUserMonitorName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AppDown_CLEAR" name="AppDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_SUCCESS" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 2 </GroupEvtConstr>
	  <GroupByAttr>hostName,hostIpAddr,endUserMonitorName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

   <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_15" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Important process staying Down</Name>
    <active>true</active>
    <Description> Detects that an important server process staying down - that is didn't come up within 5 minutes of going down </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IMPORTANT_APP_STAY_DOWN" severity="10">
      <ArgList>
        hostIpAddr = AppDownSrv.hostIpAddr, hostName = AppDownSrv.hostName, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="AppDownSrv" name="AppDownSrv">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PROC_STOP" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, appName,swProcName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="NOT_FOLLOWED_BY"/>
       <SubPattern displayName="AppUpSrv" name="AppUpSrv">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PROC_START" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, appName,swProcName</GroupByAttr>
       </SubPattern>
       <GlobalConstr>AppDownSrv.hostIpAddr = AppUpSrv.hostIpAddr AND AppDownSrv.appName = AppUpSrv.appName 
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_15B" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Important process down</Name>
    <active>true</active>
    <Description> Detects that an important server process stopped </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IMPORTANT_APP_DOWN" severity="10">
      <ArgList>
        hostIpAddr = AppDownSrv.hostIpAddr, hostName = AppDownSrv.hostName, appName = AppDownSrv.appName, swProcName = AppDownSrv.swProcName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="AppDownSrv" name="AppDownSrv">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PROC_STOP" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, appName,swProcName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName,appName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_IMPORTANT_APP_DOWN_CLEAR">
	<ArgList>hostIpAddr=AppDownSrv_CLEAR.hostIpAddr,appName = AppDownSrv_CLEAR.appName, swProcName = AppDownSrv_CLEAR.swProcName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_IMPORTANT_APP_DOWN.hostIpAddr =PH_RULE_IMPORTANT_APP_DOWN_CLEAR.hostIpAddr,
                    PH_RULE_IMPORTANT_APP_DOWN.appName = PH_RULE_IMPORTANT_APP_DOWN_CLEAR.appName,
                    PH_RULE_IMPORTANT_APP_DOWN.swProcName = PH_RULE_IMPORTANT_APP_DOWN_CLEAR.swProcName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AppDownSrv_CLEAR" name="AppDownSrv_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PROC_START" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,appName,swProcName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_15C" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Auto Service Stopped</Name>
    <active>true</active>
    <Description> Detects that an automatically running service stopped. Currently this works for windows servers and is detected via WMI. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AUTO_SRVC_DOWN" severity="10">
      <ArgList>
        hostIpAddr = SrvcDown.hostIpAddr, hostName = SrvcDown.hostName, serviceName = SrvcDown.serviceName, servicePath = SrvcDown.servicePath
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="SrvcDown" name="SrvcDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_AUTO_SVC_START_TO_STOP" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,serviceName,servicePath</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostIpAddr,hostName,serviceName,servicePath,serviceDesc </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_AUTO_SRVC_DOWN_CLEAR">
	<ArgList>hostIpAddr=SrvcDown_CLEAR.hostIpAddr,hostName = SrvcDown_CLEAR.hostName, serviceName = SrvcDown_CLEAR.serviceName,servicePath = SrvcDown_CLEAR.servicePath
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> 
           PH_RULE_AUTO_SRVC_DOWN.hostIpAddr = PH_RULE_AUTO_SRVC_DOWN_CLEAR.hostIpAddr, 
           PH_RULE_AUTO_SRVC_DOWN.hostName = PH_RULE_AUTO_SRVC_DOWN_CLEAR.hostName, 
           PH_RULE_AUTO_SRVC_DOWN.serviceName = PH_RULE_AUTO_SRVC_DOWN_CLEAR.serviceName, 
           PH_RULE_AUTO_SRVC_DOWN.servicePath = PH_RULE_AUTO_SRVC_DOWN_CLEAR.servicePath
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="SrvcDown_CLEAR" name="SrvcDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_AUTO_SVC_STOP_TO_START" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,hostName,serviceName,servicePath</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Cont_No_Service_Response" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Service Staying Down - No Response to STM</Name>
    <active>false</active>
    <Description>Detects a service staying down - that is went from up to down and did not come up and is no longer responding to end user monitoring probes.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE" severity="10">
      <ArgList>
        hostName=AppDown.hostName,hostIpAddr=AppDown.hostIpAddr,endUserMonitorName=AppDown.endUserMonitorName
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="AppDown" name="AppDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_FAIL" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,endUserMonitorName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="NOT_FOLLOWED_BY"/>
       <SubPattern displayName="AppUp" name="AppUp">
         <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_SUCCESS" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,endUserMonitorName</GroupByAttr>
       </SubPattern>
       <GlobalConstr>
	 AppUp.hostName = AppDown.hostName AND AppUp.hostIpAddr = AppDown.hostIpAddr AND AppUp.endUserMonitorName = AppDown.endUserMonitorName
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appPort,endUserMonitorName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE_CLEAR">
	<ArgList>
            hostIpAddr=AppDown_CLEAR.hostIpAddr,
            hostName=AppDown_CLEAR.hostName,
            endUserMonitorName=AppDown_CLEAR.endUserMonitorName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> 
          PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE.hostIpAddr = PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE_CLEAR.hostIpAddr,
	  PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE.hostName = PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE_CLEAR.hostName,
          PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE.endUserMonitorName = PH_RULE_NON_RESPONSIVE_SERVICE_CONTINUE_CLEAR.endUserMonitorName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AppDown_CLEAR" name="AppDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_SUCCESS" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 2 AND AVG(appResponseTimeMSec) &lt;= 2000 </GroupEvtConstr>
	  <GroupByAttr>hostName,hostIpAddr,endUserMonitorName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>    
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Degraded_Service_Response" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Service Degraded - Slow Response to STM</Name>
    <Description>Detects that the response time of a end user monitored service is greater than a defined threshold (average over 3 samples in 15 minutes is more than 5 seconds)</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_SERVICE" severity="7">
      <ArgList>
        hostName=ResponseHigh.hostName,hostIpAddr=ResponseHigh.hostIpAddr,endUserMonitorName=ResponseHigh.endUserMonitorName,endUserMonitorStep=ResponseHigh.endUserMonitorStep,appResponseTimeMSec=ResponseHigh.AVG(appResponseTimeMSec)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="ResponseHigh" name="ResponseHigh">
        <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_SUCCESS" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 3 AND AVG(appResponseTimeMSec) &gt; 5000 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,endUserMonitorName,endUserMonitorStep</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,appGroupName,appName,endUserMonitorName,endUserMonitorStep,appResponseTimeMSec </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DEGRADED_SERVICE_CLEAR">
	<ArgList>hostIpAddr=ResponseHigh_CLEAR.hostIpAddr,hostName=ResponseHigh_CLEAR.hostName,endUserMonitorName=ResponseHigh_CLEAR.endUserMonitorName,endUserMonitorStep=ResponseHigh_CLEAR.endUserMonitorStep
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DEGRADED_SERVICE.hostIpAddr = PH_RULE_DEGRADED_SERVICE_CLEAR.hostIpAddr,
                    PH_RULE_DEGRADED_SERVICE.hostName = PH_RULE_DEGRADED_SERVICE_CLEAR.hostName,
                    PH_RULE_DEGRADED_SERVICE.endUserMonitorName = PH_RULE_DEGRADED_SERVICE_CLEAR.endUserMonitorName,
		    PH_RULE_DEGRADED_SERVICE.endUserMonitorStep = PH_RULE_DEGRADED_SERVICE_CLEAR.endUserMonitorStep
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="ResponseHigh_CLEAR" name="ResponseHigh_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_EUM_SUCCESS" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 2 AND AVG(appResponseTimeMSec) &lt;= 2000 </GroupEvtConstr>
	  <GroupByAttr>hostName,hostIpAddr,endUserMonitorName,endUserMonitorStep</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_21" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Hardware Warning</Name>
    <Description>Detects a network device hardware issue that is of warning criticality.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_HW_WARN" severity="5">
      <ArgList>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
      <SubPattern displayName="HwIssueWarn" name="HwIssueWarn">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,hwComponentName,hwComponentStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_22" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Hardware Critical</Name>
    <Description>Detects a critical network device hardware alert.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_HW_CRITICAL" severity="9">
      <ArgList>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueCrit" name="HwIssueCrit">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,hwComponentName,hwComponentStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_23" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Server Hardware Warning</Name>
    <Description>Detects a server hardware issue that is of warning criticality.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_HW_WARN" severity="5">
      <ArgList>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueWarn" name="HwIssueWarn">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,hwComponentName,hwComponentStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_24" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Server Hardware Critical</Name>
    <Description>Detects a critical server hardware alert.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_HW_CRITICAL" severity="9">
      <ArgList>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueCrit" name="HwIssueCrit">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,hwComponentName,hwComponentStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_25" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Server Network Low Port Staying Down </Name>
    <Description>Detects a low TCP/UDP port on a server staying down - that is, went from up to down and did not come up in 10 min</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETWORK_PORT_STAY_DOWN" severity="10">
      <ArgList>
        hostName=PortDown.hostName,hostIpAddr=PortDown.hostIpAddr,serviceName=PortDown.serviceName,ipPort=PortDown.ipPort,ipProto=PortDown.ipProto
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="PortDown" name="PortDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PORT_CLOSE" AND ipPort &lt;= 1024 AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,serviceName,ipProto,ipPort</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="NOT_FOLLOWED_BY"/>
       <SubPattern displayName="PortStillDown" name="PortStillDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_PORT_OPEN" AND ipPort &lt;= 1024 AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,serviceName,ipProto,ipPort</GroupByAttr>
       </SubPattern>
       <GlobalConstr>
	 PortStillDown.hostName = PortDown.hostName AND PortStillDown.hostIpAddr = PortDown.hostIpAddr AND PortStillDown.serviceName = PortDown.serviceName AND PortStillDown.ipPort = PortDown.ipPort AND PortStillDown.ipProto = PortDown.ipProto
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,serviceName,ipProto,ipPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_31" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>BGP Neighbor Down </Name>
    <active>true</active>
    <Description> Detects that a BGP neighbor is down </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BGP_NBR_DOWN" severity="9">
      <ArgList>
        srcIpAddr = BGPDown.reptDevIpAddr, srcName=BGPDown.reptDevName, destIpAddr = BGPDown.destIpAddr 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcName">
       <WatchList>PH_DYNLIST_ROUTING_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="BGPDown" name="BGPDown">
        <SingleEvtConstr> eventType = "IOS-BGP-ADJCHANGE-TO-DOWN" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,destIpAddr, reptDevName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,srcASNum,destASNum,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_BGP_NBR_DOWN_CLEAR">
	<ArgList>srcIpAddr = BGPDown_CLEAR.reptDevIpAddr,destIpAddr = BGPDown_CLEAR.destIpAddr </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_BGP_NBR_DOWN.srcIpAddr = PH_RULE_BGP_NBR_DOWN_CLEAR.srcIpAddr, PH_RULE_BGP_NBR_DOWN.destIpAddr = PH_RULE_BGP_NBR_DOWN_CLEAR.destIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="BGPDown_CLEAR" name="BGPDown_CLEAR">
          <SingleEvtConstr> eventType = "IOS-BGP-ADJCHANGE-TO-UP"  </SingleEvtConstr>
          <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,destIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_32" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>OSPF Neighbor Down </Name>
    <active>true</active>
    <Description> Detects that a OSPF neighbor is down </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_OSPF_NBR_DOWN" severity="9">
      <ArgList>
        srcIpAddr = OSPFDown.reptDevIpAddr, srcName=OSPFDown.reptDevName, srcIntfName = OSPFDown.srcIntfName,destIpAddr = OSPFDown.destIpAddr 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcName">
       <WatchList>PH_DYNLIST_ROUTING_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="OSPFDown" name="OSPFDown">
        <SingleEvtConstr> eventType = "IOS-OSPF-ADJCHG-TO-DOWN" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,destIpAddr,srcIntfName,reptDevName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,ospfAreaId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_OSPF_NBR_DOWN_CLEAR">
	<ArgList>srcIpAddr = OSPFDown_CLEAR.reptDevIpAddr,destIpAddr = OSPFDown_CLEAR.destIpAddr </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_OSPF_NBR_DOWN.srcIpAddr = PH_RULE_OSPF_NBR_DOWN_CLEAR.srcIpAddr, PH_RULE_OSPF_NBR_DOWN.destIpAddr = PH_RULE_OSPF_NBR_DOWN_CLEAR.destIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="OSPFDown_CLEAR" name="OSPFDown_CLEAR">
          <SingleEvtConstr> eventType = "IOS-OSPF-ADJCHG-TO-UP"  </SingleEvtConstr>
          <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,destIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Avail_33" phIncidentCategory="Storage" function="AVAILABILITY">
    <Name>Storage Hardware Warning</Name>
    <Description>Detects a storage hardware issue that is of warning criticality.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_STORAGE_HW_WARN" severity="5">
      <ArgList>
        hostName=HwIssueWarn.hostName,hostIpAddr=HwIssueWarn.hostIpAddr,hwComponentName=HwIssueWarn.hwComponentName,hwComponentStatus = HwIssueWarn.hwComponentStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueWarn" name="HwIssueWarn">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "MEDIUM" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage) </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,hwComponentName,hwComponentStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Avail_34" phIncidentCategory="Storage" function="AVAILABILITY">
    <Name>Storage Hardware Critical</Name>
    <Description>Detects a critical storage hardware alert.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_STORAGE_HW_CRITICAL" severity="9">
      <ArgList>
        hostName=HwIssueCrit.hostName,hostIpAddr=HwIssueCrit.hostIpAddr,hwComponentName=HwIssueCrit.hwComponentName,hwComponentStatus = HwIssueCrit.hwComponentStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueCrit" name="HwIssueCrit">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_HwProblem) AND eventSeverityCat = "HIGH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage) </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,hwComponentName,hwComponentStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,hwComponentName,hwComponentStatus,hwFailReason,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>
 
  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Avail_35" phIncidentCategory="Storage" function="AVAILABILITY">
    <Name>Unregistered EMC Clariion Host</Name>
    <Description>Detects that a host has logged in but not registered </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_STORAGE_CLARION_UNREG_HOST" severity="7">
      <ArgList>
        srcName=UnregHost.srcName,srcIpAddr=UnregHost.srcIpAddr,srcWWN=UnregHost.srcWWN,destName=UnregHost.destName,spPortName=UnregHost.spPortName
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="UnregHost" name="UnregHost">
        <SingleEvtConstr> eventType = "PH_RULE_CLARION_UNREG_HOST" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>srcName,srcIpAddr,srcWWN,destName,spPortName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcName,srcIpAddr,srcWWN,destName,spPortName,destIpAddr,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>


  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_36" phIncidentCategory="System" function="AVAILABILITY">
    <Name>SNMP Service Unavailable</Name>
    <active>true</active>
    <Description> Detects that SNMP service is unavailable </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <IncidentDef eventType="PH_RULE_SNMP_DOWN" severity="10">
      <ArgList>
        hostIpAddr = SnmpDown.hostIpAddr, hostName = SnmpDown.hostName
      </ArgList>
    </IncidentDef>
    <PatternClause window="240">
       <SubPattern displayName="SnmpDown" name="SnmpDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_SNMP_PING_STAT"  </SingleEvtConstr>
	 <GroupEvtConstr> AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,pktLossPct,sysDownTime,avgDurationMSec,maxDurationMSec,minDurationMSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_SNMP_DOWN_CLEAR">
	<ArgList>hostIpAddr=SnmpDown_CLEAR.hostIpAddr,hostName = SnmpDown_CLEAR.hostName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_SNMP_DOWN.hostIpAddr = PH_RULE_SNMP_DOWN_CLEAR.hostIpAddr,
                    PH_RULE_SNMP_DOWN.hostName = PH_RULE_SNMP_DOWN_CLEAR.hostName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="SnmpDown_CLEAR" name="SnmpDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_SNMP_PING_STAT"  </SingleEvtConstr>
	  <GroupEvtConstr> AVG(pktLossPct) &lt; 10 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,hostName </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_37" phIncidentCategory="System" function="AVAILABILITY">
    <Name>WMI Service Unavailable</Name>
    <active>true</active>
    <Description> Detects that WMI service is unavailable </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <IncidentDef eventType="PH_RULE_WMI_DOWN" severity="10">
      <ArgList>
        hostIpAddr = WmiDown.hostIpAddr, hostName = WmiDown.hostName
      </ArgList>
    </IncidentDef>
    <PatternClause window="240">
       <SubPattern displayName="WmiDown" name="WmiDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_WMI_PING_STAT" </SingleEvtConstr>
	 <GroupEvtConstr> AVG(pktLossPct) = 100 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>phRecvTime,reptDevIpAddr,hostName,pktLossPct,sysDownTime,avgDurationMSec,maxDurationMSec,minDurationMSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_WMI_DOWN_CLEAR">
	<ArgList>hostIpAddr=WmiDown_CLEAR.hostIpAddr,hostName = WmiDown_CLEAR.hostName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_WMI_DOWN.hostIpAddr = PH_RULE_WMI_DOWN_CLEAR.hostIpAddr,
                    PH_RULE_WMI_DOWN.hostName = PH_RULE_WMI_DOWN_CLEAR.hostName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="WmiDown_CLEAR" name="WmiDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_WMI_PING_STAT" </SingleEvtConstr>
	  <GroupEvtConstr> AVG(pktLossPct) &lt; 10 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,hostName </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_38" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Windows Disk controller problem</Name>
    <active>false</active>
    <Description>Detects windows disk controller issues</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WIN_DISK_CONTROLLLER_PROBLEM" severity="9">
      <ArgList>
        hostIpAddr = WinDiskControl.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
       <SubPattern displayName="WinDiskControl" name="WinDiskControl">
         <SingleEvtConstr> eventType IN ("Win-System-Disk-11","Win-System-Disk-51","Win-System-Disk-57") AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
          <GroupByAttr>reptDevIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,eventSource,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_39" phIncidentCategory="Network" function="AVAILABILITY">
     <Name>EIGRP Neighbor Down</Name>
     <active>true</active>
     <Description>Detects that a EIGRP neighbor is down</Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_EIGRP_NBR_DOWN" severity="9">
          <ArgList>srcIpAddr = EIGRPDown.reptDevIpAddr, srcName = EIGRPDown.reptDevName, destIpAddr = EIGRPDown.destIpAddr</ArgList>
     </IncidentDef>
     <DynWatchListDef attr="srcName">
       <WatchList>PH_DYNLIST_ROUTING_ISSUE</WatchList>
    </DynWatchListDef>
     <PatternClause window="300">
      <SubPattern displayName="EIGRPDown" name="EIGRPDown">
        <SingleEvtConstr> eventType IN ("IOS-EIGRP-NBRCHANGE_DUAL-TO-DOWN","IOS-DUAL-NBRCHANGE-TO-DOWN") </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,destIpAddr,reptDevName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,intfName,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
     <ClearCondition method="Auto" type="patternbased">
          <ClearIncidentDef name="PH_RULE_EIGRP_NBR_DOWN_CLEAR">
               <ArgList>srcIpAddr = EIGRPDown_CLEAR.reptDevIpAddr,destIpAddr = EIGRPDown_CLEAR.destIpAddr</ArgList>
          </ClearIncidentDef>
          <ClearConstr>PH_RULE_EIGRP_NBR_DOWN.srcIpAddr = PH_RULE_EIGRP_NBR_DOWN_CLEAR.srcIpAddr, PH_RULE_EIGRP_NBR_DOWN.destIpAddr = PH_RULE_EIGRP_NBR_DOWN_CLEAR.destIpAddr</ClearConstr>
          <PatternClause window="300">
               <SubPattern displayName="EIGRPDown_CLEAR" name="EIGRPDown_CLEAR">
                    <SingleEvtConstr>eventType IN ("IOS-EIGRP-NBRCHANGE_DUAL-TO-UP","IOS-DUAL-NBRCHANGE-TO-UP")</SingleEvtConstr>
                    <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
                    <GroupByAttr>reptDevIpAddr,destIpAddr</GroupByAttr>
               </SubPattern>
          </PatternClause>
     </ClearCondition>
    </Rule>

     <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_40" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Critical Network Device Interface Staying Down</Name>
    <active>true</active>
    <Description> Detects that a critical network interface of a network device is staying down - that is didn't come up within 5 minutes of going down. An interface is critical if it appears in Critical Interface list in GUI </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DOWN_INTF_NET_CRIT" severity="9">
      <ArgList>
        hostIpAddr = IntfDownNetDev.hostIpAddr,hostName = IntfDownNetDev.hostName, intfName = IntfDownNetDev.intfName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="IntfDownNetDev" name="IntfDownNetDev">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "Yes" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, intfName</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="NOT_FOLLOWED_BY"/>
       <SubPattern displayName="IntfUpNetDev" name="IntfUpNetDev">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "Yes" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName, intfName</GroupByAttr>
       </SubPattern>
       <GlobalConstr>IntfDownNetDev.hostIpAddr = IntfUpNetDev.hostIpAddr AND IntfDownNetDev.intfName = IntfUpNetDev.intfName AND IntfDownNetDev.hostName = IntfUpNetDev.hostName  
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostIpAddr,hostName, intfName,rawEventMsg </AttrList>
    </TriggerEventDisplay>

    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DOWN_INTF_NET_CRIT_CLEAR">
	<ArgList>hostIpAddr = IntfDownNetDev_CLEAR.hostIpAddr,intfName = IntfDownNetDev_CLEAR.intfName</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DOWN_INTF_NET_CRIT.hostIpAddr = PH_RULE_DOWN_INTF_NET_CRIT_CLEAR.hostIpAddr, PH_RULE_DOWN_INTF_NET_CRIT.intfName = PH_RULE_DOWN_INTF_NET_CRIT_CLEAR.intfName </ClearConstr>
      <PatternClause window="120">
	<SubPattern displayName="IntfDownNetDev_CLEAR" name="IntfDownNetDev_CLEAR">
          <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfRestart) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "Yes" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
	</SubPattern>
	<Operator rank="0" type="NOT_FOLLOWED_BY"/>
	<SubPattern displayName="IntfUpNetDev_CLEAR" name="IntfUpNetDev_CLEAR">
          <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_NetIntfShutdown) AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND isHostIntfCritical = "Yes" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostIpAddr,intfName</GroupByAttr>
	</SubPattern>
	<GlobalConstr>IntfDownNetDev_CLEAR.hostIpAddr = IntfUpNetDev_CLEAR.hostIpAddr AND IntfDownNetDev_CLEAR.intfName = IntfUpNetDev_CLEAR.intfName 
	</GlobalConstr>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_41" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Riverbed Steelhead System Health Degraded </Name>
    <Description>Detects Riverbed system health degraded </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RVBD_SYS_HEALTH_WARN" severity="8">
      <ArgList>
        hostName=HwIssueWarn.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueWarn" name="HwIssueWarn">
        <SingleEvtConstr> eventType = "PH_DEV_MON_SYS_STATUS" AND systemStatus IN ("Degraded","Admission Control") </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,systemStatus,svcStatus,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_42" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Riverbed Steelhead System Health Critical </Name>
    <Description>Detects Riverbed system health degraded </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RVBD_SYS_HEALTH_CRIT" severity="10">
      <ArgList>
        hostName=HwIssueWarn.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueWarn" name="HwIssueWarn">
        <SingleEvtConstr> eventType = "PH_DEV_MON_SYS_STATUS" AND systemStatus = "Critical" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,systemStatus,svcStatus,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_43" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Riverbed Steelhead Service Health Critical </Name>
    <Description>Detects Riverbed service health degraded </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RVBD_SVC_HEALTH_CRIT" severity="10">
      <ArgList>
        hostName=HwIssueWarn.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="HwIssueWarn" name="HwIssueWarn">
        <SingleEvtConstr> eventType = "PH_DEV_MON_SYS_STATUS" AND svcStatus = "Stopped" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,hwStatusCode,systemStatus,svcStatus,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_OverallAvailability" id="PH_Rule_Avail_44" phIncidentCategory="System" function="AVAILABILITY">
    <Name>License Issue</Name>
    <Description>Detect license issues for operational systems and software in the data center - this may include license about to expire or already expired, or license limiting system operation</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXT_LICENSE_ISSUE" severity="9">
      <ArgList>
        reptDevIpAddr=License.reptDevIpAddr,reptDevName = License.reptDevName, compEventType = License.eventType
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="License" name="License">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_LicenseExpired)</SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,reptDevName,eventType</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>
 
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_47" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Mail Hard Bounce Delivery Failures</Name>
    <Description>Detect mail hard bounce delivery failures</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MAIL_DELIVERY_ERROR" severity="7">
      <ArgList>
        reptDevIpAddr=MailError.reptDevIpAddr,receiverMailAddr=MailError.receiverMailAddr, 
	senderMailAddr=MailError.senderMailAddr,smtpFailCode=MailError.smtpFailCode
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="MailError" name="MailError">
        <SingleEvtConstr> eventType = "Cisco-IronPort-Mail-HardBounce"</SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr, receiverMailAddr, senderMailAddr,smtpFailCode</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,receiverMailAddr, senderMailAddr,mailSubject,smtpFailCode,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule> 

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_48" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>EC2 Instance Down </Name>
    <Description>Detects a EC2 instance is down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EC2_INSTANCE_DOWN" severity="10">
      <ArgList>
        hostIpAddr = EC2Down.hostIpAddr,hostName = EC2Down.hostName,ec2InstanceId = EC2Down.ec2InstanceId

      </ArgList>
    </IncidentDef>
    <PatternClause window="120">
       <SubPattern displayName="EC2Down" name="EC2Down">
         <SingleEvtConstr> eventType = "PH_DEV_MON_EC2_INSTANCE_DOWN" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostName,hostIpAddr,ec2InstanceId</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,ec2InstanceId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_EC2_INSTANCE_DOWN_CLEAR">
	<ArgList>hostIpAddr = EC2Up.hostIpAddr,hostName = EC2Up.hostName,ec2InstanceId = EC2Up.ec2InstanceId </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_EC2_INSTANCE_DOWN.ec2InstanceId = PH_RULE_EC2_INSTANCE_DOWN_CLEAR.ec2InstanceId </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="EC2Up" name="EC2Up">
          <SingleEvtConstr> eventType = "PH_DEV_MON_EC2_INSTANCE_UP" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>hostName,hostIpAddr,ec2InstanceId</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_49" phIncidentCategory="Storage" function="AVAILABILITY">
    <Name>Storage Port Down </Name>
    <Description>Detects a storage port went down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_STORAGE_PORT_DOWN" severity="9">
      <ArgList>
        hostName = PortDown.hostName,hostIpAddr = PortDown.hostIpAddr,spName = PortDown.spName,spPortName=PortDown.spPortName,srcName=PortDown.srcName

      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="PortDown" name="PortDown">
         <SingleEvtConstr> eventType = "PH_DEV_MON_STORAGE_PORT_UP_TO_DOWN" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostName,hostIpAddr,spName,spPortName,srcName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,ec2InstanceId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_STORAGE_PORT_DOWN_CLEAR">
	<ArgList>hostIpAddr = PortUp.hostIpAddr,hostName = PortUp.hostName,spName = PortUp.spName,spPortName = PortUp.spPortName  </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_STORAGE_PORT_DOWN.hostName = PH_RULE_STORAGE_PORT_DOWN_CLEAR.hostName,PH_RULE_STORAGE_PORT_DOWN.spName = PH_RULE_STORAGE_PORT_DOWN_CLEAR.spName,PH_RULE_STORAGE_PORT_DOWN.spPortName = PH_RULE_STORAGE_PORT_DOWN_CLEAR.spPortName</ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="PortUp" name="PortUp">
          <SingleEvtConstr> eventType = "PH_DEV_MON_STORAGE_PORT_DOWN_TO_UP" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>hostName,hostIpAddr,spName,spPortName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_51" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Manual Service Started</Name>
    <active>true</active>
    <Description> Detects that an manual mode service is started. Currently this works for windows servers and is detected via WMI. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MANUAL_SRVC_START" severity="10">
      <ArgList>
        hostIpAddr = SrvcUp.hostIpAddr, hostName = SrvcUp.hostName, serviceName = SrvcUp.serviceName, servicePath = SrvcUp.servicePath
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
       <SubPattern displayName="SrvcUp" name="SrvcUp">
         <SingleEvtConstr> eventType = "PH_DEV_MON_MANUAL_SVC_STOP_TO_START" </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,serviceName,servicePath</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostIpAddr,hostName,serviceName,servicePath,serviceDesc </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MANUAL_SRVC_START_CLEAR">
	<ArgList>hostIpAddr=SrvcUp_CLEAR.hostIpAddr,hostName = SrvcUp_CLEAR.hostName, serviceName = SrvcUp_CLEAR.serviceName,servicePath = SrvcUp_CLEAR.servicePath
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> 
           PH_RULE_MANUAL_SRVC_START.hostIpAddr = PH_RULE_MANUAL_SRVC_START_CLEAR.hostIpAddr, 
           PH_RULE_MANUAL_SRVC_START.hostName = PH_RULE_MANUAL_SRVC_START_CLEAR.hostName, 
           PH_RULE_MANUAL_SRVC_START.serviceName = PH_RULE_MANUAL_SRVC_START_CLEAR.serviceName, 
           PH_RULE_MANUAL_SRVC_START.servicePath = PH_RULE_MANUAL_SRVC_START_CLEAR.servicePath
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="SrvcUp_CLEAR" name="SrvcUp_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_MANUAL_SVC_START_TO_STOP" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,hostName,serviceName,servicePath</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule> 

   <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_52" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Oracle Database Instance Down</Name>
    <Description>Detects that an Oracle database server instance is down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_DOWN" severity="9">
      <ArgList>
        hostIpAddr=DBDown.hostIpAddr,hostName=DBDown.hostName, 
	instanceName=DBDown.instanceName,instanceStatus=DBDown.instanceStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="DBDown" name="DBDown">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB" AND instanceStatus != "OPEN" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostIpAddr, hostName, instanceName, instanceStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,instanceStatus,appVersion,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>	
  </Rule> 

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_53" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Oracle Database Listener Down</Name>
    <Description>Detects that an Oracle database server listener is down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_LISTENER_DOWN" severity="9">
      <ArgList>
	hostIpAddr=DBDown.hostIpAddr,hostName=DBDown.hostName, 
	instanceName=DBDown.instanceName,instanceStatus=DBDown.instanceStatus,
	listenerStatus = DBDown.listenerStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="DBDown" name="DBDown">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB" AND listenerStatus != "OPEN" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostIpAddr, hostName, instanceName, instanceStatus, listenerStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,instanceStatus,listenerStatus,appVersion,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>	
  </Rule> 

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_54" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>MySQL Database Instance Down</Name>
    <Description>Detects that a MySQL database server instance is down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MYSQL_DOWN" severity="9">
      <ArgList>
        hostIpAddr=DBDown.hostIpAddr,hostName=DBDown.hostName, 
	instanceName=DBDown.instanceName,instanceStatus=DBDown.instanceStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="DBDown" name="DBDown">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MYSQLDB" AND instanceStatus = "UNCONNECTED" </SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostIpAddr, hostName, instanceName, instanceStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,instanceStatus,appVersion,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MYSQL_DOWN_CLEAR">
	  <ArgList>destIpAddr = DBDown_CLEAR.hostIpAddr</ArgList>
    </ClearIncidentDef>
    <ClearConstr> PH_RULE_MYSQL_DOWN.destIpAddr = PH_RULE_MYSQL_DOWN_CLEAR.destIpAddr </ClearConstr>
      <PatternClause window="180">
	    <SubPattern displayName="DBDown_CLEAR" name="DBDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MYSQLDB" AND instanceStatus == "CONNECTED"</SingleEvtConstr>
	      <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	      <GroupByAttr>hostIpAddr, hostName, instanceName, instanceStatus</GroupByAttr>
	    </SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_Avail_55" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Microsoft SQL Server Instance Down</Name>
    <Description>Detects that a Microsoft SQL Server instance is down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MSSQL_DOWN" severity="9">
      <ArgList>
        hostIpAddr=DBDown.hostIpAddr,hostName=DBDown.hostName,instanceName=DBDown.instanceName,instanceStatus=DBDown.instanceStatus
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="DBDown" name="DBDown">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS" AND instanceStatus = "STOPPED" </SingleEvtConstr>
	    <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostIpAddr, hostName, instanceName, instanceStatus</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,instanceStatus,appVersion,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>	
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_56" phIncidentCategory="System" function="AVAILABILITY">
    <Name>Windows Server Shutting Down</Name>
    <Description>Detects that a Microsoft Windows Server is shutting down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WINDOWS_SERVER_DOWN" severity="9">
      <ArgList>
        destName=ServerDown.hostName,destIpAddr=ServerDown.hostIpAddr,user=ServerDown.user,errReason=ServerDown.errReason,comment=ServerDown.comment
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="ServerDown" name="ServerDown">
        <SingleEvtConstr> eventType = "Win-System-USER32-1074"</SingleEvtConstr>
	    <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,user,shutdownReason,errReason,comment</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,user,shutdownReason,errReason,comment,rawEventMsg</AttrList>
    </TriggerEventDisplay>	
  </Rule>
  
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_57" phIncidentCategory="System" function="AVAILABILITY">
    <Name>Windows Cluster Service Startup Error</Name>
    <Description>Detects Windows Cluster Service Startup Error</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WINDOWS_CLUSTER_STARTUP_ERROR" severity="9">
      <ArgList>
        hostName=ServerDown.reptDevName,hostIpAddr=ServerDown.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="ServerDown" name="ServerDown">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WinClusterStartupErr)</SingleEvtConstr>
	    <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>	
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_58" phIncidentCategory="System" function="AVAILABILITY">
    <Name>Windows Cluster Service Quorum Error</Name>
    <Description>Detects Windows Cluster Service Quorum Error</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WINDOWS_CLUSTER_QUORUM_ERROR" severity="9">
      <ArgList>
        hostName=ServerDown.reptDevName,hostIpAddr=ServerDown.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="ServerDown" name="ServerDown">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WinClusterQuorumErr) </SingleEvtConstr>
	    <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>	
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_59" phIncidentCategory="System" function="AVAILABILITY">
    <Name>Windows Cluster Service Membership Error</Name>
    <Description>Detects Windows Cluster Service Membership Error</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WINDOWS_CLUSTER_MEMBERSHIP_ERROR" severity="9">
      <ArgList>
        hostName=ServerDown.reptDevName,hostIpAddr=ServerDown.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="ServerDown" name="ServerDown">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WinClusterMembershipErr) </SingleEvtConstr>
	 <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>	
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_60" phIncidentCategory="System" function="AVAILABILITY">
    <Name>Unix System Shutting Down</Name>
    <Description>Detects that a Unix Server is shutting down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UNIX_SERVER_DOWN" severity="9">
      <ArgList>
        destName=ServerDown.hostName,destIpAddr=ServerDown.hostIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="ServerDown" name="ServerDown">
        <SingleEvtConstr> eventType IN ("Generic_Unix_System_Shutdown", "Generic_Unix_Power_Failure")</SingleEvtConstr>
	    <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,rawEventMsg</AttrList>
    </TriggerEventDisplay>    	
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_61" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Redundancy Lost </Name>
    <Description>Detects loss of redundancy</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_REDUNDANCY_LOSS" severity="9">
      <ArgList>
        hostName = Down.reptDevName,hostIpAddr = Down.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "IOS-C4K_REDUNDANCY-COMMUNICATION-LOST" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>reptDevIpAddr,reptDevName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NET_REDUNDANCY_LOSS_CLEAR">
	<ArgList>hostName = Up.reptDevName, hostIpAddr = Up.reptDevIpAddr </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NET_REDUNDANCY_LOSS.hostName = PH_RULE_NET_REDUNDANCY_LOSS_CLEAR.hostName,
	PH_RULE_NET_REDUNDANCY_LOSS.hostIpAddr = PH_RULE_NET_REDUNDANCY_LOSS_CLEAR.hostIpAddr
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Up" name="Up">
          <SingleEvtConstr> eventType = "IOS-C4K_REDUNDANCY-COMMUNICATION-ESTABLISHED" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_62" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>IOS Packet Memory Test Failure </Name>
    <Description>Detects IOS Packet Memory Test Failure - triggers when more than 25 pct packets are lost </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IOS_PKT_MEM_TEST_FAILURE" severity="9">
      <ArgList>
        hostName = Down.reptDevName,hostIpAddr = Down.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "IOS-C4K_SWITCHINGENGINEMAN-PACKETMEMORYTESTPARTIALFAILURE" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(pktLossPct) &gt; 25 </GroupEvtConstr>
          <GroupByAttr>reptDevIpAddr,reptDevName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,reptDevName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_IOS_PKT_MEM_TEST_FAILURE_CLEAR">
	<ArgList>hostName = Up.reptDevName, hostIpAddr = Up.reptDevIpAddr </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_IOS_PKT_MEM_TEST_FAILURE.hostName = PH_RULE_IOS_PKT_MEM_TEST_FAILURE_CLEAR.hostName,
	PH_RULE_IOS_PKT_MEM_TEST_FAILURE.hostIpAddr = PH_RULE_IOS_PKT_MEM_TEST_FAILURE_CLEAR.hostIpAddr
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Up" name="Up">
          <SingleEvtConstr> eventType = "IOS-C4K_SWITCHINGENGINEMAN-PACKETMEMORYTESTPARTIALFAILURE" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(pktLossPct) &gt; 5 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_63" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Failed Windows DC Diagnostic Test</Name>
    <Description>Detects that a specific Windows Domain Controller Diagnostic test failed </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DC_DIAG_FAILURE" severity="9">
      <ArgList>
        hostName = Down.hostName,testName = Down.testName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "PH_DEV_MON_DCDIAG" AND testResult = "failed" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
          <GroupByAttr>hostName,testName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,testSubject,testName,testResult,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DC_DIAG_FAILURE_CLEAR">
	<ArgList>hostName = Up.hostName, testName = Up.testName </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DC_DIAG_FAILURE.hostName = PH_RULE_DC_DIAG_FAILURE_CLEAR.hostName
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Up" name="Up">
          <SingleEvtConstr> eventType = "PH_DEV_MON_DCDIAG" AND testResult = "passed"</SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>hostName,testName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_64" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Excessive Source Windows DC Replication Failure </Name>
    <Description>Detects that a specific Domain Controller is failing to replicate to a destination Windows Domain Controller </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SRC_DC_REPL_FAILURE" severity="9">
      <ArgList>
        srcName = Down.srcName,destName = Down.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "PH_DEV_MON_SRC_AD_REPL_STAT" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(failurePct) &gt; 30  </GroupEvtConstr>
          <GroupByAttr>srcName,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcName,hostName,failureCount,count,largestReplDelta,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_SRC_DC_REPL_FAILURE_CLEAR">
	<ArgList>srcName = Up.srcName, destName = Up.hostName </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_SRC_DC_REPL_FAILURE.srcName = PH_RULE_SRC_DC_REPL_FAILURE_CLEAR.srcName, 
	            PH_RULE_SRC_DC_REPL_FAILURE.destName = PH_RULE_SRC_DC_REPL_FAILURE_CLEAR.destName
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Up" name="Up">
          <SingleEvtConstr> eventType = "PH_DEV_MON_SRC_AD_REPL_STAT"</SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(failurePct) &lt; 5 </GroupEvtConstr>
	  <GroupByAttr>srcName,hostName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Avail_Server" id="PH_Rule_Avail_65" phIncidentCategory="Server" function="AVAILABILITY">
    <Name>Excessive Destination Windows DC Replication Failure </Name>
    <Description>Detects that a specific Domain Controller is failing to replicate to a destination Windows Domain Controller </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEST_DC_REPL_FAILURE" severity="9">
      <ArgList>
        srcName = Down.hostName,destName = Down.destName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "PH_DEV_MON_DST_AD_REPL_STAT" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(failurePct) &gt; 30  </GroupEvtConstr>
          <GroupByAttr>destName,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcName,hostName,failureCount,count,largestReplDelta,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DEST_DC_REPL_FAILURE_CLEAR">
	<ArgList>srcName = Up.hostName, destName = Up.destName </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_DEST_DC_REPL_FAILURE.srcName = PH_RULE_DEST_DC_REPL_FAILURE_CLEAR.srcName, 
	            PH_RULE_DEST_DC_REPL_FAILURE.destName = PH_RULE_DEST_DC_REPL_FAILURE_CLEAR.destName
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Up" name="Up">
          <SingleEvtConstr> eventType = "PH_DEV_MON_DST_AD_REPL_STAT"</SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(failurePct) &lt; 5 </GroupEvtConstr>
	  <GroupByAttr>destName,hostName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_67" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Network Device Failover</Name>
    <Description>Detects that a network device is failing over</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETWORK_DEVICE_FAILOVER" severity="9">
      <ArgList>
        hostName=NetworkDeviceFailover.reptDevName, hostIpAddr=NetworkDeviceFailover.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
      <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="NetworkDeviceFailover" name="NetworkDeviceFailover">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_FailoverOccur) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_Network)</SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,rawEventMsg</AttrList>
    </TriggerEventDisplay>    	
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Avail_68" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>FortiMail Failover</Name>
    <Description>Detects that a FortiMail Server is failing over</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTIMAIL_FAILOVER" severity="9">
      <ArgList>
        hostName=NetworkDeviceFailover.reptDevName, hostIpAddr=NetworkDeviceFailover.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
      <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="NetworkDeviceFailover" name="NetworkDeviceFailover">
        <SingleEvtConstr> eventType = "FortiMail-Event-HA-Role-Change"</SingleEvtConstr>
	<GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,rawEventMsg</AttrList>
    </TriggerEventDisplay>    	
  </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Perf_AVC_1" fireInternalIncident = "false" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco AVC: Application Response Time Late</Name>
    <active>true</active>
    <Description>Detects late application response times as reported by Cisco AVC where the response times exceed 1 second. Response time is the amount of time between the Client TCP request and the first server response.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APP_AVC_LATE_RESP" fireFreq="3600" severity="7" >
      <ArgList>
        nbarApplicationId =  AlertLateResp.nbarApplicationId, appName = AlertLateResp.appName, appCategory = AlertLateResp.appCategory, appSubcategory = AlertLateResp.appSubcategory, appGroupName = AlertLateResp.appGroupName, ipProto = AlertLateResp.ipProto, srcIpAddr = AlertLateResp.srcIpAddr, destIpAddr = AlertLateResp.destIpAddr
      </ArgList>
    </IncidentDef>
    <ClearCondition method="Auto" type="timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
    <PatternClause window="600">
      <SubPattern displayName="AlertLateResp" name="AlertLateResp">
        <SingleEvtConstr>(eventType = "IOS-AVC-NETFLOW" OR eventType = "Cisco-WLC-AVC-NETFLOW") AND ARTCountLateResponses &gt;= 1</SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>nbarApplicationId, appName, appCategory, appSubcategory, appGroupName, ipProto, srcIpAddr, destIpAddr, destIpPort</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,destIpPort,appName,appCategory,appSubcategory,appGroupName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Perf_AVC_2" fireInternalIncident = "false" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco AVC: Application Flows with QoS Queue Packet Drops</Name>
    <active>true</active>
    <Description>Detects QoS queue packet drops as reported by Cisco AVC. Queue drops can affect one or more flows mapped to the affected Queue</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APP_AVC_QOS_DROP" fireFreq="3600" severity="5" >
      <ArgList>
        qosClassHierarchyNameList = AlertQoSDrop.qosClassHierarchyNameList, qosClassHierarchyIdList = AlertQoSDrop.qosClassHierarchyIdList, nbarApplicationId =  AlertQoSDrop.nbarApplicationId, appName = AlertQoSDrop.appName, appCategory = AlertQoSDrop.appCategory, appSubcategory = AlertQoSDrop.appSubcategory, appGroupName = AlertQoSDrop.appGroupName, ipProto = AlertQoSDrop.ipProto, srcIpAddr = AlertQoSDrop.srcIpAddr, destIpAddr = AlertQoSDrop.destIpAddr
      </ArgList>
    </IncidentDef>
    <ClearCondition method="Auto" type="timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
    <PatternClause window="600">
      <SubPattern displayName="AlertQoSDrop" name="AlertQoSDrop">
        <SingleEvtConstr>(eventType = "IOS-AVC-NETFLOW" OR eventType = "Cisco-WLC-AVC-NETFLOW") AND qosQueueDrops &gt;= 1</SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>qosClassHierarchyNameList, qosClassHierarchyIdList, nbarApplicationId, appName, appCategory, appSubcategory, appGroupName, ipProto, srcIpAddr, destIpAddr, destIpPort</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,destIpPort,qosClassHierarchyNameList,appName,appCategory,appSubcategory,appGroupName,reptDevIpAddr,qosMonitoringIntervalLast,qosMonitoringInterval,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>   

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Perf_AVC_3" fireInternalIncident = "false" phIncidentCategory="Application" function="PERFORMANCE">
      <Name>Cisco AVC: P2P Applications that exceed interface utilization</Name>
      <active>true</active>
      <Description>Detects P2P applications that exceed interface utilization as reported by Cisco AVC.</Description>
      <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
      <IncidentDef eventType="PH_RULE_APP_AVC_P2P_UTIL" fireFreq="3600" severity="1" >
          <ArgList>
              nbarApplicationId =  AlertP2PUtil.nbarApplicationId, appName = AlertP2PUtil.appName, appCategory = AlertP2PUtil.appCategory, appSubcategory = AlertP2PUtil.appSubcategory, appGroupName = AlertP2PUtil.appGroupName, ipProto = AlertP2PUtil.ipProto, srcIpAddr = AlertP2PUtil.srcIpAddr, destIpAddr = AlertP2PUtil.destIpAddr 
          </ArgList>
      </IncidentDef>
      <ClearCondition method="Auto" type="timebased">
          <QuietPeriod>1200</QuietPeriod>
      </ClearCondition>
      <PatternClause window="600">
          <SubPattern displayName="AlertP2PUtil" name="AlertP2PUtil">
              <SingleEvtConstr>(eventType = "IOS-AVC-NETFLOW" OR eventType = "Cisco-WLC-AVC-NETFLOW") AND nbarP2PFlag = 1 AND (inIntfUtil &gt; 10 OR outIntfUtil &gt; 10)</SingleEvtConstr>
              <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
              <GroupByAttr>reptDevIpAddr, nbarApplicationId, appName, appCategory, appSubcategory, appGroupName, ipProto, srcIpAddr, destIpAddr, destIpPort</GroupByAttr>
          </SubPattern>
      </PatternClause>
      <TriggerEventDisplay>
          <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,destIpPort,appName,appCategory,appSubcategory,appGroupName,reptDevIpAddr,qosMonitoringIntervalLast,qosMonitoringInterval,rawEventMsg </AttrList>
      </TriggerEventDisplay>
  </Rule>
</Rules>
<Rules>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_1" phIncidentCategory="Application" function="SECURITY">
    <Name>Cisco CallManager Excessive Authentication Failure </Name>
    <active>true</active>
    <Description>Number of AuthenticationFailed events exceeds configured limit</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_AUTH_FAILED" severity="8">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_AuthenticationFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_2" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager Critical Service Down</Name>
    <active>true</active>
    <Description>Cisco CallManager Critical Service Down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CRIT_SRVC_DOWN" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CriticalServiceDown" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_3" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager Hardware Failure</Name>
    <active>true</active>
    <Description>Cisco CallManager Critical Service Down</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_HW_FAILURE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_HardwareFailure" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_4" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager LogPartition High Water Mark Exceeded</Name>
    <active>true</active>
    <Description>Used disk space in the log partition exceeds the configured high water mark. Files will be deleted to avoid running out of disk space</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_LOG_PARTITION_HIGH_WATER_EXCEEDED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LogPartitionHighWaterMarkExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_5" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager LogPartition Low Water Mark Exceeded</Name>
    <active>true</active>
    <Description>Used disk space in the log partition exceeds the configured low water mark</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_LOG_PARTITION_LOW_WATER_EXCEEDED" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LogPartitionLowWaterMarkExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_6" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager Cluster Member Down</Name>
    <active>true</active>
    <Description>In cluster setup, the primary cannot reach another server in a cluster</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CLUSTER_MEMBER_DOWN" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_ServerDown" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_7" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Node High CPU</Name>
    <active>true</active>
    <Description>A node in the cluster that services phones is experiencing high CPU load for a sustained period of time.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_HIGH_CPU" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CallProcessingNodeCpuPegging" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_8" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Node Excessive Process and Thread</Name>
    <active>true</active>
    <Description>Current total process and thread count exceeds the maximum number of tasks that are configured for the Cisco RIS Data Collector Service Parameter</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_EXCESS_PROCESS_THREAD" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_TotalProcessesAndThreadsExceededThreshold" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_CCM_EXCESS_PROCESS_THREAD_CLEAR">
	<ArgList>reptDevName = CCM_CLEAR.reptDevName</ArgList>
      </ClearIncidentDef>
      <ClearConstr>PH_RULE_CCM_EXCESS_PROCESS_THREAD.reptDevName = PH_RULE_CCM_EXCESS_PROCESS_THREAD_CLEAR.reptDevName </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="CCM_CLEAR" name="CCM_CLEAR">
          <SingleEvtConstr> eventType ="Cisco_UC_SYSACC-TotalProcessesAndThreadsExceededThresholdEnd" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_9" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager CDR Agent Send Failed</Name>
    <active>true</active>
    <Description>CDR Agent cannot send CDR files from a CUCM node to a CDR repository node within the cluster.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CDR_SEND_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CDRAgentSendFileFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_10" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager CDR File Delivery Failed</Name>
    <active>true</active>
    <Description>FTP delivery of CDR files to the outside billing server fails</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CDR_FILE_DELIVERY_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CDRFileDeliveryFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_11" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager CDR Max Disk Usage Exceeded</Name>
    <active>true</active>
    <Description>CDR files disk usage exceeds the maximum disk allocation - some undelivered files got deleted</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_MAX_CDR_DISK_USAGE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CDRMaximumDiskSpaceExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_12" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager CDR High Disk Usage</Name>
    <active>true</active>
    <Description>CDR files disk usage exceeds the high water mark for disk allocation - some undelivered files got deleted</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_HIGH_CDR_DISK_USAGE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CDRHighWaterMarkExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_13" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager DB Replication Failure</Name>
    <active>true</active>
    <Description>Cisco CallManager Database Replication Failure</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_DB_REPLICATION_FAILURE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DBReplicationFailure" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_14" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager DB Replication Error</Name>
    <active>true</active>
    <Description>Cisco CallManager Database Replication Error</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_DB_REPLICATION_ERROR" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DBReplicationTableOutOfSync" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_15" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager High Call Latency (Code Yellow)</Name>
    <active>true</active>
    <Description>Current average expected delay to handle an incoming message exceeds the value specified in Code Yellow Entry Latency service parameter</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_HIGH_CALL_LATENCY" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CodeYellow" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_16" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager Database Notification Failure</Name>
    <active>true</active>
    <Description>Cisco Database Notification Service experiencing problems and might stop - change notification requests queued in the database got stuck and changes made to the system may not take effect</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_DB_CHANGE_NOTIF_FAILURE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DBChangeNotifyFailure" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_17" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Registered Device Count Exceeded</Name>
    <active>true</active>
    <Description>Number of registered devices exceeded event configured threshold</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_MAX_REG_DEVICE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NumberOfRegisteredDevicesExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_18" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Registered Device Count Decreased</Name>
    <active>true</active>
    <Description>Number of registered gateways in a cluster decreased between consecutive polls</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_REG_DEVICE_DECREASE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NumberOfRegisteredGatewaysDecreased" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_19" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Registered Device Count Increased</Name>
    <active>true</active>
    <Description> Number of registered gateways in a cluster increased between consecutive polls </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_REG_DEVICE_INCREASE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NumberOfRegisteredGatewaysIncreased" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_20" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Registered Media Count Decreased</Name>
    <active>true</active>
    <Description>Number of registered media devices in a cluster decreased between consecutive polls</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_REG_MEDIA_DEVICE_DECREASE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NumberOfRegisteredMediaDevicesDecreased" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_21" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Registered Media Count Increased</Name>
    <active>true</active>
    <Description>Number of registered media devices in a cluster increased between consecutive polls</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_REG_MEDIA_DEVICE_INCREASE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NumberOfRegisteredMediaDevicesIncreased" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_22" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Registered Phone Decreased</Name>
    <active>true</active>
    <Description>Number of registered phones in a cluster decreased between consecutive polls</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_REG_PHONE_DECREASE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NumberOfRegisteredPhonesDropped" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_23" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Call Route List Exhausted</Name>
    <active>true</active>
    <Description>All available channels that are defined in the route list are busy</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_ROUTE_LIST_EXHAUSTED" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_RouteListExhausted" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_24" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco CallManager MGCP DChannel is out-of-service</Name>
    <active>true</active>
    <Description>MGCP DChannel is out-of-service. Check with carrier.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_MGCPDCHANNEL_OUTOF_SERVICE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_MgcpDChannelOutOfService" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_25" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Media List Exhausted</Name>
    <active>true</active>
    <Description>All available media resources that are defined in the media list are busy</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_MEDIALIST_EXHAUSTED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_MediaListExhausted" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_26" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager IME Distributed Cache Inactive</Name>
    <active>true</active>
    <Description>Cisco Unified Communications Manager attempts to connect to the Cisco IME server, but the IME distributed cache is not currently active</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_IME_DIST_CACHE_INACTIVE" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IMEDistributedCacheInactive" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_27" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager IME Over Quota</Name>
    <active>true</active>
    <Description>Cisco IME service have exceed the quota for published direct inward dialing numbers (DIDs) to the IME distributed cache</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_IME_OVER_QUOTA" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IMEOverQuota" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_28" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager IME Quality Alert</Name>
    <active>true</active>
    <Description>A substantial number of Cisco IME calls fail back to PSTN or fail to be set up due to IP network quality problems</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_IME_QUALITY_ALERT" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IMEQualityAlert" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_29" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager IME Insufficient Fallback Identifiers (no PSTN Fallback)</Name>
    <active>true</active>
    <Description>Too many Cisco IME calls that are currently in progress use the same fallback DID - no more DTMF digit sequences exist to allocate to a new Cisco IME call. Calls cannot fallback to the PSTN if voice-quality deteriorates</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_NO_FALLBACK_PSTN" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_InsufficientFallbackIdentifiers" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_30" phIncidentCategory="Application" function="SECURITY">
    <Name>Cisco CallManager IME Service Authentication Error</Name>
    <active>true</active>
    <Description>Call Manager cannot connect to the Cisco IME server because the username and/or password configured on Cisco Unified Communications Manager do not match those configured on the Cisco IME server</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_IME_AUTH_ERROR" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_InvalidCredentials" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_31" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco CallManager Malicious Call Trace</Name>
    <active>true</active>
    <Description>Malicious call exists in Cisco Unified Communications Manager - the malicious call identification (MCID) feature gets invoked</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_MALICIOUS_CALL_TRACE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_MaliciousCallTrace" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_32" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Local-To-Remote Call Manager Communication Problem</Name>
    <active>true</active>
    <Description>Local Cisco Unified Communications Manager cannot communicate with the Remote Cisco Unified Communications Manager</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_LOCAL_REMOTE_COMM_ISSUE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SDLLinkOutOfService" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_CCM_LOCAL_REMOTE_COMM_ISSUE_CLEAR">
	<ArgList>reptDevName = CCM_CLEAR.reptDevName</ArgList>
      </ClearIncidentDef>
      <ClearConstr>PH_RULE_CCM_LOCAL_REMOTE_COMM_ISSUE.reptDevName = PH_RULE_CCM_LOCAL_REMOTE_COMM_ISSUE_CLEAR.reptDevName </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="CCM_CLEAR" name="CCM_CLEAR">
          <SingleEvtConstr> eventType ="Cisco_UC_CALLMANAGER-SDLLinkISV" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_33" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Local-To-Remote Call Manager TCP Connection Failed</Name>
    <active>true</active>
    <Description>Local Cisco Unified Communications Manager cannot establish a TCP connection with the remote Cisco Unified Communications Manager</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_LOCAL_REMOTE_TCP_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_TCPSetupToIMEFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_34" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager IME Service TLS Connection Failure</Name>
    <active>true</active>
    <Description>A TLS connection to the Cisco IME service could not be established because the certificate presented by the Cisco IME service has expired or is not in the Cisco Unified Communications Manager CTL</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_IME_TLS_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_TLSConnectionToIMEFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_35" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager DDR Block Prevention</Name>
    <active>true</active>
    <Description>IDSReplicationFailure alarm with alarm number 31 occurs, which invokes a proactive procedure to avoid denial of service</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_DDR_BLOCK_PREVENTION" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DDRBlockPrevention" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_36" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager DDR Down</Name>
    <active>true</active>
    <Description>IDSReplicationFailure alarm with alarm number 32 occurs. An auto recover procedure runs in the background</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_DDR_DOWN" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DDRDown" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_37" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager EMCC Failed In Local Cluster</Name>
    <active>true</active>
    <Description>EMCC login failure occurred due to: incompatible devices, Unable to retrieve remote cluster information, EMCC restricted by the local cluster or untrusted certificate received from the remote</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_EMCC_FAILED_LOCAL_CLUSTER" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_EMCCFailedInLocalCluster" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_38" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager EMCC Failed In Remote Cluster</Name>
    <active>true</active>
    <Description>EMCC login failure at a remote Unified CM due to: User does not exist or not enabled for EMCC, no free EMCC base device, EMCC access was prevented by remote cluster, Untrusted certificate received from the remote end </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_EMCC_FAILED_REMOTE_CLUSTER" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_EMCCFailedInRemoteCluster" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_39" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Excessive Voice Quality Reports</Name>
    <active>true</active>
    <Description>Number of voice quality reports exceeds the configured threshold</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_EXCESSIVE_VOICE_QUALITY_REPORTS" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_ExcessiveVoiceQualityReports" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_40" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager Certificate Mismatch</Name>
    <active>true</active>
    <Description>Certficate Mismatch between Cisco Unified Communications Manager and Enterprise License Manager</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CERT_MISMATCH" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_JAVAAPPLICATIONS-CiscoSystemSecurityMismatch" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_41" phIncidentCategory="Application" function="SECURITY">
    <Name>Cisco Call Manager EMCC Login Failure</Name>
    <active>true</active>
    <Description>Cisco Extension Mobility Cross Cluster (EMCC) login failure due to invalid user input due to invalid user credentials or the credentials have expired</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_EMCC_LOGIN_FAILURE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_UserInputFailure" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_42" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Excessive Active BLF subscriptions</Name>
    <active>true</active>
    <Description>Active BLF subscriptions exceeds the configured limit</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_EXCESS_ACTIVE_BLF_SUB" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_BeginThrottlingCallListBLFSubscriptions" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_CCM_EXCESS_ACTIVE_BLF_SUB_CLEAR">
	<ArgList>reptDevName = CCM_CLEAR.reptDevName</ArgList>
      </ClearIncidentDef>
      <ClearConstr>PH_RULE_CCM_EXCESS_ACTIVE_BLF_SUB.reptDevName = PH_RULE_CCM_EXCESS_ACTIVE_BLF_SUB_CLEAR.reptDevName </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="CCM_CLEAR" name="CCM_CLEAR">
          <SingleEvtConstr> eventType ="Cisco_UC_CALLMANAGER-EndThrottlingCallListBLFSubscriptions" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_43" phIncidentCategory="Application" function="SECURITY">
    <Name>Cisco Call Manager Call Attempt Blocked By Policy</Name>
    <active>true</active>
    <Description>A call was rejected or blocked because it violated the enterprise policy as defined in a policy decision point (PDP) that was configured in Unified CM</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CALL_ATTEMPT_BLOCKED_BY_POLICY" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CallAttemptBlockedByPolicy" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_44" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager Not Connected to Enterprise License Manager</Name>
    <active>true</active>
    <Description>The system has not synchronized successfully to the Enterprise License Manager</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_NOT_CONNECTED_TO_ELM" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_JAVAAPPLICATIONS-CiscoElmNotConnected" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_45" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager Syslog Severity Match</Name>
    <active>true</active>
    <Description>Found a syslog message with the matching severity level</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SYSLOG_SEV_MATCH" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SyslogSeverityMatchFound" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_46" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager Syslog Pattern Match</Name>
    <active>true</active>
    <Description>Found a syslog message with the matching string pattern</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SYSLOG_STRING_MATCH" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SyslogStringMatchFound" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_47" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager System Version Mismatch</Name>
    <active>true</active>
    <Description>Detected a mismatch in system version</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SYS_VERSION_MISMATCH" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SystemVersionMismatched" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_48" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Spare Partition Disk Usage Critical</Name>
    <active>true</active>
    <Description>Percentage of available disk space on the spare partition is lower than the configured high water mark value</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SPARE_PART_DISK_USAGE_CRIT" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SparePartitionHighWaterMarkExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_49" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Spare Partition Disk Usage Warning</Name>
    <active>true</active>
    <Description>Percentage of available disk space on the spare partition is lower than the configured low water mark value </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SPARE_PART_DISK_USAGE_WARN" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SparePartitionLowWaterMarkExceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_50" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager DRF Failed</Name>
    <active>true</active>
    <Description>DRF backup or restore process encounters errors</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_DRF_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CiscoDRFFailure" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_51" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager Core Dump File Found</Name>
    <active>true</active>
    <Description>A process likely crashed generating a coredump file</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CORE_DUMP_FOUND" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CoreDumpFileFound" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_52" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Inactive Partition Disk Low </Name>
    <active>true</active>
    <Description>Percentage of available disk space on the inactive partition is lower than the configured value</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_INACTIVE_PARTITION_DISK_LOW" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LowInactivePartitionAvailableDiskSpace" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_53" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Active Partition Disk Low </Name>
    <active>true</active>
    <Description>Percentage of available disk space on the active partition is lower than the configured value</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_ACTIVE_PARTITION_DISK_LOW" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LowActivePartitionAvailableDiskSpace" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_54" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Swap Disk Low</Name>
    <active>true</active>
    <Description>Percentage of available disk space on the swap partition is lower than the configured value </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SWAP_DISK_LOW" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LowSwapPartitionAvailableDiskSpace" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_55" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager Virtual Memory Low</Name>
    <active>true</active>
    <Description>Available virtual memory is below the configured limit</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_VIRTUAL_MEM_LOW" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LowAvailableVirtualMemory" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_56" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Call Manager CPU High</Name>
    <active>true</active>
    <Description>Cisco Call Manager CPU constantly over configured threshold for a period of time</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CPU_HIGH" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_CpuPegging" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_57" phIncidentCategory="Application" function="OTHER">
    <Name>Cisco Call Manager User Defined Search String Found In Log</Name>
    <active>true</active>
    <Description>A user defined search string was found in the log file</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_USER_SEARCH_LOG" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LogFileSearchStringFound" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_58" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager License Grace Period Expired</Name>
    <active>true</active>
    <Description>Grace period for licensing has expired</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_LICENSE_GRACE_PERIOD_EXPIRED" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_JAVAAPPLICATIONS-CiscoNoProvisionTimeout" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_59" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager System In Overage</Name>
    <active>true</active>
    <Description>The system is operating with an insufficient number of licenses.  You will no longer be able to provision users and devices</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SYS_OVERAGE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_JAVAAPPLICATIONS-CiscoSystemInOverage" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_60" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Call Manager Location Out Of Bandwidth</Name>
    <active>true</active>
    <Description>The Location or Link connecting locations has run out of audio/video/immersive bandwidth and hence no further calls can originate or pass through the location/link</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_LOC_OUT_OF_RESOURCE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_Location Bandwidth Manager-LocationOutOfResource" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_61" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity Connection Failback Failed</Name>
    <active>true</active>
    <Description>Cisco Unity Connection Publisher server is not online and the server with the Primary status fails to automatically change status</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_FAILBACK_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_AutoFailbackFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_CCM_UNITY_FAILBACK_FAILED_CLEAR">
	<ArgList>reptDevName = CCM_CLEAR.reptDevName</ArgList>
      </ClearIncidentDef>
      <ClearConstr>PH_RULE_CCM_UNITY_FAILBACK_FAILED.reptDevName = PH_RULE_CCM_UNITY_FAILBACK_FAILED_CLEAR.reptDevName </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="CCM_CLEAR" name="CCM_CLEAR">
          <SingleEvtConstr> eventType ="Cisco_UC_RTMT_AutoFailbackSucceeded" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_62" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity Connection Failover Failed</Name>
    <active>true</active>
    <Description>Cisco Unity Connection cluster automatic failover failed</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_FAILOVER_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_AutoFailoverSucceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_63" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity Connection Failover Succeeded</Name>
    <active>true</active>
    <Description>Cisco Unity Connection cluster automatic failover succeeded</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_FAILOVER_SUCCEEDED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_AutoFailoverSucceeded" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_64" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Unity Connection Disk utilization Warning</Name>
    <active>true</active>
    <Description>Cisco Unity Connection server disk utilization reaches 10 percent below the percentage limit set</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_DISK_UTIL_WARN" severity="7">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DiskConsumptionCloseToCapacityThreshold" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_65" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Unity Connection Disk utilization Critical</Name>
    <active>true</active>
    <Description>Cisco Unity Connection server disk utilization below the percentage limit set</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_DISK_UTIL_CRIT" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DiskConsumptionExceedsCapacityThreshold" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_66" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity Connection License Expired</Name>
    <active>true</active>
    <Description>Cisco Unity Connection license expired</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_LICENSE_EXPIRED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LicenseExpired" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_67" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity Connection License About To Expire</Name>
    <active>true</active>
    <Description>Cisco Unity Connection license about to expire</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_LICENSE_TO_EXPIRE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_LicenseExpirationWarning" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_68" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity No Connection To Peer</Name>
    <active>true</active>
    <Description>Servers of a Cisco Unity Connection cluster cannot communicate with each other</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_UNITY_NO_CONN_TO_PEER" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_NoConnectionToPeer" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_69" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unity Connection Split Brain Failed</Name>
    <active>true</active>
    <Description>The resolution of the split brain condition failed - two servers cannot communicate with each other and both have the Primary status at the same time</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_SPLIT_BRAIN_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_SbrFailed" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_70" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Database Replication Stopped</Name>
    <active>true</active>
    <Description>Cisco Contact Center Express Database Replication stopped. This happens when the replication queues become full due to the inability to contact other nodes</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_DB_REPLICATION_STOPPED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_DBReplicationStopped" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_71" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Database Update Issue</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express Database update issue - historical data written to files but not to the database</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_DB_UPDATE_ISSUE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_HistoricalDataWrittenToFiles" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_72" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Database Unavailable</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express Database unavailable</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_DB_UNAVAIL" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IntelligenceCenterCUIC_DATABASE_UNAVAILABLE" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_73" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Database Replication Failed</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express Database Replication Failed</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_DB_REPL_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IntelligenceCenterCUIC_DB_REPLICATION_FAILED" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_74" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Report Execution Failed</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express Report server failed to run a report</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_RPT_EXEC_FAILED" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IntelligenceCenterCUIC_REPORT_EXECUTION_FAILED" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_75" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Report Server Uncoverable Error</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express Report server uncoverable error</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_RPT_SVR_UNRECOV_ERR" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_IntelligenceCenterCUIC_UNRECOVERABLE_ERROR" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_76" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Cisco Unified Contact Center Express Autopurging completed</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express Autopurging completed</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_AUTURGE_COMPLETE" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_PurgeInvoked" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_CCM_77" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Cisco Unified Contact Center Express JVM heap memory high</Name>
    <active>true</active>
    <Description>Cisco Unified Contact Center Express JVM heap memory greater than threshold</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CCM_CONTACT_CTR_MEM_HIGH" severity="10">
      <ArgList>
        reptDevName = CCM.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="CCM" name="CCM">
        <SingleEvtConstr> eventType = "Cisco_UC_RTMT_UnifiedCCXEngineMemoryUsageHigh" </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_1" phIncidentCategory="Network" function="CHANGE">
    <Name>Difference in Running and Startup Config</Name>
    <active>true</active>
    <Description>Detects that the startup and running configurations of a network device (router or firewall) are different. This is achieved via logging in. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DIFF_STARTUP_RUNNING_CONFIG" severity="9">
      <ArgList>
        hostIpAddr = StartupRunDelta.hostIpAddr, hostName = StartupRunDelta.hostName, addedItem = StartupRunDelta.addedItem, deletedItem = StartupRunDelta.deletedItem
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="StartupRunDelta" name="StartupRunDelta">
        <SingleEvtConstr> hostIpAddr IN (Group@PH_SYS_DEVICE_ROUTER_SWITCH,Group@PH_SYS_DEVICE_FIREWALL) AND eventType = "PH_DEV_MON_DELTA_CONFIG" </SingleEvtConstr>
	<GroupByAttr> hostIpAddr, hostName, addedItem, deletedItem </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,eventType,startUpConfVer,runningConfVer,addedItem, deletedItem </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_2" phIncidentCategory="Network" function="CHANGE">
    <Name>Startup Config Change (with login info)</Name>
    <active>true</active>
    <Description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last configuration. The IP address of the user likely to have executed the change, is obtained from a preceding syslog that indicates a prior login. This rule requires the network devices to forward syslog to the monitoring system.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_STARTUP_CONFIG_LOGIN"  severity="6">
      <ArgList>srcIpAddr = loginOrChangeEvent.srcIpAddr, hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="loginOrChangeEvent" name="loginOrChangeEvent">
        <SingleEvtConstr>eventType = "IOS-SYS-CONFIG_I"  OR  eventType = "ASA-605005" OR eventType = "Foundry-Ironware-Startup-Config-Change"</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr ,srcIpAddr</GroupByAttr>
      </SubPattern>
      <Operator rank="0" type="FOLLOWED_BY"/>
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "PH_DEV_MON_CHANGE_STARTUP_CONFIG"</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr ,hostName ,addedItem ,deletedItem</GroupByAttr>
      </SubPattern>
      <GlobalConstr>loginOrChangeEvent.reptDevIpAddr = delta.hostIpAddr</GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,eventType,srcIpAddr,oldSVNVersion,newSVNVersion,addedItem, deletedItem </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3" phIncidentCategory="Application" function="CHANGE">
    <Name>Domain Controller User/Group Modification</Name>
    <active>true</active>
    <Description>Detects user/group configuration in a domain controller. This rule would trigger on all changes made by any person. To prevent false positives, a restriction on the user attribute should be made by excluding the domain administrators. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_DC_USER_GRP" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND  eventType IN ( Group@PH_SYS_EVENT_AccountChanged) </SingleEvtConstr>
	<GroupByAttr>reptDevIpAddr,user,computer,domain,targetUser,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3B" phIncidentCategory="Application" function="CHANGE">
    <Name>User added to Domain Admin Group</Name>
    <active>true</active>
    <Description>Detects users added to domain admin group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ADD_DOMAIN_ADMIN" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Domain Admins"</SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3C" phIncidentCategory="Application" function="CHANGE">
    <Name>User deleted from Domain Admin Group</Name>
    <active>true</active>
    <Description>Detects users deleted from domain admin group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DELETE_DOMAIN_ADMIN" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Domain Admins" </SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3D" phIncidentCategory="Application" function="CHANGE">
    <Name>User added to Remote Desktop User Group</Name>
    <active>true</active>
    <Description>Detects users added to remote desktop user group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ADD_REMOTE_DESKTOP_USER" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Remote Desktop Users"</SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3E" phIncidentCategory="Application" function="CHANGE">
    <Name>User deleted from Remote Desktop User Group</Name>
    <active>true</active>
    <Description>Detects users deleted from remote desktop user group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DELETE_REMOTE_DESKTOP_USER" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Remote Desktop Users" </SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3F" phIncidentCategory="Application" function="CHANGE">
    <Name>User added to Administrator Group</Name>
    <active>true</active>
    <Description>Detects users added to administrator group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ADD_WIN_ADMINISTRATOR" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Administrators"</SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3G" phIncidentCategory="Application" function="CHANGE">
    <Name>User deleted from Administrator Group</Name>
    <active>true</active>
    <Description>Detects users deleted from administrator group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DELETE_WIN_ADMINISTRATOR" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Administrator" </SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3H" phIncidentCategory="Application" function="CHANGE">
    <Name>User added to Backup Operator Group</Name>
    <active>true</active>
    <Description>Detects users added to backup operator group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ADD_BACKUP_OPERATOR" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "Backup Operators"</SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3I" phIncidentCategory="Application" function="CHANGE">
    <Name>User deleted from Backup Operator Group</Name>
    <active>true</active>
    <Description>Detects users deleted from backup operator group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DELETE_BACKUP_OPERATOR" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "Backup Operators" </SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

    <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3J" phIncidentCategory="Application" function="CHANGE">
    <Name>User added to DNS Admin Group</Name>
    <active>true</active>
    <Description>Detects users added to DNS Admin group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ADD_DNS_ADMIN" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberAdded) AND targetUserGrp = "DnsAdmins"</SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_3K" phIncidentCategory="Application" function="CHANGE">
    <Name>User deleted from DNS Admins Group</Name>
    <active>true</active>
    <Description>Detects users deleted from backup operator group  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DELETE_DNS_ADMIN" severity="6">
      <ArgList>
        user = DCUserGrpChange.user, computer = DCUserGrpChange.computer, domain = DCUserGrpChange.domain, targetUser = DCUserGrpChange.targetUser, targetDomain = DCUserGrpChange.targetDomain,targetUserGrp = DCUserGrpChange.targetUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DCUserGrpChange" name="DCUserGrpChange">
        <SingleEvtConstr> reptDevIpAddr IN (Group@PH_SYS_APP_DOMAIN_CONTROLLER)  AND eventType IN (Group@PH_SYS_EVENT_GroupMemberRemoved) AND targetUserGrp = "DnsAdmins" </SingleEvtConstr>
	<GroupByAttr>user,computer,domain,targetUser,targetUserGrp,targetDomain</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,computer,domain,targetUser,targetDomain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_4" phIncidentCategory="Network" function="CHANGE">
    <Name>Running Config Change (with login info)</Name> 
    <Description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last config. The IP address of the user likely to have executed the change, is obtained from a preceding syslog that indicates a prior login. This rule requires the network devices to forward syslog to the monitoring system. </Description>
    <CustomerScope groupByEachCustomer="true"><Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_RUN_CONFIG_LOGIN"  severity="6">
      <ArgList>srcIpAddr = loginOrChangeEvent.srcIpAddr, hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="loginOrChangeEvent" name="loginOrChangeEvent">
        <SingleEvtConstr>eventType = "IOS-SYS-CONFIG_I"  OR  eventType = "ASA-605005" OR eventType = "Foundry-Ironware-Running-Config-Change"</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr ,srcIpAddr</GroupByAttr>
      </SubPattern>
      <Operator rank="0" type="FOLLOWED_BY"/>
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "PH_DEV_MON_CHANGE_RUN_CONFIG"</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr ,hostName ,addedItem ,deletedItem</GroupByAttr>
      </SubPattern>
      <GlobalConstr>loginOrChangeEvent.reptDevIpAddr = delta.hostIpAddr</GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,eventType,srcIpAddr,oldSVNVersion,newSVNVersion,addedItem, deletedItem </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_5" phIncidentCategory="Network" function="CHANGE">
    <Name>Startup Config Change</Name>
    <active>true</active>
    <Description>Detects that the configuration of a network device (router or firewall) has changed. This is achieved via logging in and keeping track of the last change </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_STARTUP_CONFIG"  severity="6">
      <ArgList>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "PH_DEV_MON_CHANGE_STARTUP_CONFIG"</SingleEvtConstr>
        <GroupEvtConstr>COUNT ( * )&gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr ,hostName ,addedItem ,deletedItem</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_6" phIncidentCategory="Network" function="CHANGE">
    <Name>Running Config Change</Name>
    <Description>Detects that the configuration of a network device (router or firewall) has changed.  This is achieved via logging in and keeping track of the last change</Description>
    <CustomerScope groupByEachCustomer="true"><Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_RUN_CONFIG"  severity="6">
      <ArgList>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "PH_DEV_MON_CHANGE_RUN_CONFIG"</SingleEvtConstr>
        <GroupEvtConstr>COUNT ( * )&gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr ,hostName ,addedItem ,deletedItem</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_7" phIncidentCategory="Server" function="CHANGE">
    <Name>Server Installed Software Change</Name>
    <active>true</active>
    <Description>Detects that a new software has been installed on a server or an existing software has been deleted. </Description>
    <CustomerScope groupByEachCustomer="true"><Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_INST_SW"  severity="6">
      <ArgList>hostIpAddr = delta.hostIpAddr, hostName = delta.hostName, addedItem = delta.addedItem, deletedItem = delta.deletedItem</ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "PH_DEV_MON_CHANGE_INST_SW"</SingleEvtConstr>
        <GroupEvtConstr>COUNT ( * )&gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,addedItem ,deletedItem</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,eventType,oldSVNVersion,newSVNVersion,addedItem, deletedItem </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_8" phIncidentCategory="Server" function="CHANGE">
    <Name>Linux file change</Name>
    <active>true</active>
    <Description>Detects that a user modified either the content or the attributes of a file or directory </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LINUX_FILE_CHANGE" severity="5">
      <ArgList>
        hostIpAddr = FileChange.reptDevIpAddr, user = FileChange.user, osObjType = FileChange.osObjType, osObjAction = FileChange.osObjAction, osObjName = FileChange.osObjName, targetOsObjType =FileChange.targetOsObjType, targetOsObjName = FileChange.targetOsObjName 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="FileChange" name="FileChange">
        <SingleEvtConstr> eventType = "LINUX_FILE_CHANGE" </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr,user,osObjType,osObjAction,osObjName,targetOsObjType,targetOsObjName </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,user,osObjType,osObjAction,osObjName,targetOsObjType,targetOsObjName</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_9" phIncidentCategory="Server" function="SECURITY">
    <Name>Windows failed file access</Name>
    <active>true</active>
    <Description>Detects that a user failed to modify either the content or the attributes of a file or directory </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WINDOWS_FAILED_FILE_ACCESS" severity="9">
      <ArgList>
        hostIpAddr = FileAccessFailure.reptDevIpAddr, user = FileAccessFailure.user, domain = FileAccessFailure.domain, osObjName = FileAccessFailure.osObjName 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern id="609580" name="FileAccessFailure">
        <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_FileChange)  AND  reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND  eventAction = 1 AND user NOT CONTAIN "$" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>user,domain,osObjName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,user,domain,osObjType,osObjAction,osObjName,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_10" phIncidentCategory="Server" function="SECURITY">
    <Name>Windows successful file access</Name>
    <active>false</active>
    <Description>Detects that a user successfully modified either the content or the attributes of a file or directory </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WINDOWS_SUCCESS_FILE_ACCESS" severity="5">
      <ArgList>
        hostIpAddr = FileAccessSuccess.reptDevIpAddr, user = FileAccessSuccess.user, domain = FileAccessSuccess.domain, osObjName = FileAccessSuccess.osObjName 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern id="609580" name="FileAccessSuccess">
        <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_FileChange) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) AND  eventAction = 0 AND user NOT CONTAIN "$" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>user,domain,osObjName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,user,domain,osObjType,osObjAction,osObjName,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_11" phIncidentCategory="Network" function="CHANGE">
    <Name>Successful Checkpoint Firewall Policy Install</Name>
    <active>true</active>
    <Description>Detects that an user successfully installed a policy on a Checkpoint Firewall </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHKP_FW_INSTALL_SUCCESS"  severity="8">
      <ArgList>destIpAddr = delta.reptDevIpAddr, srcName = delta.srcName, user = delta.user, policyName = delta.policyName </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "CheckPoint-InstallPolicy-Success" </SingleEvtConstr>
        <GroupEvtConstr>COUNT ( * )&gt;= 1</GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,user,srcName,policyName </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventAction,user,srcName,policyName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Change_Network" id="PH_Rule_Change_12" phIncidentCategory="Network" function="CHANGE">
    <Name>Failed Checkpoint Firewall Policy Install</Name>
    <active>true</active>
    <Description> Detects that an user failed to install a policy on a Checkpoint Firewall </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHKP_FW_INSTALL_FAILURE"  severity="10">
      <ArgList>destIpAddr = delta.reptDevIpAddr, srcName = delta.srcName, user = delta.user, policyName = delta.policyName </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="delta" name="delta">
        <SingleEvtConstr>eventType = "CheckPoint-InstallPolicy-Failure" </SingleEvtConstr>
        <GroupEvtConstr>COUNT ( * )&gt;= 1</GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr,user,srcName,policyName </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventAction,user,srcName,policyName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_13" phIncidentCategory="Server" function="CHANGE">
    <Name>System User Created</Name>
    <active>true</active>
    <Description>A system user is created</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_USER_CREATED"  severity="7">
      <ArgList>user = Created.user, domain = Created.domain,targetUser = Created.targetUser, targetDomain = Created.targetDomain </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Created" name="Created">
        <SingleEvtConstr>eventType = "PH_AUDIT_USER_ADDED" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*)&gt;= 1</GroupEvtConstr>
        <GroupByAttr>user,domain,targetUser,targetDomain </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,user,domain,targetUser,targetDomain,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_14" phIncidentCategory="Server" function="CHANGE">
    <Name>Audited file/directory created</Name>
    <active>true</active>
    <Description>FortiSIEM agentless file monitoring detected that a file or a directory was created </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CUST_FILE_CREATE" severity="9">
      <ArgList>
        hostName = FileCreate.hostName, hostIpAddr = FileCreate.hostIpAddr, fileName = FileCreate.fileName, user = FileCreate.user, fileAccess = FileCreate.fileAccess
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="FileCreate" name="FileCreate">
        <SingleEvtConstr> eventType = "PH_DEV_MON_CUST_FILE_CREATE" </SingleEvtConstr>
	<GroupByAttr> hostName, hostIpAddr, fileName, user, fileAccess </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,fileName,user,fileAccess,hashCode</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_15" phIncidentCategory="Server" function="CHANGE">
    <Name>Audited file/directory deleted</Name>
    <active>true</active>
    <Description>FortiSIEM agentless file monitoring detected that a file or a directory was deleted </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CUST_FILE_DELETE" severity="9">
      <ArgList>
        hostName = FileDelete.hostName, hostIpAddr = FileDelete.hostIpAddr, fileName = FileDelete.fileName, user = FileDelete.user, fileAccess = FileDelete.fileAccess
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="FileDelete" name="FileDelete">
        <SingleEvtConstr> eventType = "PH_DEV_MON_CUST_FILE_DELETE" </SingleEvtConstr>
	<GroupByAttr> hostName, hostIpAddr, fileName, user, fileAccess </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,fileName,user,fileAccess,hashCode</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_16" phIncidentCategory="Server" function="CHANGE">
    <Name>Audited file/directory ownership/permission changed </Name>
    <active>true</active>
    <Description>FortiSIEM agentless file monitoring detected that a file or a directory ownership or permission changed </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CUST_FILE_PERM_OWN_CHANGE" severity="9">
      <ArgList>
        hostName = FileChange.hostName, hostIpAddr = FileChange.hostIpAddr, fileName = FileChange.fileName, user = FileChange.user, userGrp = FileChange.userGrp, fileAccess = FileChange.fileAccess, preUser = FileChange.preUser, preFileAccess = FileChange.preFileAccess, preUserGrp = FileChange.preUserGrp
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="FileChange" name="FileChange">
        <SingleEvtConstr> eventType = "PH_DEV_MON_CUST_FILE_CHANGE_ATTRIB" </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr,fileName,user,userGrp,fileAccess,preUser,preUserGrp,preFileAccess </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,fileName,user,userGrp,fileAccess,preUser,preUserGrp,preFileAccess</AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  
  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_17" phIncidentCategory="Server" function="CHANGE">
    <Name>Audited file/directory content modified</Name>
    <active>true</active>
    <Description>FortiSIEM agentless file monitoring detected that a file or a directory content was modified </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CUST_FILE_CONTENT_CHANGE" severity="9">
      <ArgList>
        hostName = FileModify.hostName, hostIpAddr = FileModify.hostIpAddr, fileName = FileModify.fileName, addedItem = FileModify.addedItem, deletedItem = FileModify.deletedItem
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="FileModify" name="FileModify">
        <SingleEvtConstr> eventType = "PH_DEV_MON_CUST_FILE_DELTA" </SingleEvtConstr>
	<GroupByAttr> hostName, hostIpAddr, fileName, addedItem, deletedItem </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,fileName,addedItem, deletedItem,oldSVNVersion,newSVNVersion</AttrList>
    </TriggerEventDisplay>
  </Rule>  

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_18" phIncidentCategory="Server" function="CHANGE">
    <Name>Audited target file content modified</Name>
    <active>true</active>
    <Description>FortiSIEM agentless file monitoring detected that a file content is different than its target file</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CUST_TARGET_FILE_MODIFY" severity="9">
      <ArgList>
        hostName = FileModify.hostName, hostIpAddr = FileModify.hostIpAddr, fileName = FileModify.fileName, addedItem = FileModify.addedItem, deletedItem = FileModify.deletedItem
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="FileModify" name="FileModify">
        <SingleEvtConstr> eventType = "PH_DEV_MON_CUST_TARGET_FILE_DELTA" </SingleEvtConstr>
	<GroupByAttr> hostName, hostIpAddr, fileName, addedItem, deletedItem </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,fileName,oldSVNVersion,newSVNVersion,addedItem, deletedItem</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_19" phIncidentCategory="Application" function="CHANGE">
    <Name>Database user/group changes</Name>
    <active>true</active>
    <Description>Detects database </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_DB_USER" severity="7">
      <ArgList>
        destName = DBUser.reptDevName, destIpAddr = DBUser.reptDevIpAddr, user = DBUser.user, compEventType = DBUser.eventType
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DBUser" name="DBUser">
        <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_DatabaseChange)  AND eventType CONTAIN "user"</SingleEvtConstr>
	<GroupByAttr>reptDevName,reptDevIpAddr,user,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,user,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_20" phIncidentCategory="Application" function="CHANGE">
    <Name>Database DDL changes</Name>
    <active>true</active>
    <Description>Detects database DDL changes </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CHANGE_DB_DDL" severity="7">
      <ArgList>
        destName = DBChange.reptDevName, destIpAddr = DBChange.reptDevIpAddr, compEventType = DBChange.eventType
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DBChange" name="DBChange">
        <SingleEvtConstr>eventType IN (Group@PH_SYS_EVENT_DatabaseChange)  AND eventType NOT CONTAIN "user"</SingleEvtConstr>
	<GroupByAttr>reptDevName,reptDevIpAddr,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,user,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>  
  
  <Rule group="PH_SYS_RULE_Change_Server" id="PH_Rule_Change_23" phIncidentCategory="Application" function="CHANGE">
    <Name>Windows Server USB File Write</Name>
    <active>true</active>
    <Description>Detects Windows Server USB file writes </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WIN_USB_WRITE" severity="7">
      <ArgList>
        destName = Writes.reptDevName, 
	diskName= Writes.diskName, 
	fileName= Writes.fileName, 
	osObjAction = Writes.osObjAction, 
	user= Writes.user,
	domain= Writes.domain
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Writes" name="Writes">
        <SingleEvtConstr>eventType IN ("AO-WUA-RemovableMedia-AddFile","AO-WUA-RemovableMedia-ModifyFile","AO-WUA-RemovableMedia-RemoveFile","AO-WUA-RemovableMedia-RenameFile")  </SingleEvtConstr>
	<GroupByAttr>reptDevName,diskName,fileName,osObjAction,user,domain</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,diskName,fileName,osObjAction,user,domain,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>

   <Rule id="PH_Rule_CyberArk_1" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
       <Name>CyberArk Vault Excessive Password Release Failure</Name>
       <active>true</active>
    <Description> Detects excessive password release failures from CyberArk Vault Central Policy Manager </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CYBERARK_EXCESS_PWD_RELEASE_FAILURE" severity="8">
      <ArgList>
        srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType = "CyberArk-Vault-137" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_2" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
       <Name>CyberArk Vault Excessive Failed PSM Connections</Name>
       <active>true</active>
    <Description> Detects excessive failed connections to CyberArk Vault via Privileged Session Manager </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CYBERARK_EXCESS_PSM_CONN_FAILURE" severity="8">
      <ArgList>
        srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType IN ("CyberArk-Vault-301","CyberArk-Vault-379") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_3" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
       <Name>CyberArk Vault Excessive PSM Keystroke Logging Failure</Name>
       <active>true</active>
    <Description> Detects CyberArk vault keystroke logging and audit failures via Privileged Session Manager </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CYBERARK_EXCESS_PSM_LOGGING_FAILURE" severity="8">
      <ArgList>
        srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType IN ("CyberArk-Vault-362","CyberArk-Vault-413") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_4" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
       <Name>CyberArk Vault Excessive PSM Session Monitoring Failure</Name>
       <active>true</active>
    <Description> Detects excessive CyberArk Privileged Session Manager Session Monitoring Failures</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CYBERARK_EXCESS_PSM_MONITOR_FAILURE" severity="8">
      <ArgList>
        srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType = "CyberArk-Vault-375" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_5" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
       <Name>CyberArk Vault Unauthorized User Stations</Name>
       <active>true</active>
    <Description> Detects excessive unauthorized CyberArk user Stations </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CYBERARK_EXCESS_UNAUTH_USER" severity="8">
      <ArgList>
        srcIpAddr = Failure.srcIpAddr, user = Failure.user
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType IN ("CyberArk-Vault-5","CyberArk-Vault-10") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

  <Rule id="PH_Rule_CyberArk_6" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
     <Name>CyberArk Vault Excessive Impersonations</Name>
     <active>true</active>
     <Description> Detects excessive CyberArk Privileged Session Manager Session Monitoring Failures</Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_CYBERARK_EXCESS_PSM_IMPERSONATIONS" severity="8">
       <ArgList>
         srcIpAddr = Failure.srcIpAddr, user = Failure.user
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType IN ("CyberArk-Vault-15","CyberArk-Vault-18") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,srcIpAddr,user,rawEventMsg </AttrList>
     </TriggerEventDisplay>
   </Rule>
   
   <Rule id="PH_Rule_CyberArk_7" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
     <Name>CyberArk Vault User History Clear</Name>
     <active>true</active>
     <Description> Detects CyberArk Vault user history being cleared </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_CYBERARK_USER_HISTORY_CLEAR" severity="8">
       <ArgList>
         srcIpAddr = Failure.srcIpAddr, user = Failure.user
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType = "CyberArk-Vault-82" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,srcIpAddr,user,rawEventMsg </AttrList>
     </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_8" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
     <Name>CyberArk Vault CPM Password Disables</Name>
     <active>true</active>
     <Description> Detects CyberArk Vault password being disabled via CPM </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_CYBERARK_PASSWORD_DISABLE" severity="8">
       <ArgList>
         srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType = "CyberArk-Vault-130" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,fileName,rawEventMsg </AttrList>
     </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_9" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
     <Name>CyberArk Vault Object Content Validation Failure</Name>
     <active>true</active>
     <Description> Detects CyberArk Vault Object Content Validation Failures </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_CYBERARK_OBJECT_VALIDATION_FAILURE" severity="8">
       <ArgList>
         srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType = "CyberArk-Vault-366" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 2</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,fileName,rawEventMsg </AttrList>
     </TriggerEventDisplay>
   </Rule>

   <Rule id="PH_Rule_CyberArk_10" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
     <Name>CyberArk Vault File Operation Failure</Name>
     <active>true</active>
     <Description> Detects CyberArk Vault file operation failures </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_CYBERARK_FILE_OPERATION_FAILURE" severity="8">
       <ArgList>
         srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType IN ("CyberArk-Vault-204","CyberArk-Vault-205") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 2</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,fileName,rawEventMsg </AttrList>
     </TriggerEventDisplay>
   </Rule>


   <Rule id="PH_Rule_CyberArk_11" group="PH_SYS_RULE_Authen_App"  phIncidentCategory="Server" function="SECURITY">
     <Name>CyberArk Vault Blocked Failure</Name>
     <active>true</active>
     <Description> Detects CyberArk Vault blocked operations </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_CYBERARK_BLOCKED_OPERATION" severity="8">
       <ArgList>
         srcIpAddr = Failure.srcIpAddr, user = Failure.user, cyberArkSafe = Failure.cyberArkSafe, fileName = Failure.fileName
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="user">
       <WatchList>PH_DYNLIST_AUTHEN_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Failure" name="Failure">
         <SingleEvtConstr> eventType IN ("CyberArk-Vault-403","CyberArk-Vault-408","CyberArk-Vault-409") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 2</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,user,cyberArkSafe,fileName </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,srcIpAddr,user,cyberArkSafe,fileName,rawEventMsg </AttrList>
     </TriggerEventDisplay>
   </Rule>

</Rules>
<Rules>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_1" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Low Buffer Cache Hit Ratio </Name>
    <active>true</active>
    <Description> Detects that average buffer cache hit ratio is less than 90 for 2 successive readings</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_LOW_BUFF_CACHE_HIT" severity="9">
      <ArgList>
        hostName = CacheHitLow.hostName,
	instanceName = CacheHitLow.instanceName,
	dbBufferCacheHitRatio = CacheHitLow.AVG(dbBufferCacheHitRatio)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="CacheHitLow" name="CacheHitLow">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</SingleEvtConstr>
	<GroupByAttr> hostName,instanceName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbBufferCacheHitRatio) &lt; 90  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbBufferCacheHitRatio,dbLogCacheHitRatio,dbPageReadsPerSec,dbPageWritesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_2" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Low Log Cache Hit Ratio </Name>
    <active>true</active>
    <Description> Detects that log buffer cache hit ratio is less than 90 for 2 successive readings</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_LOW_LOG_CACHE_HIT" severity="9">
      <ArgList>
        hostName = CacheHitLow.hostName,
	instanceName = CacheHitLow.instanceName, 
	dbLogCacheHitRatio = CacheHitLow.AVG(dbLogCacheHitRatio)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="CacheHitLow" name="CacheHitLow">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</SingleEvtConstr>
	<GroupByAttr> hostName,instanceName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbLogCacheHitRatio) &lt; 90  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbLogCacheHitRatio,dbBufferCacheHitRatio,dbPageReadsPerSec,dbPageWritesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_3" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Excessive Deadlock </Name>
    <active>true</active>
    <Description> Detects excessive SQL Server deadlocks ( larger 2/sec over 2 succesive readings) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_EXCESS_DEADLOCK" severity="9">
      <ArgList>
        hostName = ExcessDeadlock.hostName,
	instanceName = ExcessDeadlock.instanceName, 
	dbDeadLocksPerSec = ExcessDeadlock.AVG(dbDeadLocksPerSec)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="ExcessDeadlock" name="ExcessDeadlock">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</SingleEvtConstr>
	<GroupByAttr> hostName,instanceName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbDeadLocksPerSec) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbDeadLocksPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_4" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Excessive Page Read/Write </Name>
    <active>true</active>
    <Description> Detects excessive SQL Server page read/write ( larger than 90 over 2 succesive readings) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_EXCESS_PAGE_RW" severity="9">
      <ArgList>
        hostName = ExcessPageRW.hostName,
	instanceName = ExcessPageRW.instanceName, 
	dbPageReadsPerSec = ExcessPageRW.AVG(dbPageReadsPerSec),
	dbPageWritesPerSec = ExcessPageRW.AVG(dbPageWritesPerSec)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="ExcessPageRW" name="ExcessPageRW">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</SingleEvtConstr>
	<GroupByAttr> hostName,instanceName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND (AVG(dbPageReadsPerSec) &gt;= 90 OR AVG(dbPageWritesPerSec) &gt;= 90)  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbPageReadsPerSec,dbPageWritesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_5" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Low Free Pages in Buffer Pool </Name>
    <active>true</active>
    <Description> Detects low free pages in SQL Server buffer pool (less than 640 over 2 succesive readings) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_LOW_BP_PAGES" severity="9">
      <ArgList>
        hostName = LowBuffPoolPage.hostName,
	instanceName = LowBuffPoolPage.instanceName, 
	dbPagesFreeInBufferPool = LowBuffPoolPage.AVG(dbPagesFreeInBufferPool)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="LowBuffPoolPage" name="LowBuffPoolPage">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</SingleEvtConstr>
	<GroupByAttr> hostName,instanceName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbPagesFreeInBufferPool) &lt; 640 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbPagesFreeInBufferPool,dbPagesInBufferPool,dbPageReadsPerSec,dbPageWritesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>  

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_6" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Excessive Blocking </Name>
    <active>true</active>
    <Description> Detects a particular process/user blocked for more than 2 sec </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_EXCESS_BLOCK" severity="9">
      <ArgList>
        hostName = ExcessBlock.hostName,
	instanceName =  ExcessBlock.instanceName,
	blockingLoginUser = ExcessBlock.blockingLoginUser,
	blockingCommand = ExcessBlock.blockingCommand,
	blockedLoginUser = ExcessBlock.blockedLoginUser,
	blockedCommand = ExcessBlock.blockedCommand,
	blockedDuration = ExcessBlock.AVG(blockedDuration)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="ExcessBlock" name="ExcessBlock">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_BLOCKBY_INFO"</SingleEvtConstr>
	<GroupByAttr> hostName,instanceName,blockingLoginUser,blockingCommand,blockingDbName,blockedLoginUser,blockedCommand,blockedProcessName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(blockedDuration) &gt; 2000 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,blockingLoginUser,blockingCommand,blockingDbName,blockingSpId,blockedLoginUser,blockedCommand,blockedProcessName,blockedSpId,blockedDuration</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_7" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Database Server Disk Latency Critical </Name>
    <active>true</active>
    <Description>Detects that database server disk I/O latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DB_SERVER_DISK_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = ServDiskLatencyCrit.hostIpAddr, hostName = ServDiskLatencyCrit.hostName, diskName = ServDiskLatencyCrit.diskName,devDiskRdLatency = ServDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyCrit.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName=" ServDiskLatencyCrit" name=" ServDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_DISK_IO_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot") AND hostIpAddr IN (Group@PH_SYS_APP_DATABASE_SERVER) </SingleEvtConstr>
         <GroupEvtConstr> (AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>  

   <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_8" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server Excessive Full Scan </Name>
    <active>true</active>
    <Description> Detects excessive full scan (greater than 1000 per second) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SQL_SRV_EXCESS_FULL_SCAN" severity="9">
      <ArgList>
        hostName = ExcessScan.hostName,
	instanceName = ExcessScan.instanceName, 
	dbFullScansPerSec = ExcessScan.AVG(dbFullScansPerSec)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="ExcessScan" name="ExcessScan">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_SYS"</SingleEvtConstr>
	<GroupByAttr> hostName, instanceName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbFullScansPerSec) &gt; 1000 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbFullScansPerSec,dbPageReadsPerSec,dbPageWritesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_10" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>High Oracle System Table Space Usage  </Name>
    <active>true</active>
    <Description> Detects high SYSTEM tablespace usage </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_SYSTEM_TABLESPACE_HIGH" severity="9">
      <ArgList>
        hostName = HighSystemTS.hostName,
	tablespaceUsage = HighSystemTS.AVG(tablespaceUsage)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="HighSystemTS" name="HighSystemTS">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB_TABLESPACE" AND tablespaceName = "SYSTEM" </SingleEvtConstr>
	<GroupByAttr> hostName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(tablespaceUsage) &gt; 80  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,tablespaceName, tablespaceUsage, tablespaceFreeSpace</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_11" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>High Oracle Non-System Table Space Usage  </Name>
    <active>true</active>
    <Description> Detects high non-SYSTEM tablespace usage </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_NONSYS_TABLESPACE_HIGH" severity="9">
      <ArgList>
        hostName = HighSystemTS.hostName,
	tablespaceName = HighSystemTS.tablespaceName,
	tablespaceUsage = HighSystemTS.AVG(tablespaceUsage)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="HighSystemTS" name="HighSystemTS">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB_TABLESPACE" AND tablespaceName != "SYSTEM" </SingleEvtConstr>
	<GroupByAttr> hostName,tablespaceName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(tablespaceUsage) &gt; 95 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,tablespaceName, tablespaceUsage, tablespaceFreeSpace</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_12" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Oracle Database not backed up for 1 day</Name>
    <active>true</active>
    <Description> Detects that Oracle database has not been backed up for more than 1 day </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_NO_BACKUP" severity="9">
      <ArgList>
        hostName = NoBackup.hostName,
	instanceName = NoBackup.instanceName,
	timeSinceLastBackup = NoBackup.AVG(timeSinceLastBackup);
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="NoBackup" name="NoBackup">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB"  </SingleEvtConstr>
	<GroupByAttr> hostName,instanceName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 AND AVG(timeSinceLastBackup) &gt; 86400 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,instanceName,lastBackupDate,timeSinceLastBackup</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_13" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Oracle DB Low Buffer Cache Hit Ratio </Name>
    <active>true</active>
    <Description> Detects that average buffer cache hit ratio is less than 90 for 2 successive readings</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_LOW_BUFF_CACHE_HIT" severity="9">
      <ArgList>
        hostName = CacheHitLow.hostName, 
	dbBufferCacheHitRatio = CacheHitLow.AVG(dbBufferCacheHitRatio)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="CacheHitLow" name="CacheHitLow">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB"</SingleEvtConstr>
	<GroupByAttr> hostName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbBufferCacheHitRatio) &lt; 90  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_14" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Oracle DB Low Library Cache Hit Ratio </Name>
    <active>true</active>
    <Description> Detects that average library cache hit ratio is less than 90 for 2 successive readings</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_LOW_LIB_CACHE_HIT" severity="7">
      <ArgList>
        hostName = CacheHitLow.hostName, 
	dbLibraryCacheHitRatio = CacheHitLow.AVG(dbLibraryCacheHitRatio)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="CacheHitLow" name="CacheHitLow">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB"</SingleEvtConstr>
	<GroupByAttr> hostName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbLibraryCacheHitRatio) &lt; 90  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbLibraryCacheHitRatio,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_15" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Oracle DB Low Row Cache Hit Ratio </Name>
    <active>true</active>
    <Description> Detects that average row cache hit ratio is less than 90 for 2 successive readings</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_LOW_ROW_CACHE_HIT" severity="7">
      <ArgList>
        hostName = CacheHitLow.hostName, 
	dbRowCacheHitRatio = CacheHitLow.AVG(dbRowCacheHitRatio)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="CacheHitLow" name="CacheHitLow">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB"</SingleEvtConstr>
	<GroupByAttr> hostName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbRowCacheHitRatio) &lt; 90  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbRowCacheHitRatio,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_16" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Oracle DB Low Row Memory Sorts Ratio </Name>
    <active>true</active>
    <Description> Detects that average memory sorts ratio is less than 90 for 2 successive readings</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_LOW_MEMSORT_RATIO" severity="7">
      <ArgList>
        hostName = MemSortRatioLow.hostName, 
	dbMemorySortsRatio = MemSortRatioLow.AVG(dbMemorySortsRatio)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="MemSortRatioLow" name="MemSortRatioLow">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB"</SingleEvtConstr>
	<GroupByAttr> hostName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(dbMemorySortsRatio) &lt; 90  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbMemorySortsRatio,dbBufferCacheHitRatio,dbPhysicalReadsPerSec,dbPhysicalWritesPerSec,dbRequestsPerSec,dbIOKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_17" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Oracle DB Alert Log Error</Name>
    <active>true</active>
    <Description> Detects Oracle database alert log errors</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_ALERT_LOG_ERROR" severity="9">
      <ArgList>
        hostName = AlertLog.hostName, 
	compEventType = AlertLog.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="AlertLog" name="AlertLog">
        <SingleEvtConstr> eventType CONTAIN "ORADB-ORA"</SingleEvtConstr>
	<GroupByAttr> hostName,eventType </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1   </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,eventType,rawEventMsg</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_18" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Excessively Slow Oracle DB Query </Name>
    <active>true</active>
    <Description> Detects that an Oracle query took more than 5 minute to complete</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ORADB_LONG_QUERY" severity="7">
      <ArgList>
        hostName = LongQuery.hostName, 
	dbName = LongQuery.dbName,
	instanceName = LongQuery.instanceName,
	command = LongQuery.command,
	dbQueryResponseTimeSec= LongQuery.AVG(dbQueryResponseTimeSec)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="LongQuery" name="LongQuery">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_ORADB_TOP_QUERIES"</SingleEvtConstr>
	<GroupByAttr> hostName,dbName,instanceName,command </GroupByAttr>
	<GroupEvtConstr> AVG(dbQueryResponseTimeSec) &gt; 300  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,dbName,instanceName,command,dbQueryResponseTimeSec</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_19" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Excessively Slow SQL Server DB Query </Name>
    <active>true</active>
    <Description> Detects that an SQL Server query took more than 5 minute to complete</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MSSQL_LONG_QUERY" severity="7">
      <ArgList>
        hostName = LongQuery.hostName, 
	dbName = LongQuery.dbName,
	instanceName = LongQuery.instanceName,
	command = LongQuery.command,
	dbQueryResponseTimeSec= LongQuery.AVG(dbQueryResponseTimeSec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="LongQuery" name="LongQuery">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MSSQL_TOP_QUERIES"</SingleEvtConstr>
	<GroupByAttr> hostName,dbName,instanceName,command </GroupByAttr>
	<GroupEvtConstr> AVG(dbQueryResponseTimeSec) &gt; 300  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,dbName,instanceName,command,dbQueryResponseTimeSec</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_20" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>SQL Server scheduled job failed </Name>
    <active>true</active>
    <Description> Detects that an SQL Server scheduled job failed</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MSSQL_FAILED_JOB" severity="7">
      <ArgList>
        hostName = FailedJob.hostName, 
	caller = FailedJob.caller,
	jobName = FailedJob.jobName,
	lastStep = FailedJob.lastStep,
	errorString = FailedJob.errorString
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
      <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FailedJob" name="FailedJob">
        <SingleEvtConstr> eventType = "Win-App-SQLSERVERAGENT-208"</SingleEvtConstr>
	<GroupByAttr> hostName,caller,jobName,lastStep,errorString </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 1   </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,caller,jobName,lastStep,errorString,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_DB" id="PH_Rule_DB_22" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Slow MySQL DB Query </Name>
    <active>true</active>
    <Description> Detects more than 2 slow queries on a MySQL Server. The threshold on query execution time is set on the database server. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MYSQL_SLOW_QUERY" severity="7">
      <ArgList>
        hostName = SlowQuery.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
      <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="SlowQuery" name="SlowQuery">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERF_MYSQLDB"</SingleEvtConstr>
	<GroupByAttr> hostName </GroupByAttr>
	<GroupEvtConstr> AVG(dbSlowQueries) &gt;= 2  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,dbUserConn,dbQuestions,dbSlowQueries,dbQcacheHits,dbQueriesinCache</AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_1" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>UPS Battery Metrics Critical </Name>
    <active>true</active>
    <Description> Detects that key UPS operational etrics are outside of normal operational range </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UPS_BATTERY_METRIC_CRIT" severity="9">
      <ArgList>
	hostIpAddr = LowBattery1.hostIpAddr,
        hostName = LowBattery1.hostName, 
	upsAdvOutputFreq = LowBattery1.AVG(upsAdvOutputFreq),
	upsAdvOutputVoltage = LowBattery1.AVG(upsAdvOutputVoltage),
	upsAdvOutputLoad = LowBattery1.AVG(upsAdvOutputLoad)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="LowBattery1" name="LowBattery1">
        <SingleEvtConstr> eventType = "PH_DEV_MON_UPS_METRIC" AND upsAdvOutputFreq IS NOT NULL AND upsAdvOutputVoltage IS NOT NULL </SingleEvtConstr>
	<GroupByAttr> hostIpAddr, hostName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND ( AVG(upsAdvOutputFreq) &lt;= 55 OR AVG(upsAdvOutputFreq) &gt;= 65 OR AVG(upsAdvOutputVoltage) &lt; 110 OR AVG(upsAdvOutputVoltage) &gt; 125 OR AVG(upsAdvOutputLoad) &gt;= 50) </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, upsRemainBatteryChargePct,upsBatteryStatus,upsReplaceBatteryIndicator,upsTimeOnBattery,upsBasicOutputStatus,upsAdvOutputLoad,upsAdvOutputVoltage,upsAdvOutputFreq </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!--      -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_2" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>UPS Battery Status Critical </Name>
    <active>true</active>
    <Description> Detects that key UPS battery status are reflecting critical state </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UPS_BATTERY_STAT_CRIT" severity="9">
      <ArgList>
	hostIpAddr = LowBattery2.hostIpAddr,
        hostName = LowBattery2.hostName,
	upsTimeOnBattery = LowBattery2.AVG(upsTimeOnBattery),
	upsBatteryStatus =  LowBattery2.AVG(upsBatteryStatus), 
	upsRemainBatteryChargePct = LowBattery2.AVG(upsRemainBatteryChargePct), 
	upsReplaceBatteryIndicator = LowBattery2.AVG(upsReplaceBatteryIndicator),
	upsBasicOutputStatus = LowBattery2.AVG(upsBasicOutputStatus)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
      <SubPattern displayName="LowBattery2" name="LowBattery2">
        <SingleEvtConstr> eventType = "PH_DEV_MON_UPS_METRIC" AND (upsBatteryStatus = 3 OR upsBatteryStatus = 4 OR upsRemainBatteryChargePct &lt; 50 OR upsTimeOnBattery &gt;= 120 OR upsBasicOutputStatus != 2 OR upsReplaceBatteryIndicator = 2) </SingleEvtConstr>
	<GroupByAttr> hostIpAddr, hostName </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 AND ( AVG(upsBatteryStatus) &gt; 2 OR AVG(upsRemainBatteryChargePct) &lt; 50 OR  AVG(upsTimeOnBattery) &gt;= 120 OR AVG(upsBasicOutputStatus) &gt; 2 OR AVG(upsReplaceBatteryIndicator) &gt; 1) </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, upsRemainBatteryChargePct,upsBatteryStatus,upsReplaceBatteryIndicator,upsTimeOnBattery,upsBasicOutputStatus,upsAdvOutputLoad,upsAdvOutputVoltage,upsAdvOutputFreq </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!--      -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_3" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>HVAC temp high</Name>
    <active>true</active>
    <Description> Detects that HVAC temperature is less than 5 degree Fahrenheit from upper threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HVAC_TOO_HOT" severity="9">
      <ArgList>
	hostIpAddr = HVAC_Hot.hostIpAddr,
        hostName = HVAC_Hot.hostName,
	envTempOffHighDegF = HVAC_Hot.AVG(envTempOffHighDegF)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="HVAC_Hot" name="HVAC_Hot">
        <SingleEvtConstr> eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC" </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(envTempOffHighDegF) &lt; 5  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envTempOffHighDegF,envTempOffLowDegF </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_4" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>HVAC temp low</Name>
    <active>true</active>
    <Description> Detects that HVAC temperature is less than 5 degree Fahrenheit from the lower threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HVAC_TOO_COLD" severity="9">
      <ArgList>
	hostIpAddr = HVAC_Cold.hostIpAddr,
        hostName = HVAC_Cold.hostName,
	envTempOffLowDegF = HVAC_Cold.AVG(envTempOffLowDegF)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="HVAC_Cold" name="HVAC_Cold">
        <SingleEvtConstr> eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC" </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(envTempOffLowDegF) &lt; 5  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- **** -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_5" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>HVAC humidity high</Name>
    <active>true</active>
    <Description> Detects that HVAC relative humidity is less than 5 units from upper threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HVAC_TOO_HUMID" severity="9">
      <ArgList>
	hostIpAddr = HVAC_Humid.hostIpAddr,
        hostName = HVAC_Humid.hostName,
	envHumidityOffHigh = HVAC_Humid.AVG(envHumidityOffHigh)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="HVAC_Humid" name="HVAC_Humid">
        <SingleEvtConstr> eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"  </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(envHumidityOffHigh) &lt; 5  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- **** -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_6" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>HVAC humidity low</Name>
    <active>true</active>
    <Description> Detects that HVAC relative humidity is less than 5 units from lower threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HVAC_TOO_DRY" severity="9">
      <ArgList>
	hostIpAddr = HVAC_Humid.hostIpAddr,
        hostName = HVAC_Humid.hostName,
	envHumidityOffLow = HVAC_Humid.AVG(envHumidityOffLow)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="HVAC_Humid" name="HVAC_Humid">
        <SingleEvtConstr> eventType = "PH_DEV_MON_HVAC_LIEBERT_METRIC"  </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(envHumidityOffLow) &lt; 5  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, envTempDegF,envTempHighThreshDegF,envTempLowThreshDegF,envHumidityRel,envHumidityRelHighThresh,envHumidityRelLowThresh </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- **** -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_7" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>FPC Voltage THD high</Name>
    <active>true</active>
    <Description> Detects that Voltage total harmonic distortion is more than 0.15 pct</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FPC_VHD_HIGH" severity="9">
      <ArgList>
	hostIpAddr = FPC_VHD_high.hostIpAddr,
        hostName = FPC_VHD_high.hostName,
	outputVxTHD = FPC_VHD_high.AVG(outputVxTHD),
	outputVyTHD = FPC_VHD_high.AVG(outputVyTHD),
	outputVzTHD = FPC_VHD_high.AVG(outputVzTHD)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="FPC_VHD_high" name="FPC_VHD_high">
        <SingleEvtConstr> eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"  </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND (AVG(outputVxTHD) &gt;= 15 OR AVG(outputVyTHD) &gt; 15 OR AVG(outputVzTHD) &gt;= 15)  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName,outputVoltageXNVolts,outputVoltageYNVolts,outputVoltageZNVolts,outputVxTHD,outputVyTHD,outputVzTHD </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- **** -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_8" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>FPC Current THD high</Name>
    <active>true</active>
    <Description> Detects that current total harmonic distortion is more than 0.15 pct</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FPC_CHD_HIGH" severity="9">
      <ArgList>
	hostIpAddr = FPC_CHD_high.hostIpAddr,
        hostName = FPC_CHD_high.hostName,
	outputLxTHD = FPC_CHD_high.AVG(outputLxTHD),
	outputLyTHD = FPC_CHD_high.AVG(outputLyTHD),
	outputLzTHD = FPC_CHD_high.AVG(outputLzTHD)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="FPC_CHD_high" name="FPC_CHD_high">
        <SingleEvtConstr> eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"  </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND (AVG(outputLxTHD) &gt;= 5 OR AVG(outputLyTHD) &gt; 5 OR AVG(outputLzTHD) &gt;= 5)  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, outputCurrentXAmps,outputCurrentYAmps,outputCurrentZAmps,outputLxTHD,outputLyTHD,outputLzTHD </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- **** -->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_9" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>FPC ground current high</Name>
    <active>true</active>
    <Description> Detects that ground current is more than 0.12 amps</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FPC_GROUND_CURR_HIGH" severity="9">
      <ArgList>
	hostIpAddr = FPC_GC_high.hostIpAddr,
        hostName = FPC_GC_high.hostName,
	groundCurrentAmps = FPC_GC_high.AVG(groundCurrentAmps)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="FPC_GC_high" name="FPC_GC_high">
        <SingleEvtConstr> eventType = "PH_DEV_MON_FPC_LIEBERT_METRIC"  </SingleEvtConstr>
	<GroupByAttr> hostName,hostIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(groundCurrentAmps) &gt;= .12   </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, neutralCurrentAmps,groundCurrentAmps </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_10" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>NetBotz module door open</Name>
    <active>true</active>
    <Description> Detects that netbotz door sensor values went from Close to Open</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETB_DOOR_OPEN" severity="9">
      <ArgList>
        hostIpAddr = DoorClosed.hostIpAddr,
	hostName = DoorClosed.hostName,
	envSensorId = DoorClosed.envSensorId,
	envSensorLabel = DoorClosed.envSensorLabel,
	envSensorEnclosureId  = DoorClosed.envSensorEnclosureId 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="DoorClosed" name="DoorClosed">
         <SingleEvtConstr> eventType = "PH_DEV_MON_HW_DOOR_SWITCH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND doorSwitchSensorVal = "Closed" </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</GroupByAttr>
	 <GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
       </SubPattern>
       <Operator rank="0" type="FOLLOWED_BY"/>
       <SubPattern displayName="DoorOpen" name="DoorOpen">
         <SingleEvtConstr> eventType = "PH_DEV_MON_HW_DOOR_SWITCH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND doorSwitchSensorVal = "Open" </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</GroupByAttr>
	 <GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
       </SubPattern>
       <GlobalConstr>DoorClosed.hostIpAddr = DoorOpen.hostIpAddr AND 
                     DoorClosed.envSensorId = DoorOpen.envSensorId AND
		     DoorClosed.envSensorLabel = DoorOpen.envSensorLabel AND
		     DoorClosed.envSensorEnclosureId = DoorOpen.envSensorEnclosureId
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,envSensorId,envSensorLabel,envSensorEnclosureId,devPort,doorSwitchSensorVal </AttrList>
    </TriggerEventDisplay>

    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NETB_DOOR_OPEN_CLEAR">
	 <ArgList>hostIpAddr = DoorOpen_CLEAR.hostIpAddr,
	    hostName = DoorOpen_CLEAR.hostName,
	    envSensorId = DoorOpen_CLEAR.envSensorId,
	    envSensorLabel = DoorOpen_CLEAR.envSensorLabel,
	    envSensorEnclosureId  = DoorOpen_CLEAR.envSensorEnclosureId 
         </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NETB_DOOR_OPEN.hostIpAddr = PH_RULE_NETB_DOOR_OPEN_CLEAR.hostIpAddr, 
                    PH_RULE_NETB_DOOR_OPEN.envSensorId = PH_RULE_NETB_DOOR_OPEN_CLEAR.envSensorId,
		    PH_RULE_NETB_DOOR_OPEN.envSensorLabel = PH_RULE_NETB_DOOR_OPEN_CLEAR.envSensorLabel,
		    PH_RULE_NETB_DOOR_OPEN.envSensorEnclosureId = PH_RULE_NETB_DOOR_OPEN_CLEAR.envSensorEnclosureId
      </ClearConstr>
      <PatternClause window="120">
	<SubPattern displayName="DoorOpen_CLEAR" name="DoorOpen_CLEAR">
          <SingleEvtConstr>  eventType = "PH_DEV_MON_HW_DOOR_SWITCH" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND doorSwitchSensorVal = "Closed" </SingleEvtConstr>
          <GroupByAttr>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</GroupByAttr>
	  <GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
  <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Environ_11" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>NetBotz camera motion detected</Name>
    <active>true</active>
    <Description> Detects camera motion from NetBotz camera motion</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETB_CAMERA_MOTION" severity="9">
      <ArgList>
        hostIpAddr = CameraNoMotion.hostIpAddr,
	hostName = CameraNoMotion.hostName,
	envSensorId = CameraNoMotion.envSensorId,
	envSensorLabel = CameraNoMotion.envSensorLabel,
	envSensorEnclosureId  = CameraNoMotion.envSensorEnclosureId 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
       <SubPattern displayName="CameraNoMotion" name="CameraNoMotion">
         <SingleEvtConstr> eventType = "PH_DEV_MON_HW_CAMERA_MOTION" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND cameraMotionSensorVal = "No Motion" </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</GroupByAttr>
	 <GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
       </SubPattern>
       <Operator rank="0" type="FOLLOWED_BY"/>
       <SubPattern displayName="CameraMotion" name="CameraMotion">
         <SingleEvtConstr> eventType = "PH_DEV_MON_HW_CAMERA_MOTION" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND cameraMotionSensorVal = "Motion Detected" </SingleEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</GroupByAttr>
	 <GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
       </SubPattern>
       <GlobalConstr>CameraNoMotion.hostIpAddr = CameraMotion.hostIpAddr AND 
                     CameraNoMotion.envSensorId = CameraMotion.envSensorId AND
		     CameraNoMotion.envSensorLabel = CameraMotion.envSensorLabel AND
		     CameraNoMotion.envSensorEnclosureId = CameraMotion.envSensorEnclosureId
       </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,envSensorId,envSensorLabel,envSensorEnclosureId,devPort,cameraMotionSensorVal </AttrList>
    </TriggerEventDisplay>

    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NETB_CAMERA_MOTION_CLEAR">
	 <ArgList>hostIpAddr = CameraMotion_CLEAR.hostIpAddr,
	    hostName = CameraMotion_CLEAR.hostName,
	    envSensorId = CameraMotion_CLEAR.envSensorId,
	    envSensorLabel = CameraMotion_CLEAR.envSensorLabel,
	    envSensorEnclosureId  = CameraMotion_CLEAR.envSensorEnclosureId 
         </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NETB_CAMERA_MOTION.hostIpAddr = PH_RULE_NETB_CAMERA_MOTION_CLEAR.hostIpAddr, 
                    PH_RULE_NETB_CAMERA_MOTION.envSensorId = PH_RULE_NETB_CAMERA_MOTION_CLEAR.envSensorId,
		    PH_RULE_NETB_CAMERA_MOTION.envSensorLabel = PH_RULE_NETB_CAMERA_MOTION_CLEAR.envSensorLabel,
		    PH_RULE_NETB_CAMERA_MOTION.envSensorEnclosureId = PH_RULE_NETB_CAMERA_MOTION_CLEAR.envSensorEnclosureId
      </ClearConstr>
      <PatternClause window="120">
	<SubPattern displayName="CameraMotion_CLEAR" name="CameraMotion_CLEAR">
          <SingleEvtConstr>  eventType = "PH_DEV_MON_HW_CAMERA_MOTION" AND hostIpAddr IN (Group@PH_SYS_DEVICE_ENV_GEN) AND cameraMotionSensorVal = "No Motion" </SingleEvtConstr>
          <GroupByAttr>hostIpAddr,hostName,envSensorId,envSensorLabel,envSensorEnclosureId</GroupByAttr>
	  <GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

</Rules>
<Rules>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Web_Server_1" phIncidentCategory="Application" function="SECURITY">
    <Name>Excessive HTTP Client Side Errors</Name>
    <active>true</active>
    <Description> Detects multiple HTTP client side errors from the same IP - might indicate an attack . Thresholds are 5 errors from the samesrc IP within a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_HTTP_CLIENT_ERR" severity="9">
      <ArgList>
        srcIpAddr = ExcessHTTPClientErr.srcIpAddr, destIpAddr = ExcessHTTPClientErr.reptDevIpAddr,incidentCount = ExcessHTTPClientErr.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessHTTPClientErr" name="ExcessHTTPClientErr">
         <SingleEvtConstr> eventType IN ("IIS-Web-Forbidden-Access-Denied","IIS-Web-Bad-Request","IIS-Web-Length-Reqd-Access-Denied","Apache-Web-Forbidden-Access-Denied","Apache-Web-Bad-Request","Apache-Web-Length-Reqd-Access-Denied","Squid-Web-Forbidden-Access-Denied","Squid-Web-Bad-Request","Squid-Web-Length-Reqd-Access-Denied")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,srcIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,user,httpMethod,uriStem,eventType,httpStatusCode,httpSubStatusCode,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Web_Server_2" phIncidentCategory="Application" function="SECURITY">
    <Name>Excessive FTP Client Side Errors</Name>
    <active>true</active>
    <Description>Detects multiple FTP client side errors from the same IP - might indicate an attack from the source IP </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_FTP_CLIENT_ERR" severity="9">
      <ArgList>
        srcIpAddr = ExcessFTPClientErr.srcIpAddr, destIpAddr = ExcessFTPClientErr.reptDevIpAddr,user = ExcessFTPClientErr.user, incidentCount = ExcessFTPClientErr.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="ExcessFTPClientErr" name="ExcessFTPClientErr">
         <SingleEvtConstr> eventType IN ("IIS-FTP-Command-Not-Implemented","IIS-FTP-File-Not-Found","IIS-FTP-Illegal-File")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,srcIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,user,httpMethod,uriStem,httpStatusCode,httpSubStatusCode,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Web_Server_3" phIncidentCategory="Application" function="SECURITY">
    <Name>Executable file posting from external source</Name>
    <active>true</active>
    <Description>Detects an external IP posting an executable site to a web server </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXECUTABLE_FILE_POST" severity="9">
      <ArgList>
        srcIpAddr = ExecFilePost.srcIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="ExecFilePost" name="ExecFilePost">
         <SingleEvtConstr> httpMethod IN ("POST","PUT") AND eventType IN (Group@PH_SYS_EVENT_PermitWebTraffic) AND (uriStem CONTAIN ".cgi" OR uriStem CONTAIN ".asp" OR uriStem CONTAIN ".aspx" OR uriStem CONTAIN ".jar" OR uriStem CONTAIN ".php" OR uriStem CONTAIN ".exe" OR uriStem CONTAIN ".com" OR uriStem CONTAIN ".cmd" OR uriStem CONTAIN ".sh" OR uriStem CONTAIN ".bat")
 </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,httpMethod,uriStem,httpStatusCode,httpSubStatusCode,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_200" phIncidentCategory="Network" function="SECURITY">
    <Name>Heavy Half-Open TCP Port Scan: Single Destination</Name>
    <active>true</active>
    <Description> Detects a host performing a port scan - this involves excessive half open TCP connections from the same source to many distinct ports on a host in a short period of time. The thresholds are at least 20 distinct ports in a 2 minute window</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_HO_TCP_PORT_SCAN" severity="7">
      <ArgList>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpPort)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_PORT_SCANNER</WatchList>
    </DynWatchListDef> 
    <PatternClause window="120">
      <SubPattern displayName="Filter1" name="Filter1">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpPort) &gt;= 20</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_200B" phIncidentCategory="Network" function="SECURITY">
    <Name>Heavy TCP Port Scan: Single Destination</Name>
    <active>true</active>
    <Description> Detects a host performing a port scan - this involves excessive permitted TCP connections from the same source to many distinct ports on a host in a short period of time. The thresholds are at least 20 distinct ports in a 2 minute window</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_TCP_PORT_SCAN" severity="7">
      <ArgList>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpPort)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_PORT_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
      <SubPattern displayName="Filter1" name="Filter1">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic,Group@PH_SYS_EVENT_BiNetflowTraffic) AND eventType NOT IN ("Win-Security-5156", "ASA-302014", "PIX-302014","FWSM-302014") AND ipProto = 6 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpPort) &gt;= 20</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- ***************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_201" phIncidentCategory="Network" function="SECURITY">
    <Name>Heavy Half-Open TCP Port Scan: Multiple Destinations</Name>
    <active>true</active>
    <Description> Detects that a source is doing port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_HEAVY_HO_TCP_PORT_SCAN" severity="8">
      <ArgList>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_PORT_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="Filter1" name="Filter1">
        <SingleEvtConstr> eventType IN ("PH_RULE_HEAVY_HO_TCP_PORT_SCAN") </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT destIpAddr) &gt; 30</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- ***************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_201B" phIncidentCategory="Network" function="SECURITY">
    <Name>Heavy TCP Port Scan: Multiple Destinations</Name>
    <active>true</active>
    <Description> Detects that a source is doing port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_HEAVY_TCP_PORT_SCAN" severity="8">
      <ArgList>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_PORT_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="Filter1" name="Filter1">
        <SingleEvtConstr> eventType IN ("PH_RULE_HEAVY_TCP_PORT_SCAN") </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT destIpAddr) &gt; 30</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- ***************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_202" phIncidentCategory="Network" function="SECURITY">
    <Name>Heavy UDP Port Scan: Single Host</Name>
    <active>true</active>
    <Description> Detects excessive UDP connections from the same source to many distinct ports on the same destination in a short period of time </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_UDP_PORT_SCAN" severity="7">
      <ArgList>
        srcIpAddr = Filter1.srcIpAddr, destIpAddr = Filter1.destIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpPort)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_PORT_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
      <SubPattern displayName="Filter1" name="Filter1">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND srcIpPort &gt;= 1024 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpPort) &gt;= 20</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- ***************************************** -->
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_203" phIncidentCategory="Network" function="SECURITY">
    <Name>Heavy UDP Port Scan: Multiple Hosts</Name>
    <active>true</active>
    <Description> Detects that a source is doing UDP port scans on multiple hosts. The thresholds are port scans on at least 5 hosts in 15 minute window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_REPEAT_HEAVY_UDP_PORT_SCAN" severity="9">
      <ArgList>
        srcIpAddr = Filter1.srcIpAddr, incidentCount = Filter1.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_PORT_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="Filter1" name="Filter1">
        <SingleEvtConstr> eventType IN ("PH_RULE_HEAVY_UDP_PORT_SCAN") </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT destIpAddr) &gt; 30</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_204" phIncidentCategory="Network" function="SECURITY">
    <Name> Unusual ICMP Traffic </Name>
    <active>true</active>
    <Description> Detects unusual ( more than 10 in 3 minutes) ICMP types, namely other than echo request/reply and destination unreachables </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UNUSUAL_ICMP" severity="7">
      <ArgList>
        srcIpAddr = UnusualIcmp.srcIpAddr, icmpType = UnusualIcmp.icmpType, incidentCount = UnusualIcmp.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="180">
      <SubPattern displayName="UnusualIcmp" name="UnusualIcmp">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 1 AND icmpType NOT IN (0,3,8) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,icmpType </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt; 10 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode</AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_205" phIncidentCategory="Network" function="SECURITY">
    <Name> Invalid TCP/UDP Port Traffic </Name>
    <active>true</active>
    <Description> Detects invalid TCP/UDP traffic with 0 port (more than 10 in 3 minutes) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INVALID_TCP_UDP_PORT" severity="9">
      <ArgList>
        srcIpAddr = InvalidTCPUDP.srcIpAddr, incidentCount = InvalidTCPUDP.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="180">
      <SubPattern displayName="InvalidTCPUDP" name="InvalidTCPUDP">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND (ipProto = 17 OR ipProto = 6) AND destIpPort = 0  </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt; 10 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_206" phIncidentCategory="Network" function="SECURITY">
    <Name>Invalid TCP Flags - Medium Intensity </Name>
    <active>true</active>
    <Description> Detects 100 or more flows in 5 minutes, with invalid TCP flag combinations (NULL,FIN, SYN-FIN, SYN-FIN-PUSH, SYN-FIN-RESET, SYN-FIN-RESET-PUSH,SYN-FIN-RESET-PUSH-ACK-URG) - may indcate scanning and probing activity from the sender </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INVALID_TCP_FLAG_MEDIUM" severity="7">
      <ArgList>
        srcIpAddr = InvalidTCPFlag.srcIpAddr,incidentCount = InvalidTCPFlag.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="InvalidTCPFlag" name="InvalidTCPFlag">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND ipProto = 6 AND srcDestTCPFlags IN (1,3,7,11,15,31,63) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 100 AND COUNT(*) &lt; 500 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,destIpAddr,srcIpPort,ipProto,destIpPort,srcDestTCPFlags</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_207" phIncidentCategory="Network" function="SECURITY">
    <Name>Invalid TCP Flags - High Intensity </Name>
    <active>true</active>
    <Description> Detects 500 or more flows in 5 minutes, with invalid TCP flag combinations (FIN, SYN-FIN, SYN-FIN-PUSH, SYN-FIN-RESET, SYN-FIN-RESET-PUSH,SYN-FIN-RESET-PUSH-ACK-URG) - may indcate scanning and probing activity from the sender </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INVALID_TCP_FLAG_HIGH" severity="9">
      <ArgList>
        srcIpAddr = InvalidTCPFlag.srcIpAddr,incidentCount = InvalidTCPFlag.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="InvalidTCPFlag" name="InvalidTCPFlag">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND ipProto = 6 AND srcDestTCPFlags IN (1,3,7,11,15,31,63) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 500 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,destIpAddr,srcIpPort,ipProto,destIpPort,srcDestTCPFlags</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_208" phIncidentCategory="Network" function="SECURITY">
    <Name> Excessive ICMP Traffic From Same Source </Name>
    <active>true</active>
    <Description> Detects excessive (> 5000 in 5 minutes) ICMP traffic from the same source </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESSIVE_ICMP" severity="9">
      <ArgList>
        srcIpAddr = ExcessIcmp.srcIpAddr, incidentCount = ExcessIcmp.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="ExcessIcmp" name="ExcessIcmp">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND ipProto = 1 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt; 5000 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_209" phIncidentCategory="Network" function="SECURITY">
    <Name> Large Outbound Transfer </Name>
    <active>true</active>
    <Description> Detects a large outbound transfer (larger than 5MB in 10 minutes) from an internal host to an external destination </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LARGE_OUTBOUND_XFER" severity="8">
      <ArgList>
        srcIpAddr = LargeXfer.srcIpAddr, destIpAddr = LargeXfer.destIpAddr, sentBytes = LargeXfer.SUM(sentBytes)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="LargeXfer" name="LargeXfer">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)  </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr</GroupByAttr>
	<GroupEvtConstr> SUM(sentBytes) &gt;= 5242880 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_210" phIncidentCategory="Network" function="SECURITY">
    <Name> Traffic to bogon networks </Name>
    <active>true</active>
    <Description> Detects outbound permitted traffic to bogon networks. These are IP address spaces not yet allocated by IANA and may indicate that the source host is compromised. Note that these addresses change frequently. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BOGON_TRAFFIC" severity="10">
      <ArgList>
        srcIpAddr = BogonTraffic.srcIpAddr, destIpAddr = BogonTraffic.destIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="BogonTraffic" name="BogonTraffic">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_BOGON_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
 
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_211" phIncidentCategory="Network" function="SECURITY">
    <Name> Large Outbound Transfer To Outside My Country </Name>
    <active>true</active>
    <Description> Detects a large outbound transfer (larger than 2MB in 10 minutes) from an internal host to an external destination that is outside my country. The rule is written for United States and may need to be tuned for other countries. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LARGE_OUTBOUND_XFER_OUTSIDE_COUNTRY" severity="8">
      <ArgList>
        srcIpAddr = LargeXfer.srcIpAddr, destIpAddr = LargeXfer.destIpAddr, sentBytes = LargeXfer.SUM(sentBytes)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="LargeXfer" name="LargeXfer">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND destGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpAddr </GroupByAttr>
	<GroupEvtConstr> SUM(sentBytes) &gt;= 2097152 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_212" phIncidentCategory="Network" function="SECURITY">
    <Name> Large Inbound Transfer From Outside My Country </Name>
    <active>true</active>
    <Description> Detects a large inbound transfer (larger than 2MB in 10 minutes) from an external destination that is outside my country. The rule is written for United States and may need to be tuned for other countries. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LARGE_INBOUND_XFER_OUTSIDE_COUNTRY" severity="8">
      <ArgList>
        srcIpAddr = LargeXfer.srcIpAddr, destIpAddr = LargeXfer.destIpAddr, sentBytes = LargeXfer.SUM(sentBytes)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="LargeXfer" name="LargeXfer">
        <SingleEvtConstr> srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND srcGeoCountry NOT IN (Group@PH_COUNTRY_GROUP_MYHOME) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpAddr </GroupByAttr>
	<GroupEvtConstr> SUM(sentBytes) &gt;= 2097152 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,sentBytes,recvBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_1" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy Half-Open TCP Host Scan </Name>
    <active>true</active>
    <Description> Detects excessive half-open TCP sessions from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_HO_TCP_HOST_SCAN" severity="7">
      <ArgList>
        srcIpAddr = HostScanTCP.srcIpAddr, incidentCount = HostScanTCP.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef> 
    <PatternClause window="180">
      <SubPattern displayName="HostScanTCP" name="HostScanTCP">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 200</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_1B" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy TCP Host Scan </Name>
    <active>true</active>
    <Description> Detects excessive permitted TCP connections from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_TCP_HOST_SCAN" severity="7">
      <ArgList>
        srcIpAddr = HostScanTCP.srcIpAddr, incidentCount = HostScanTCP.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="HostScanTCP" name="HostScanTCP">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 200</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_2" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy Half-Open TCP Host Scan On Fixed Port </Name>
    <active>true</active>
    <Description> Detects excessive half-open TCP sessions from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_HO_TCP_HOST_SCAN_FIXED_PORT" severity="8">
      <ArgList>
        srcIpAddr = HostScanFixedTCPPort.srcIpAddr, destIpPort = HostScanFixedTCPPort.destIpPort, incidentCount = HostScanFixedTCPPort.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="HostScanFixedTCPPort" name="HostScanFixedTCPPort">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND srcDestTCPFlags = 2 AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 100 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_2B" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy TCP Host Scan On Fixed Port </Name>
    <active>true</active>
    <Description> Detects excessive permitted TCP sessions from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_TCP_HOST_SCAN_FIXED_PORT" severity="8">
      <ArgList>
        srcIpAddr = HostScanFixedTCPPort.srcIpAddr, destIpPort = HostScanFixedTCPPort.destIpPort, incidentCount = HostScanFixedTCPPort.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="HostScanFixedTCPPort" name="HostScanFixedTCPPort">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND ipProto = 6 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 100 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_3" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy UDP Host Scan </Name>
    <active>true</active>
    <Description> Detects excessive number of UDP connections from the same source to many distinct destinations in a short period of time. The threshold is 200 flows within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_UDP_HOST_SCAN" severity="7">
      <ArgList>
        srcIpAddr = HostScanUDP.srcIpAddr, incidentCount = HostScanUDP.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="HostScanUDP" name="HostScanUDP">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 200</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_4" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy UDP Host Scan On Fixed Port </Name>
    <active>true</active>
    <Description> Detects excessive number of UDP connections from the same source to many distinct destinations and on the same destination port in a short period of time. The threshold is 200 flows within 3 minutes. A fixed destination port may indicate that the scanning host is attempting to find hosts on a well known port (with a vulnerability). Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. P2P clients also exhibit this behavior when they attempt to establish connections to (non-existent) peers.  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_UDP_HOST_SCAN_FIXED_PORT" severity="9">
      <ArgList>
        srcIpAddr = HostScanFixedUDPPort.srcIpAddr, destIpPort = HostScanFixedUDPPort.destIpPort, incidentCount = HostScanFixedUDPPort.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
      <SubPattern displayName="HostScanFixedUDPPort" name="HostScanFixedUDPPort">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 17 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND ((srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER)) OR (destIpPort != 53))  </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT destIpAddr) &gt;= 100</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_5" phIncidentCategory="Network" function="SECURITY">
    <Name> Heavy ICMP Ping sweep </Name>
    <active>true</active>
    <Description> Detects excessive number of ICMP echo request packets from the same source to many distinct destinations in a short period of time. Nachi worm exploited pings to spread. The threshold is 50 pings within 3 minutes. Scanning may be a precursor to exploits. However, network management and mapping tools often scan the network for discovery purposes and authorized scanners need to be blacklisted. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEAVY_ICMP_PING_SWEEP" severity="7">
      <ArgList>
        srcIpAddr = PingSweep.srcIpAddr, incidentCount = PingSweep.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="PingSweep" name="PingSweep">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 1 AND icmpType = 8 AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT destIpAddr) &gt;= 50 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_6" phIncidentCategory="Network" function="SECURITY">
    <Name> Half-Open TCP DDOS Attack </Name>
    <active>true</active>
    <Description>Detects excessive number of half-open TCP connections from many distinct sources to the same destination host and on the same port in a short period of time. This may indicate that the destination server is under some sort of attack. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HO_TCP_DDOS_ATTACK" severity="7">
      <ArgList>
        destIpAddr = DDOS_TCP.destIpAddr, destIpPort = DDOS_TCP.destIpPort, incidentCount = DDOS_TCP.COUNT (DISTINCT srcIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SCANNED_HOST</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="DDOS_TCP" name="DDOS_TCP">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND srcDestTCPFlags = 2 AND ipProto = 6 </SingleEvtConstr>
	<GroupByAttr> destIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT srcIpAddr) &gt;= 200</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_6B" phIncidentCategory="Network" function="SECURITY">
    <Name> TCP DDOS Attack </Name>
    <active>true</active>
    <Description>Detects excessive number of half-open TCP connections from many distinct sources to the same destination host and on the same port in a short period of time. This may indicate that the destination server is under some sort of attack. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TCP_DDOS_ATTACK" severity="8">
      <ArgList>
        destIpAddr = DDOS_TCP.destIpAddr, destIpPort = DDOS_TCP.destIpPort, incidentCount = DDOS_TCP.COUNT (DISTINCT srcIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SCANNED_HOST</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="DDOS_TCP" name="DDOS_TCP">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND eventType NOT IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND ipProto = 6 AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> destIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT srcIpAddr) &gt;= 200</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_8" phIncidentCategory="Network" function="SECURITY">
    <Name> Excessive Denied Connections From Same Src  </Name>
    <active>true</active>
    <Description> Detects excessive denies from the same source to many distinct destinations on the same port in a short period of time. The intent could be malicious or some sort of misconfiguration. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DENY_SRC" severity="8">
      <ArgList>
        srcIpAddr = ExcessDenySameSrc.srcIpAddr, destIpPort = ExcessDenySameSrc.destIpPort, incidentCount = ExcessDenySameSrc.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="ExcessDenySameSrc" name="ExcessDenySameSrc">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT destIpAddr) &gt;= 100</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_9" phIncidentCategory="Network" function="SECURITY">
    <Name> Excessive Denied Connections To Same Destination </Name>
    <active>true</active>
    <Description> Detects excessive denies from many distinct sources to the same destination on the same destination port </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DENY_DEST" severity="8">
      <ArgList>
        destIpAddr = ExcessDenySameDest.destIpAddr, destIpPort = ExcessDenySameDest.destIpPort, incidentCount = ExcessDenySameDest.COUNT (DISTINCT srcIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_SCANNED_HOST</WatchList>
    </DynWatchListDef>
    <PatternClause window="180">
      <SubPattern displayName="ExcessDenySameDest" name="ExcessDenySameDest">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> destIpAddr, destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT srcIpAddr) &gt;= 100</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_10" phIncidentCategory="Network" function="SECURITY">
    <Name> Unusually Large ICMP Echo Packets </Name>
    <active>true</active>
    <Description> Detects large (> 200 bytes/pkt) ICMP echo request and response packets - this is unusual since ICMP packets carry minimal information and are small in size. THis may indicate that some other traffic is being carried over ICMP protocol. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LARGE_ICMP_ECHO" severity="9">
      <ArgList>
        srcIpAddr = LargeICMPEchoReq.srcIpAddr, destIpAddr = LargeICMPEchoReq.destIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="LargeICMPEchoReq" name="LargeICMPEchoReq">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic,Group@PH_SYS_EVENT_PermitTraffic) AND ipProto = 1 AND icmpType = 8 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpAddr </GroupByAttr>
	<GroupEvtConstr> SUM(sentPkts) &gt; 0 AND SUM(sentBytes)/SUM(sentPkts) &gt;= 200 </GroupEvtConstr>
      </SubPattern>
      <Operator rank="0" type="AND"/>
      <SubPattern displayName="LargeICMPEchoResp" name="LargeICMPEchoResp">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitTraffic)  AND ipProto = 1 AND icmpType = 0 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destIpAddr </GroupByAttr>
	<GroupEvtConstr> SUM(sentPkts) &gt; 0 AND SUM(sentBytes)/SUM(sentPkts) &gt;= 200 </GroupEvtConstr>
      </SubPattern>
      <GlobalConstr>LargeICMPEchoReq.srcIpAddr = LargeICMPEchoResp.destIpAddr AND LargeICMPEchoReq.destIpAddr = LargeICMPEchoResp.srcIpAddr </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,icmpType,icmpCode,sentPkts,recvPkts,sentBytes,recvBytes,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_11" phIncidentCategory="Application" function="SECURITY">
    <Name> Excessive End User Mail To Unauthorized Mail Gateways </Name>
    <active>true</active>
    <Description> Detects a scenario where a host, that is itself not an authorized mail gateway, is unsuccessfully trying to send excessive emails to unauthorized mail gateways. Authorized mail gateways are represented by the "Mail Gateway" group. Such requests would be typically denied because, either the firewall would block SMTP from end hosts and/or mail gateways only receive mail from other authorized mail gateways. This behavior may indicate malware running on an end host that is trying to send spam or privileged information to its own set of mail servers (which may be compromised). </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DENY_MAIL" severity="8">
      <ArgList>
        srcIpAddr = EndUserMailToUnauthMailGw.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_MAIL_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="EndUserMailToUnauthMailGw" name="EndUserMailToUnauthMailGw">
        <SingleEvtConstr> destIpPort = 25 AND destIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW, Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT destIpAddr) &gt;= 5 </GroupEvtConstr>
      </SubPattern>
      <Operator rank="1" type="AND"/>
      <SubPattern displayName="ExcessDeniedMail" name="ExcessDeniedMail">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 30</GroupEvtConstr>
      </SubPattern>
      <Operator rank="0" type="OR"/>
      <SubPattern displayName="ExcessPermitMail" name="ExcessPermitMail">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic) AND srcDestTCPFlags = 2 AND ipProto = 6 AND destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 30 </GroupEvtConstr>
      </SubPattern>
      <GlobalConstr> EndUserMailToUnauthMailGw.srcIpAddr = ExcessDeniedMail.srcIpAddr OR EndUserMailToUnauthMailGw.srcIpAddr = ExcessPermitMail.srcIpAddr</GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_12" phIncidentCategory="Network" function="SECURITY">
    <Name> End User DNS Queries to Unauthorized DNS Servers </Name>
    <active>true</active>
    <Description> Detects a scenario where a host, that is itself not a DNS server, is trying to send DNS requests to unauthorized DNS servers. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, end hosts always send DNS requests to authorized DNS servers which in turn communicate to other DNS servers - so this behavior may indicate malware running on the end host. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UNAUTH_DNS_QUERY" severity="7">
      <ArgList>
        srcIpAddr = UnauthDNS.srcIpAddr, incidentCount = UnauthDNS.COUNT (DISTINCT destIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_DNS_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="UnauthDNS" name="UnauthDNS">
        <SingleEvtConstr> destIpPort = 53 AND destIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_PUBLIC_DNS) AND srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER,Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT destIpAddr) &gt;= 10 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_13" phIncidentCategory="Application" function="SECURITY">
    <Name> Excessive End User DNS Queries </Name>
    <active>true</active>
    <Description> Detects a scenario where a host, that is itself not an DNS server, is sending excessive DNS requests. Authorized DNS servers are represented by the "DNS Server" group. In a typical scenario, the frequency of end host DNS requests is not high unless, there is a script running - this might indicate the presence of malware on the end host. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DNS_QUERY" severity="7">
      <ArgList>
        srcIpAddr = ExcessiveDNSFromFlow.srcIpAddr, srcIpAddr = ExcessiveDNSFromServer.srcIpAddr, incidentCount = ExcessiveDNSFromFlow.COUNT(*), incidentCount = ExcessiveDNSFromServer.COUNT(DISTINCT destName)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_DNS_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="ExcessiveDNSFromFlow" name="ExcessiveDNSFromFlow">
        <SingleEvtConstr> destIpPort = 53 AND srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH) AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 500 </GroupEvtConstr>
      </SubPattern>
      <Operator rank="0" type="OR"/>
      <SubPattern displayName="ExcessiveDNSFromServer" name="ExcessiveDNSFromServer">
        <SingleEvtConstr> srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND reptDevIpAddr IN (Group@PH_SYS_APP_DNS_SERVER) AND (eventType CONTAIN "BIND_DNS" OR eventType CONTAIN "MS_DNS") AND srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT destName) &gt;= 200 </GroupEvtConstr>
      </SubPattern>
      <GlobalConstr>ExcessiveDNSFromFlow.srcIpAddr = ExcessiveDNSFromServer.srcIpAddr</GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,destName,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_14" phIncidentCategory="Application" function="SECURITY">
    <Name> Excessive Denied DNS Queries </Name>
    <active>true</active>
    <Description> Detects a scenario where a host, has a very high frequency of denied DNS traffic.  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DENY_DNS_QUERY" severity="6">
      <ArgList>
        srcIpAddr = DeniedDNS.srcIpAddr, incidentCount = DeniedDNS.COUNT (*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_DNS_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="DeniedDNS" name="DeniedDNS">
        <SingleEvtConstr> destIpPort = 53 AND eventType IN (Group@PH_SYS_EVENT_DenyTraffic) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 100 </GroupEvtConstr>
      </SubPattern>

    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_15" phIncidentCategory="Application" function="SECURITY">
    <Name>Excessive Malware Domain Name Queries </Name>
    <active>true</active>
    <Description> Detects bad domain name queries which indicate malware infected end hosts. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BAD_DOMAIN_DNS_QUERY" severity="6">
      <ArgList>
        srcIpAddr = MalwareDNS.srcIpAddr, incidentCount =  MalwareDNS.COUNT(DISTINCT destName)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_DNS_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="MalwareDNS" name="MalwareDNS">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_CommonDNSTraffic) AND destName IN (Group@PH_SYS_MAL_DOMAIN_MDL) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT destName) &gt;= 5 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_16" phIncidentCategory="Application" function="SECURITY">
    <Name> Suspicious Botnet like End host DNS Behavior </Name>
    <active>true</active>
    <Description> Detects an end host meeting at least 3 requirements for suspicious use of DNS requests - this indicates that a bot is likely running on the end host </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BOTNET_LIKELY" severity="6">
      <ArgList>
        srcIpAddr = BotnetSymptom.srcIpAddr 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="BotnetSymptom" name="BotnetSymptom">
        <SingleEvtConstr> eventType IN ("PH_RULE_UNAUTH_DNS_QUERY","PH_RULE_EXCESS_DNS_QUERY","PH_RULE_EXCESS_DENY_DNS_QUERY","PH_RULE_BAD_DOMAIN_DNS_QUERY", "PH_RULE_UNCOMMON_DNS_QUERY") </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (DISTINCT eventType) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_17" phIncidentCategory="Application" function="SECURITY">
    <Name> Excessive Uncommon DNS Queries </Name>
    <active>true</active>
    <Description> Detects the same host that is not a DNS server, doing an excessive amount of uncommon domain name queries - this indicates the host is likely infected with malware. An end host typically needs to perform only A and PTR queries; any other query inidicates the likely presence of malware. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UNCOMMON_DNS_QUERY" severity="6">
      <ArgList>
        srcIpAddr = UncommonDNS.srcIpAddr, incidentCount =UncommonDNS.COUNT (*)   
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_DNS_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="UncommonDNS" name="UncommonDNS">
        <SingleEvtConstr> srcIpAddr NOT IN (Group@PH_SYS_APP_DNS_SERVER) AND eventType NOT IN (Group@PH_SYS_EVENT_CommonDNSTraffic) AND (eventType CONTAIN "BIND_DNS" OR eventType CONTAIN "MS_DNS") </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,eventType </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 50 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_18" phIncidentCategory="Application" function="SECURITY">
    <Name> Excessive Repeated DNS Queries To Same Domain </Name>
    <active>true</active>
    <Description> Detects an usually high frequency of DNS name resolution queries from the same host to the same domain name in a short period of time. This is not expected behavior since, in a typical scenario, the domain name resolution is cached at the end point. Repeated queries indicates that a special DNS client is likely running at the end host that is trying to make use of fast flux techniques to get back many infected hosts behind a crafted domain name. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DNS_QUERY_SAME_DOMAIN" severity="6">
      <ArgList>
        srcIpAddr = ExcessRepeatDNS.srcIpAddr, destName =ExcessRepeatDNS.destName, incidentCount = ExcessRepeatDNS.COUNT (*)   
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_DNS_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="ExcessRepeatDNS" name="ExcessRepeatDNS">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_CommonDNSTraffic) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr, destName </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 100 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_19" phIncidentCategory="Application" function="SECURITY">
    <Name>Excessive End User Mail</Name>
    <active>true</active>
    <Description> Detects a scenario where a host, that is itself not an authorized mail gateway, is sending excessive emails (more than 20 emails in 2 minutes). This behavior may indicate malware running on an end host that is trying to send spam or privileged information to its own set of mail servers (which may be compromised). </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_END_USER_MAIL" severity="8">
      <ArgList>
        srcIpAddr = EndUserExcessMail.srcIpAddr,incidentCount = EndUserExcessMail.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_MAIL_VIOLATOR</WatchList>
    </DynWatchListDef>
    <PatternClause window="120">
      <SubPattern displayName="EndUserExcessMail" name="EndUserExcessMail">
        <SingleEvtConstr> destIpPort = 25 AND srcIpAddr NOT IN (Group@PH_SYS_DEVICE_SEC_GW,Group@PH_SYS_APP_MAIL_SERVER) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 20 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_21" phIncidentCategory="Network" function="SECURITY">
    <Name> Excessive Denied Connections From An External Country </Name>
    <active>true</active>
    <Description> Detects excessive denies from the an external country in a short period of time. The intent could be beginning of some sort of day zero attack </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DENY_EXT_COUNTRY" severity="7">
      <ArgList>
        srcGeoCountry = ExcessDenySameCountry.srcGeoCountry, incidentCount = ExcessDenySameCountry.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcGeoCountry">
       <WatchList>PH_DYNLIST_ATTACKING_COUNTRY</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="ExcessDenySameCountry" name="ExcessDenySameCountry">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> srcGeoCountry </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 500</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_Flow_22" phIncidentCategory="Network" function="SECURITY">
    <Name> Excessive Denied Connections To A Port </Name>
    <active>true</active>
    <Description> Detects excessive denies from many distinct external source IP addresses to the same port. The intent could be beginning of some sort of day zero attack </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_DENY_PORT" severity="7">
      <ArgList>
        destIpPort = ExcessDenySamePort.destIpPort, incidentCount = ExcessDenySamePort.COUNT(DISTINCT srcIpAddr)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpPort">
       <WatchList>PH_DYNLIST_ATTACKED_PORT_EXT</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="ExcessDenySamePort" name="ExcessDenySamePort">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) </SingleEvtConstr>
	<GroupByAttr> destIpPort </GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT srcIpAddr) &gt;= 500</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>

 <!-- ******************CPU********************* -->
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Perf_IIS_1" fireInternalIncident = "false" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>IIS Virtual Memory Critical </Name>
    <active>false</active>
    <Description>Detects that IIS is using at least 1.9 GB of virtual memory and is fast approaching the 2 GB limit.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APP_IIS_VM_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = IISVMWarn.hostIpAddr, hostName = IISVMWarn.hostName, virtMemKBytes = IISVMWarn.AVG(virtMemKBytes)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="IISVMWarn" name="IISVMWarn">
	 <Description>Average Virtual Memory Utilization is greater than 1.9 GB for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND appName = "Microsoft IIS" </SingleEvtConstr>
         <GroupEvtConstr> AVG(virtMemKBytes) &gt;= 1900000  AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,swProcName, appName, memUtil,cpuUtil, realMemPeakKBytes,virtMemKBytes,peakVirtMemKBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_APP_IIS_VM_CRIT_CLEAR">
	<ArgList>hostIpAddr = IISVMWarn_CLEAR.hostIpAddr, hostName = IISVMWarn_CLEAR.hostName,virtMemKBytes = IISVMWarn_CLEAR.AVG(virtMemKBytes)</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_APP_IIS_VM_CRIT.hostIpAddr = PH_RULE_APP_IIS_VM_CRIT_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="IISVMWarn_CLEAR" name="IISVMWarn_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND appName = "Microsoft IIS"  </SingleEvtConstr>
	  <GroupEvtConstr> AVG(virtMemKBytes) &lt;= 1700000  AND COUNT(*) &gt;= 2 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>   

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_IPSLA_1" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Degraded IPSLA ICMP Test</Name>
    <active>true</active>
    <Description> Detects average IPSLA ICMP response times more than 30msec</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_IPSLA_ICMP" severity="7">
      <ArgList>
        reptDevName = PoorIPSLA.reptDevName, ipslaTestName = PoorIPSLA.ipslaTestName
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="PoorIPSLA" name="PoorIPSLA">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_ICMP_MET" </SingleEvtConstr>
	<GroupByAttr>reptDevName,ipslaTestName </GroupByAttr>
	<GroupEvtConstr> AVG(icmpResponseTimeMs) &gt; 30 AND COUNT(*) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,reptDevName,ipslaTestName,icmpResponseTimeMs,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_IPSLA_2" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>IPSLA HTTP Test Failure</Name>
    <active>true</active>
    <Description>Detects IPSLA HTTP failures or response time more than 50msec or more than 3 failures in 10 minutes</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_IPSLA_HTTP" severity="7">
      <ArgList>
        reptDevName = HighRespTime.reptDevName, srcIpAddr = HighRespTime.srcIpAddr, srcName = HighRespTime.srcName, destIpAddr = HighRespTime.destIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="HighRespTime" name="HighRespTime">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_HTTP_MET" </SingleEvtConstr>
	<GroupByAttr>reptDevName,srcIpAddr,srcName,destIpAddr</GroupByAttr>
	<GroupEvtConstr> AVG(httpResponseTimeMs) &gt; 50 AND COUNT(*) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
      <Operator rank="0" type="OR"/>
      <SubPattern displayName="Drop" name="Drop">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_HTTP_MET" AND httpStatusCode != 1 </SingleEvtConstr>
	<GroupByAttr>reptDevName,srcIpAddr,srcName,destIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <GlobalConstr>HighRespTime.reptDevName = Drop.reptDevName AND HighRespTime.srcIpAddr = Drop.srcIpAddr AND HighRespTime.srcName = Drop.srcName AND HighRespTime.destIpAddr = Drop.destIpAddr </GlobalConstr>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,reptDevName,srcIpAddr,srcName,destIpAddr,destName,httpResponseTimeMs,httpTransactResponseTimeMs,ipslaHttpStatus,ipslaHttpStatusDesc,httpStatusCode,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_IPSLA_3" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Degraded IPSLA DNS Test</Name>
    <active>true</active>
    <Description> Detects average IPSLA DNS response times more than 30msec</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_IPSLA_DNS" severity="7">
      <ArgList>
        reptDevName = HighRespTime.reptDevName, srcIpAddr = HighRespTime.srcIpAddr, srcName = HighRespTime.srcName, destIpAddr = HighRespTime.destIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="HighRespTime" name="HighRespTime">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_HTTP_MET" </SingleEvtConstr>
	<GroupByAttr>reptDevName,srcIpAddr,srcName,destIpAddr,destName</GroupByAttr>
	<GroupEvtConstr> AVG(dnsResponseTimeMs) &gt; 30 AND COUNT(*) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,reptDevName,srcIpAddr,srcName,destIpAddr,destName,dnsResponseTimeMs,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_IPSLA_4" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Degraded IPSLA UDP Echo Test</Name>
    <active>true</active>
    <Description>Detects IPSLA UDP failures or response time more than 30msec or more than 3 failures in 10 minutes</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_IPSLA_UDP" severity="7">
      <ArgList>
        reptDevName = HighRespTime.reptDevName, srcIpAddr = HighRespTime.srcIpAddr, srcName = HighRespTime.srcName, destIpAddr = HighRespTime.destIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="HighRespTime" name="HighRespTime">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_UDP_MET" </SingleEvtConstr>
	<GroupByAttr>reptDevName,srcIpAddr,srcName,destIpAddr</GroupByAttr>
	<GroupEvtConstr> AVG(udpResponseTimeMs) &gt; 30 AND COUNT(*) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
      <Operator rank="0" type="OR"/>
      <SubPattern displayName="Drop" name="Drop">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_UDP_MET" AND ipslaUdpStatus != 1 </SingleEvtConstr>
	<GroupByAttr>reptDevName,srcIpAddr,srcName,destIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <GlobalConstr> HighRespTime.reptDevName = Drop.reptDevName AND HighRespTime.srcIpAddr = Drop.srcIpAddr AND HighRespTime.srcName = Drop.srcName AND HighRespTime.destIpAddr = Drop.destIpAddr </GlobalConstr>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,reptDevName,srcIpAddr,srcName,destIpAddr,destName,udpResponseTimeMs,ipslaUdpStatus,ipslaUdpStatusDesc,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
    
</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_1" phIncidentCategory="Network" function="SECURITY">
    <Name>Multiple Distinct IPS Events From Same Src</Name>
    <active>true</active>
    <Description>Detects multiple IPS events from the same source IP in a short period of time - the source IP may have been infected</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MULTIPLE_IPS_SAME_SRC" severity="9">
      <ArgList>
        srcIpAddr = DistinctIPSEvents.srcIpAddr, incidentCount = DistinctIPSEvents.COUNT (DISTINCT eventType)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_IPS_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="DistinctIPSEvents" name="DistinctIPSEvents">
        <SingleEvtConstr> ((reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT CONTAIN "FortiGate") OR (eventType CONTAIN "FortiGate-ips") OR (eventType CONTAIN "Snort-")) AND eventSeverity &gt;= 7   </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT eventType) &gt;= 3</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_2" phIncidentCategory="Network" function="SECURITY">
    <Name>Multiple IPS Scans From Same Src</Name>
    <active>true</active>
    <Description>Detects multiple IPS scans from the same source IP in a short period of time. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SCAN_IPS_SAME_SRC" severity="7">
      <ArgList>
        srcIpAddr = IPSScan.srcIpAddr, incidentCount = IPSScan.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_HOST_SCANNER</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSScan" name="IPSScan">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Reconn) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 2</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_3" phIncidentCategory="Network" function="SECURITY">
    <Name>High Risk Rating Cisco IPS Exploit</Name>
    <active>true</active>
    <Description>Detects a high risk rating IPS exploit event. This is applicable for Cisco IPS.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_RR_IPS" severity="9">
      <ArgList>
        srcIpAddr = IPSHighRR.srcIpAddr, compEventType = IPSHighRR.eventType, compEventName = IPSHighRR.eventName, destIpAddr = IPSHighRR.destIpAddr, incidentCount = IPSHighRR.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="IPSHighRR" name="IPSHighRR">
        <SingleEvtConstr> eventType CONTAIN "Cisco_IPS" AND eventType NOT IN (Group@PH_SYS_EVENT_Logon,Group@PH_SYS_EVENT_Reconn) AND ipsEvRR &gt;= 85</SingleEvtConstr>
	<GroupByAttr>srcIpAddr,eventType,eventName,destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_4" phIncidentCategory="Network" function="SECURITY">
    <Name>High Severity IPS Exploit</Name>
    <active>true</active>
    <Description>Detects a high severity IPS exploit detected by IPS</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_SEV_IPS" severity="9">
      <ArgList>
        srcIpAddr = NonCiscoIPSHighSev.srcIpAddr, compEventType = NonCiscoIPSHighSev.eventType, incidentCount = NonCiscoIPSHighSev.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="NonCiscoIPSHighSev" name="NonCiscoIPSHighSev">
        <SingleEvtConstr> ((reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT CONTAIN "FortiGate") OR (eventType CONTAIN "FortiGate-ips") OR (eventType CONTAIN "Snort-")) AND reptVendor != "Cisco" AND eventType NOT IN (Group@PH_SYS_EVENT_Logon,Group@PH_SYS_EVENT_Reconn) AND eventSeverity &gt;= 8 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_5" phIncidentCategory="Application" function="SECURITY">
    <Name>High Severity Inbound Permitted IPS Exploit</Name>
    <active>true</active>
    <Description>Detects a high severity IPS security exploit from outside that is permitted. This rule makes sense only from an IPS positioned inside the firewall. Since this attack went through the firewall, its consequence must be monitored. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_SEV_SEC_IPS_IN_PERMIT" severity="9">
      <ArgList>
        srcIpAddr = NonIPSHighSev.srcIpAddr, compEventType = NonIPSHighSev.eventType, incidentCount = NonIPSHighSev.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_IPS_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="NonIPSHighSev" name="NonIPSHighSev">
        <SingleEvtConstr> ((reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT CONTAIN "FortiGate") OR (eventType CONTAIN "FortiGate-ips") OR (eventType CONTAIN "Snort-")) AND (eventSeverity &gt;= 8 OR ipsEvRR &gt;= 85) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventAction = 0 </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_6" phIncidentCategory="Application" function="SECURITY">
    <Name>High Severity Inbound Denied Security Exploit</Name>
    <active>true</active>
    <Description>Detects a high severity IPS security exploit from outside that is denied by IPS. This rule makes sense only from an IPS positioned inside the firewall. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_SEV_SEC_IPS_IN_DENY" severity="5">
      <ArgList>
        srcIpAddr = NonIPSHighSev.srcIpAddr, compEventType = NonIPSHighSev.eventType, incidentCount = NonIPSHighSev.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="NonIPSHighSev" name="NonIPSHighSev">
        <SingleEvtConstr> ((reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT CONTAIN "FortiGate") OR (eventType CONTAIN "FortiGate-ips") OR (eventType CONTAIN "Snort-")) AND (eventSeverity &gt;= 8 OR ipsEvRR &gt;= 85) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventAction = 1 </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_7" phIncidentCategory="Network" function="SECURITY">
    <Name>SQL Injection Attack detected by NIPS</Name>
    <active>true</active>
    <Description>Detects high severity SQL Injection Attacks</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_SQL_INJECTION" severity="9">
      <ArgList>
        srcIpAddr = SQLInjection.srcIpAddr, destIpAddr = SQLInjection.destIpAddr 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="SQLInjection" name="SQLInjection">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_CodeInjectionExploit) AND eventSeverity &gt;= 7 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_8" phIncidentCategory="Network" function="SECURITY">
    <Name>DoS Attack detected by NIPS</Name>
    <active>true</active>
    <Description>Detects high severity Denial of Service Attacks on a server that typically exploits a code vulnerability and causes excessive resource (CPU or memory) utilization on the server</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_HOST_DOS" severity="9">
      <ArgList>
        srcIpAddr = DoS.srcIpAddr, destIpAddr = DoS.destIpAddr 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DoS" name="DoS">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DoSExploit) AND eventSeverity &gt;= 7 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_9" phIncidentCategory="Network" function="SECURITY">
    <Name>Distributed DoS Attack detected by NIPS</Name>
    <active>true</active>
    <Description>Detects high severity distributed Denial of Service Attacks on servers or network devices. These attacks can be launched from geographically dispersed servers making them hard to defend against.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_HOST_DDOS" severity="9">
      <ArgList>
        srcIpAddr = DDoS.srcIpAddr, destIpAddr = DDoS.destIpAddr 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DDoS" name="DDoS">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_DDoSExploit) AND eventSeverity &gt;= 7 </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_10" phIncidentCategory="Network" function="SECURITY">
    <Name>Excessive WLAN Exploits</Name>
    <active>true</active>
    <Description>Detects high severity WLAN attack</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WLAN_EXPLOIT" severity="9">
      <ArgList>
        srcMACAddr = WLANSig.srcMACAddr,compEventType = WLANSig.eventType,wirelessSigName = WLANSig.wirelessSigName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcMACAddr">
       <WatchList>PH_DYNLIST_WLAN_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="WLANSig" name="WLANSig">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WirelessSig) AND eventSeverity &gt;= 5 </SingleEvtConstr>
	<GroupByAttr>srcMACAddr,eventType,wirelessSigName</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 3</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostMACAddr,wirelessSigName,wlanRadioId,wlanSsid,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_11" phIncidentCategory="Network" function="SECURITY">
    <Name>Excessive WLAN Exploits: Same Source</Name>
    <active>true</active>
    <Description>Detects high severity WLAN attack</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WLAN_EXPLOIT_SAME_SRC" severity="9">
      <ArgList>
        srcMACAddr = WLANSig.srcMACAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcMACAddr">
       <WatchList>PH_DYNLIST_WLAN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="WLANSig" name="WLANSig">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WirelessSig)</SingleEvtConstr>
	<GroupByAttr>srcMACAddr</GroupByAttr>
	<GroupEvtConstr>COUNT (DISTINCT eventType) &gt;= 3 OR COUNT(DISTINCT wirelessSigName) &gt;= 3</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostMACAddr,wirelessSigName,wlanRadioId,wlanSsid,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_12" phIncidentCategory="Application" function="SECURITY">
    <Name>High Severity Internal Denied IPS Exploit</Name>
    <active>true</active>
    <Description>Detects a high severity IPS security exploit from inside that is denied. This most likely implies that the source is infected with malware. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_SEV_SEC_IPS_OUT_DENY" severity="9">
      <ArgList>
        srcIpAddr = IPSHighSev.srcIpAddr, compEventType = IPSHighSev.eventType, incidentCount = IPSHighSev.COUNT(*)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_IPS_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="IPSHighSev" name="IPSHighSev">
        <SingleEvtConstr> ((reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND eventType NOT CONTAIN "FortiGate") OR (eventType CONTAIN "FortiGate-ips") OR (eventType CONTAIN "Snort-")) AND (eventSeverity &gt;= 8 OR ipsEvRR &gt;= 85) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventAction = 1 </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_14" phIncidentCategory="Network" function="SECURITY">
    <Name>High Severity Symantec Host IPS Exploit </Name>
    <active>true</active>
    <Description>Detects a high severity host IPS security exploit detected by Symantec. This should be carefully looked at. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_SEV_SYMANTEC_IDS_EXPLOIT" severity="9">
      <ArgList>
        computer = IPSHighSev.computer, compEventType = IPSHighSev.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="computer">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="IPSHighSev" name="IPSHighSev">
        <SingleEvtConstr> eventType CONTAIN "Symantec-CIDS-" AND eventSeverity &gt;= 9 </SingleEvtConstr>
	<GroupByAttr>computer,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,computer, user, rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Exploits" id="PH_Rule_IPS_15" phIncidentCategory="Network" function="SECURITY">
    <Name>Website defacement attack</Name>
    <active>true</active>
    <Description>Detects high severity website defacement attack</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WEB_DEFACEMENT_ATTACK" severity="9">
      <ArgList>
        srcIpAddr = WebDefacement.srcIpAddr, destIpAddr = WebDefacement.destIpAddr 
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="WebDefacement" name="WebDefacement">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WebsiteDefacementAttack) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr,destIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_1" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Exchange Server SMTP Queue high </Name>
    <active>true</active>
    <Description> Detects that one or more of SMTP Server queues have crossed critical threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCH_SMTP_QUEUE_CRIT" severity="9">
      <ArgList>
        hostName = QueueHigh.hostName, 
	exchCatQueue = QueueHigh.AVG(exchCatQueue),
	exchSMTPLocalQueue = QueueHigh.AVG(exchSMTPLocalQueue),
	exchSMTPRemoteQueue = QueueHigh.AVG(exchSMTPRemoteQueue)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="QueueHigh" name="QueueHigh">
        <SingleEvtConstr> eventType = "PH_DEV_MON_APP_MSEXCH_SMTP_MET"</SingleEvtConstr>
	<GroupByAttr> hostName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND (AVG(exchCatQueue) &gt;= 10 OR AVG(exchSMTPLocalQueue) &gt;= 1000 OR AVG(exchSMTPRemoteQueue) &gt; 1000) </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, exchCatQueue,exchSMTPLocalQueue,exchSMTPRemoteQueue,exchSMTPInConn,exchSMTPOutConn,exchSMTPRetries,exchSMTPLocalRetryQueue,exchSMTPRemoteRetryQueue</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_2" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Exchange Server Mailbox Queue high </Name>
    <active>true</active>
    <Description> Detects that one or more of Exchange mailbox store queues have crossed critical threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCH_MBOX_QUEUE_CRIT" severity="9">
      <ArgList>
        hostName = QueueHigh.hostName, 
	exchMboxName = QueueHigh.exchMboxName,
	exchMboxSendQueue = QueueHigh.AVG(exchMboxSendQueue),
	exchMboxRecvQueue = QueueHigh.AVG(exchMboxRecvQueue)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
      <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="QueueHigh" name="QueueHigh">
        <SingleEvtConstr> eventType = "PH_DEV_MON_APP_MSEXCH_MBOX_MET"</SingleEvtConstr>
	<GroupByAttr> hostName,exchMboxName  </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND (AVG(exchMboxSendQueue) &gt;= 500 OR AVG(exchMboxRecvQueue) &gt;= 500) </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, exchMboxName,exchMboxSendQueue,exchMboxRecvQueue,exchMboxSentMsg,exchMboxSubmitMsg,exchMboxDelivMsg,exchMboxActiveUserCount,exchMboxPeakUserCount</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_3" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Exchange Server RPC request high </Name>
    <active>true</active>
    <Description> Detects a spike in exchange server RPC requests </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCH_RPC_REQ_CRIT" severity="9">
      <ArgList>
        hostName = RPCHigh.hostName, 
	exchRPCReq = RPCHigh.AVG(exchRPCReq)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
      <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="RPCHigh" name="RPCHigh">
        <SingleEvtConstr> eventType = "PH_DEV_MON_APP_MSEXCH_MET"</SingleEvtConstr>
	<GroupByAttr> hostName </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(exchRPCReq) &gt;= 30 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_4" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Exchange Server RPC latency high </Name>
    <active>true</active>
    <Description> Detects excessive exchange server RPC request latency </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCH_RPC_LATENCY_CRIT" severity="9">
      <ArgList>
        hostName = RPCLatencyHigh.hostName, 
	exchRPCAvgLatency = RPCLatencyHigh.AVG(exchRPCAvgLatency)
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="RPCLatencyHigh" name="RPCLatencyHigh">
        <SingleEvtConstr> eventType = "PH_DEV_MON_APP_MSEXCH_MET"</SingleEvtConstr>
	<GroupByAttr> hostName </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(exchRPCAvgLatency) &gt;= 50 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType, hostName, exchRPCReq,exchRPCAvgLatency,exchRPCOpsPerSec,exchRPCReqPeak,exchUserCount,exchActiveUserCount,exchPeakUserCount,exchActiveConnCount,exchMaxConn</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_5" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Excessive Postfix gateway connection failures </Name>
    <active>true</active>
    <Description> Detects excessive connection failures from an SMTP gateway </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_POSTFIX_GW_CONN_FAIL" severity="8">
      <ArgList>
        destName = SMTPError.destName, destIpAddr = SMTPError.destIpAddr
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="destName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="SMTPError" name="SMTPError">
        <SingleEvtConstr> eventType IN ("Postfix-Connect-From-failure","Postfix-Connect-To-refused","Postfix-Connect-To-timeout","Postfix-Connect-To-failure","Postfix-Disconnect-From") </SingleEvtConstr>
	<GroupByAttr>destName,destIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 5  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,destName,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_6" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Excessive Postfix mail send error </Name>
    <active>true</active>
    <Description> Detects excessive mail send errors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_POSTFIX_MAIL_SEND_ERR" severity="8">
      <ArgList>
        receiverMailAddr= SMTPError.receiverMailAddr,
	mailGatewayName = SMTPError.mailGatewayName, 
	destIpAddr = SMTPError.destIpAddr,
	smtpFailCode = SMTPError.smtpFailCode
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="mailGatewayName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="SMTPError" name="SMTPError">
        <SingleEvtConstr> eventType = "Postfix-Mail-Send-Error"</SingleEvtConstr>
	<GroupByAttr>receiverMailAddr,mailGatewayName,destIpAddr,smtpFailCode</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 5  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,receiverMailAddr,mailGatewayName,destIpAddr,smtpFailCode,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_Mail" id="PH_Rule_Mail_7" phIncidentCategory="Application" function="PERFORMANCE">
    <Name>Excessive Postfix mail send latency </Name>
    <active>true</active>
    <Description> Detects excessive Postfix mail send latency - more than 1 minute</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_POSTFIX_MAIL_SEND_LATENCY" severity="8">
      <ArgList>
        reptDevIpAddr= SMTPError.reptDevIpAddr,
	mailGatewayName = SMTPError.mailGatewayName, 
	destIpAddr = SMTPError.destIpAddr
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="mailGatewayName">
       <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
      <SubPattern displayName="SMTPError" name="SMTPError">
        <SingleEvtConstr> eventType IN ("Postfix-Mail-Accept-Stat","Postfix-Mail-Queued-Stat") </SingleEvtConstr>
	<GroupByAttr>reptDevIpAddr,mailGatewayName,destIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 5  AND AVG(latency) &gt;= 3600</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,receiverMailAddr,mailGatewayName,destIpAddr,smtpFailCode,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

</Rules>
<Rules>

   <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_491_1" phIncidentCategory="Internal" function="AVAILABILITY">
       <Name>Outbound Incident Integration Error</Name>
       <active>true</active>
    <Description> Detects that an FortiSIEM incident failed to be pushed to a ticketing system</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_OUTBOUND_INCIDENT_INTEGRATION_ERROR" severity="10">
      <ArgList>
        reptVendor = IncidentOutboundError.reptVendor, incidentCount = IncidentOutboundError.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="IncidentOutboundError" name="IncidentOutboundError">
         <SingleEvtConstr> phEventCategory = 3 AND eventType = "PH_OUT_INTEGRATION_ERROR" AND objType = "Incident" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptVendor</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,phCustId,reptVendor,errReason </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_491_2" phIncidentCategory="Internal" function="AVAILABILITY">
       <Name>Inbound Incident Integration Error</Name>
       <active>true</active>
    <Description> Detects that an FortiSIEM incident external status failed to be updated</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_OUTBOUND_INCIDENT_INTEGRATION_ERROR" severity="10">
      <ArgList>
        reptVendor = IncidentOutboundError.reptVendor, incidentCount = IncidentOutboundError.COUNT(*)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="IncidentOutboundError" name="IncidentOutboundError">
         <SingleEvtConstr> phEventCategory = 3 AND eventType = "PH_IN_INTEGRATION_ERROR" AND objType = "Incident" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptVendor</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,phCustId,reptVendor,errReason </AttrList>
    </TriggerEventDisplay>
   </Rule>


</Rules>
<Rules>

  <Rule id="PH_Rule_PanasonicAero_1" group="PH_SYS_RULE_PanasonicAero" phIncidentCategory="Server" function = "SECURITY">
    <Name>SSH After Flight Takeoff</Name>
    <active>true</active>
    <Description>Panasonic Aero: Detects SSH activity after a flight has taken off</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PANASONIC_AERO_SSH_AFTER_TAKEOFF" severity="10">
      <ArgList>
        airlineName = ssh.airlineName,
	airlineTail = ssh.airlineTail,
	srcIpAddr = ssh.srcIpAddr,
	user = ssh.user,
	reptDevName = ssh.reptDevName 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="reptDevName">
       <WatchList>PH_DYNLIST_VULN_SYSTEM</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="ssh" name="ssh">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_AirlineLogonSuccess,Group@PH_SYS_EVENT_AirlineLogonFailure) AND weightOnWheels = "air" </SingleEvtConstr>
	<GroupByAttr>airlineName,airlineTail,srcIpAddr,user,reptDevName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> deviceTime,takeOffTime,reptDevName,airlineName,airlineTail,flightNum,departureId,aircraftDestId,srcIpAddr,srcName,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule id="PH_Rule_PanasonicAero_2" group="PH_SYS_RULE_PanasonicAero" phIncidentCategory="Server" function = "SECURITY">
    <Name>Bad Airline Video File</Name>
    <active>true</active>
    <Description>Panasonic Aero: Detects non transport stream file - may indicate video attack</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PANASONIC_AERO_BAD_VIDEO_FILE" severity="9">
      <ArgList>
        airlineName = video.airlineName,
	airlineTail = video.airlineTail
	reptDevName = video.reptDevName 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="reptDevName">
       <WatchList>PH_DYNLIST_VULN_SYSTEM</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="video" name="video">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_AirlineBadVideo) </SingleEvtConstr>
	<GroupByAttr>airlineName,airlineTail,reptDevName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> deviceTime,reptDevName,airlineName,airlineTail,flightNum,departureId,aircraftDestId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule id="PH_Rule_PanasonicAero_3" group="PH_SYS_RULE_PanasonicAero" phIncidentCategory="Server" function = "SECURITY">
    <Name>Bad Flight Database Lookup</Name>
    <active>true</active>
    <Description>Panasonic Aero: Detects Bad Flight Database Lookup</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PANASONIC_AERO_BAD_DB_LOOKUP" severity="9">
      <ArgList>
        airlineName = badDB.airlineName,
	airlineTail = badDB.airlineTail,
	reptDevName = badDB.reptDevName,
	dbTable = badDB.dbTable,
	dbColumn = badDB.dbColumn
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="reptDevName">
       <WatchList>PH_DYNLIST_VULN_SYSTEM</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="badDB" name="badDB">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_AirlineBadDBLookup) </SingleEvtConstr>
	<GroupByAttr>airlineName,airlineTail,reptDevName,dbTable,dbColumn</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> deviceTime,reptDevName,airlineName,airlineTail,dbTable,dbColumn,msg,flightNum,departureId,aircraftDestId </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule id="PH_Rule_PanasonicAero_4" group="PH_SYS_RULE_PanasonicAero" phIncidentCategory="Server" function = "SECURITY">
    <Name>Excessive Failed Login To Single Airline System</Name>
    <active>true</active>
    <Description>Panasonic Aero: Detects excessive login failures from the same source IP</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PANASONIC_AERO_EXCESS_FAILED_LOGIN" severity="9">
      <ArgList>
        airlineName = failedLogin.airlineName,
	airlineTail = failedLogin.airlineTail,
	reptDevName = failedLogin.reptDevName,
	srcIpAddr = failedLogin.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcName">
       <WatchList>PH_DYNLIST_VULN_SYSTEM</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="failedLogin" name="failedLogin">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_AirlineLogonFailure)</SingleEvtConstr>
	<GroupByAttr>airlineName,airlineTail,reptDevName,srcIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 3</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> deviceTime,reptDevName,airlineName,airlineTail,flightNum,departureId,aircraftDestId,srcIpAddr,srcName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule id="PH_Rule_PanasonicAero_5" group="PH_SYS_RULE_PanasonicAero" phIncidentCategory="Server" function = "SECURITY">
    <Name>Excessive Failed Logins To Multiple Airline Systems</Name>
    <active>true</active>
    <Description>Panasonic Aero: Detects excessive login failures from the same source IP to multiple airline systems</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PANASONIC_AERO_PASSWORD_SCAN" severity="9">
      <ArgList>
        airlineName = failedLogin.airlineName,
	airlineTail = failedLogin.airlineTail,
	srcIpAddr = failedLogin.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcName">
       <WatchList>PH_DYNLIST_VULN_SYSTEM</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="failedLogin" name="failedLogin">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_AirlineLogonFailure) </SingleEvtConstr>
	<GroupByAttr>airlineName,airlineTail,srcIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT reptDevName) &gt;= 3 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> deviceTime,reptDevName,airlineName,airlineTail,flightNum,departureId,aircraftDestId,srcIpAddr,srcName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>

 <!-- ******************CPU********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_201" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server CPU Warning </Name>
    <active>true</active>
    <Description>Detects that server CPU has reached a warning level (between 75% and 85% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_CPU_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = ServCPUWarn.hostIpAddr, hostName = ServCPUWarn.hostName, cpuUtil = ServCPUWarn.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="ServCPUWarn" name="ServCPUWarn">
	 <Description>Average CPU Utilization is between 75% and 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:ServerCPUUtilThreshWarn) AND 
	   AVG(cpuUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:ServerCPUUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
 <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_202" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server CPU Critical </Name>
    <active>true</active>
    <Description>Detects that server CPU has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_CPU_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = ServCPUCrit.hostIpAddr, hostName = ServCPUCrit.hostName, cpuUtil = ServCPUCrit.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="ServCPUCrit" name="ServCPUCrit">
	 <Description>Average CPU Utilization is greater than 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt; DeviceToCMDBAttr(hostIpAddr:ServerCPUUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_203" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network CPU Warning </Name>
    <active>true</active>
    <Description>Detects that a network device CPU has reached a warning level (between 75% and 90% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_CPU_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = NetCPUWarn.hostIpAddr, hostName = NetCPUWarn.hostName, cpuUtil = NetCPUWarn.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="NetCPUWarn" name="NetCPUWarn">
	 <Description>Average CPU Utilization is between 75% and 90% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:NetCPUUtilThreshWarn) AND 
	   AVG(cpuUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:NetCPUUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_204" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network CPU Critical </Name>
    <active>true</active>
    <Description>Detects that a network device CPU has reached a critical level (greater than 90% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_CPU_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = NetCPUCrit.hostIpAddr, hostName = NetCPUCrit.hostName, cpuUtil = NetCPUCrit.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="NetCPUCrit" name="NetCPUCrit">
	 <Description>Average CPU Utilization is greater than 90% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt; DeviceToCMDBAttr(hostIpAddr:NetCPUUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************* memory ******************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_205" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Memory Warning </Name>
    <active>true</active>
    <Description>Detects that server Memory has reached a warning level (between 75% and 85% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_MEM_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = ServMemWarn.hostIpAddr, hostName = ServMemWarn.hostName, memUtil = ServMemWarn.AVG(memUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="ServMemWarn" name="ServMemWarn">
	 <Description>Average Memory Utilization is between 75% and 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND memName = "Physical Memory" AND hostIpAddr NOT IN (Group@PH_SYS_APP_DATABASE_SERVER, Group@PH_SYS_APP_MAIL_SERVER) </SingleEvtConstr>
         <GroupEvtConstr> AVG(memUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:ServerMemUtilThreshWarn) AND 
	   AVG(memUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:ServerMemUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
 <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_206" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Memory Critical </Name>
    <active>true</active>
    <Description>Detects that server memory has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_MEM_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = ServMemCrit.hostIpAddr, hostName = ServMemCrit.hostName, memUtil = ServMemCrit.AVG(memUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="ServMemCrit" name="ServMemCrit">
	 <Description>Average Memory Utilization is greater than 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND memName = "Physical Memory" AND hostIpAddr NOT IN (Group@PH_SYS_APP_DATABASE_SERVER, Group@PH_SYS_APP_MAIL_SERVER) </SingleEvtConstr>
         <GroupEvtConstr> AVG(memUtil) &gt; DeviceToCMDBAttr(hostIpAddr:ServerMemUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_206B" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <active>true</active>
    <Name>Server Swap Memory Critical</Name>
    <Description>Detects that server swap memory has reached a critical level (free swap less than minimum swap)</Description>
    <CustomerScope groupByEachCustomer="true">
      <Include all="true"/>
      <Exclude/>
    </CustomerScope>
    <IncidentDef eventType="PH_RULE_SWAP_MEM_CRIT" fireFreq="3600" severity="9">
      <ArgList>hostIpAddr = ServSwapMemCrit.hostIpAddr, hostName = ServSwapMemCrit.hostName, swapMemUtil = ServSwapMemCrit.AVG(swapMemUtil)</ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <ClearCondition method="Auto" type="timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
    <PatternClause window="600">
      <SubPattern displayName="ServSwapMemCrit" name="ServSwapMemCrit">
        <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server)</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt; 2 AND AVG(swapMemUtil) &gt; 90 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr, hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,memName,hostName,hostIpAddr,swapMemUtil,freeSwapMemKB,memMinimumSwap,swapMemErrorString,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_207" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Memory Warning </Name>
    <active>true</active>
    <Description>Detects that a network device memory usage has reached a warning level (between 50% and 85% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_MEM_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = NetMemWarn.hostIpAddr, hostName = NetMemWarn.hostName, memUtil = NetMemWarn.AVG(memUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="NetMemWarn" name="NetMemWarn">
	 <Description>Average Memory Utilization is between 65% and 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND memName = "Physical Memory" </SingleEvtConstr>
         <GroupEvtConstr> AVG(memUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:NetMemUtilThreshWarn) AND 
	   AVG(memUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:NetMemUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_208" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Memory Critical </Name>
    <active>true</active>
    <Description>Detects that a network device memory has reached a critical level (greater than 85% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_MEM_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = NetMemCrit.hostIpAddr, hostName = NetMemCrit.hostName, memUtil = NetMemCrit.AVG(memUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="NetMemCrit" name="NetMemCrit">
	<Description>Average Memory Utilization is greater than 85% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND memName = "Physical Memory" </SingleEvtConstr>
        <GroupEvtConstr> AVG(memUtil) &gt; DeviceToCMDBAttr(hostIpAddr:NetMemUtilThreshCrit) AND 
	  COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,memUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************Disk space******************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_209" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Disk space Warning </Name>
    <active>true</active>
    <Description>Detects that server disk space usage has reached a warning level (utilization between 90% and 95% and free disk still greater than 100 MB) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_DISK_SPACE_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = ServDiskWarn.hostIpAddr, hostName = ServDiskWarn.hostName, diskName = ServDiskWarn.diskName, diskUtil = ServDiskWarn.AVG(diskUtil), freeDiskMB =  ServDiskWarn.AVG(freeDiskMB) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" ServDiskWarn" name=" ServDiskWarn">
	 <Description>Average Disk Utilization for a logical volume between 85% and 95% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND 
	   hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot") </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(diskUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshWarn) AND 
	   AVG(diskUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshCrit)) OR 
	   (AVG(diskUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshCrit) AND 
	   AVG(freeDiskMB) &gt; DeviceToCMDBAttr(hostIpAddr:diskName:FreeDiskMBThreshCrit))) 
	   AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,totalDiskMB,usedDiskMB,freeDiskMB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
 <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_210" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Disk Space Critical </Name>
    <active>true</active>
    <Description>Detects that server disk space usage has reached a critical level (greater than 95% and free disk less than 100 MB) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_DISK_SPACE_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = ServDiskCrit.hostIpAddr, hostName = ServDiskCrit.hostName, diskName = ServDiskCrit.diskName, diskUtil = ServDiskCrit.AVG(diskUtil), freeDiskMB =  ServDiskCrit.AVG(freeDiskMB)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="ServDiskCrit" name=" ServDiskCrit">
	 <Description>Average CPU Utilization is greater than 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot") </SingleEvtConstr>
         <GroupEvtConstr> AVG(diskUtil) &gt; DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshCrit) AND 
	   AVG(freeDiskMB) &lt; DeviceToCMDBAttr(hostIpAddr:diskName:FreeDiskMBThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,totalDiskMB,usedDiskMB,freeDiskMB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************Disk I/O latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_209B" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Disk Latency Warning </Name>
    <active>true</active>
    <Description>Detects that server disk I/O latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_DISK_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = ServDiskLatencyWarn.hostIpAddr, hostName = ServDiskLatencyWarn.hostName, diskName = ServDiskLatencyWarn.diskName, devDiskRdLatency = ServDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyWarn.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" ServDiskLatencyWarn" name=" ServDiskLatencyWarn">
	 <Description>Average Disk Read or Write latency for a logical volume between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_DISK_IO_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot") </SingleEvtConstr>
         <GroupEvtConstr> 
	   ((AVG(devDiskRdLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskLatencyThreshWarn) AND 
	   AVG(devDiskRdLatency) &lt; DeviceToCMDBAttr(hostIpAddr:diskName:DiskLatencyThreshCrit)) OR 
	   (AVG(devDiskWrLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskLatencyThreshWarn) AND AVG(devDiskWrLatency) &lt; DeviceToCMDBAttr(hostIpAddr:diskName:DiskLatencyThreshCrit))) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_209C" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Disk Latency Critical </Name>
    <active>true</active>
    <Description>Detects that server disk I/O latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_DISK_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = ServDiskLatencyCrit.hostIpAddr, hostName = ServDiskLatencyCrit.hostName, diskName = ServDiskLatencyCrit.diskName,devDiskRdLatency = ServDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = ServDiskLatencyCrit.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" ServDiskLatencyCrit" name=" ServDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_DISK_IO_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND diskName NOT IN ("/boot") </SingleEvtConstr>
         <GroupEvtConstr> (AVG(devDiskRdLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskLatencyThreshCrit) OR AVG(devDiskWrLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskLatencyThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,devDiskRdLatency,devDiskWrLatency,diskQLen,diskIOUtil,diskReadReqPerSec,diskWriteReqPerSec,diskReadKBytesPerSec,diskWriteKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- *****************Intf util********************* -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_211" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Intf Util Warning </Name>
    <active>true</active>
    <Description>Detects that interface utilization of a network device has reached a warning level (utilization between 30% and 50% based on 2 successive readings in a 10 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_INTF_UTIL_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfUtilWarn" name="IntfUtilWarn">
	<Description>Average Interface Utilization is between 30% and 50% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS) </SingleEvtConstr>
        <GroupEvtConstr> ((AVG(inIntfUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:NetIntfUtilThreshWarn)  AND AVG(inIntfUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:NetIntfUtilThreshCrit)) OR
          (AVG(outIntfUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:NetIntfUtilThreshWarn) AND AVG(outIntfUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:NetIntfUtilThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_212" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Intf Util Critical </Name>
    <active>true</active>
    <Description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 50% based on 2 successive readings in a 10 minute interval. IPS devices are excluded since being a sniffing interface, they have high utilization under normal circumstances.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_INTF_UTIL_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfUtilCrit" name="IntfUtilCrit">
	<Description>Average Interface Utilization greater than 50% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr NOT IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT IN ("lo","Null0") </SingleEvtConstr>
        <GroupEvtConstr> (AVG(inIntfUtil) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:NetIntfUtilThreshCrit) OR AVG(outIntfUtil) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:NetIntfUtilThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_211_B" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network IPS Intf Util Warning </Name>
    <active>true</active>
    <Description>Detects that interface utilization of a network IPS device has reached a warning level (utilization between 60% and 80% based on 2 successive readings in a 10 minute interval. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_NET_INTF_UTIL_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfUtilWarn" name="IntfUtilWarn">
	<Description>Average Interface Utilization is between 60% and 80% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT IN ("lo","Null0") </SingleEvtConstr>
        <GroupEvtConstr> ((AVG(inIntfUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:SnifferIntfUtilThreshWarn) AND AVG(inIntfUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:SnifferIntfUtilThreshCrit)) OR
          (AVG(outIntfUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:SnifferIntfUtilThreshWarn) AND AVG(outIntfUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:SnifferIntfUtilThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_212_B" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network IPS Intf Util Critical </Name>
    <active>true</active>
    <Description>Detects that interface utilization of a network IPS device has reached a critical level (utilization greater than 80% based on 2 successive readings in a 10 minute interval. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IPS_NET_INTF_UTIL_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfUtilCrit" name="IntfUtilCrit">
	<Description>Average Interface Utilization greater than 80% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) AND hostIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0") </SingleEvtConstr>
        <GroupEvtConstr> (AVG(inIntfUtil) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:SnifferIntfUtilThreshCrit) OR AVG(outIntfUtil) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:SnifferIntfUtilThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_213" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Intf Util Warning </Name>
    <active>true</active>
    <Description>Detects that interface utilization of a server has reached a warning level (utilization between 30% and 50% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_INTF_UTIL_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = IntfUtilWarn.hostIpAddr, hostName = IntfUtilWarn.hostName, intfName = IntfUtilWarn.intfName, inIntfUtil = IntfUtilWarn.AVG(inIntfUtil),outIntfUtil = IntfUtilWarn.AVG(outIntfUtil) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfUtilWarn" name="IntfUtilWarn">
	<Description>Average Interface Utilization is between 30% and 50% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0") </SingleEvtConstr>
        <GroupEvtConstr>((AVG(inIntfUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:ServerIntfUtilThreshWarn) AND AVG(inIntfUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:ServerIntfUtilThreshCrit)) OR
          (AVG(outIntfUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:ServerIntfUtilThreshWarn) AND AVG(outIntfUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:ServerIntfUtilThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_214" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Intf Util Critical </Name>
    <active>true</active>
    <Description>Detects that interface utilization of a network device has reached a critical level (utilization greater than 50% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_INTF_UTIL_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = IntfUtilCrit.hostIpAddr, hostName = IntfUtilCrit.hostName, intfName = IntfUtilCrit.intfName, inIntfUtil = IntfUtilCrit.AVG(inIntfUtil),outIntfUtil = IntfUtilCrit.AVG(outIntfUtil) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfUtilCrit" name="IntfUtilCrit">
	<Description>Average Interface Utilization greater than 50% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) AND hostIpAddr NOT IN (Group@PH_SYS_APP_NETWORK_IPS) AND intfName NOT CONTAIN "Loopback" AND intfName NOT IN ("lo","Null0") </SingleEvtConstr>
        <GroupEvtConstr>  (AVG(inIntfUtil) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:ServerIntfUtilThreshCrit) OR AVG(outIntfUtil) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:ServerIntfUtilThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfUtil,outIntfUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- **********Interface Error*********** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_215" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Intf Error Warning </Name>
    <active>true</active>
    <Description>Detects that a network device interface error has reached a warning level (utilization between 1% and 5% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_INTF_ERR_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfErrorWarn" name="IntfErrorWarn">
	<Description>Average Interface Error between 1% and 5% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
        <GroupEvtConstr> ((AVG(inIntfPktErrPct) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshWarn) AND AVG(inIntfPktErrPct) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit)) OR
          (AVG(outIntfPktErrPct) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshWarn) AND AVG(outIntfPktErrPct) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_216" fireInternalIncident = "true" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Intf Error Critical </Name>
    <active>true</active>
    <Description>Detects that a network device interface errors has reached a critical level (greater than 5% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NET_INTF_ERR_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfErrorCrit" name="IntfErrorCrit">
	<Description>Average Interface errors greater than 5% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
        <GroupEvtConstr> (AVG(inIntfPktErrPct) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit) OR AVG(outIntfPktErrPct) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_217" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Intf Error Warning </Name>
    <active>true</active>
    <Description>Detects that a server interface error has reached a warning level (utilization between 1% and 5% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_INTF_ERR_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = IntfErrorWarn.hostIpAddr, hostName = IntfErrorWarn.hostName, intfName = IntfErrorWarn.intfName,inIntfPktErrPct = IntfErrorWarn.AVG(inIntfPktErrPct), outIntfPktErrPct = IntfErrorWarn.AVG(outIntfPktErrPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfErrorWarn" name="IntfErrorWarn">
	<Description>Average Interface Error between 1% and 5% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
        <GroupEvtConstr> 
          ((AVG(inIntfPktErrPct) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshWarn) AND 
	  AVG(inIntfPktErrPct) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit)) OR 
	  (AVG(outIntfPktErrPct) &gt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshWarn) AND 
	  AVG(outIntfPktErrPct) &lt;= DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit)))AND 
	  COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_218" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Server Intf Error Critical </Name>
    <active>true</active>
    <Description>Detects that a server interface errors has reached a critical level (greater than 5% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_INTF_ERR_CRIT" severity="9" >
      <ArgList>
        hostIpAddr = IntfErrorCrit.hostIpAddr, hostName = IntfErrorCrit.hostName, 
	intfName = IntfErrorCrit.intfName, inIntfPktErrPct = IntfErrorCrit.AVG(inIntfPktErrPct), 
	outIntfPktErrPct = IntfErrorCrit.AVG(outIntfPktErrPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="IntfErrorCrit" name="IntfErrorCrit" >
	<Description>Average Interface errors greater than 5% for 2 readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
        <GroupEvtConstr> (AVG(inIntfPktErrPct) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit) OR AVG(outIntfPktErrPct) &gt; DeviceToCMDBAttr(hostIpAddr:intfName:IntfErrPctThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostIpAddr,hostName,intfName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,intfName,inIntfPktErrPct,outIntfPktErrPct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1800</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************VM CPU********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_219" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine CPU Warning </Name>
    <active>true</active>
    <Description>Detects that virtual server CPU ready percent has reached a warning level (between 20% and 25% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VM_CPU_WARN" severity="5">
      <ArgList>
        hostIpAddr = VMCPUMedium.hostIpAddr,hostName = VMCPUMedium.hostName,phyMachIpAddr = VMCPUMedium.phyMachIpAddr,phyMachName = VMCPUMedium.phyMachName,cpuReadyPct = VMCPUMedium.AVG(cpuReadyPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="VMCPUMedium" name="VMCPUMedium">
	<Description>Average Ready Percent is between 20% and 25% for 3 consecutive readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_VM_CPU_UTIL"  </SingleEvtConstr>
        <GroupEvtConstr> AVG(cpuReadyPct) &gt;= DeviceToCMDBAttr(hostIpAddr:ReadyCPUPctThreshWarn) AND AVG(cpuReadyPct) &lt; DeviceToCMDBAttr(hostIpAddr:ReadyCPUPctThreshCrit)  AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************VM CPU********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_220" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine CPU Critical </Name>
    <active>true</active>
    <Description>Detects that virtual server CPU ready percent has reached a critical level (greater than 25% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VM_CPU_CRIT" severity="9">
      <ArgList>
        hostIpAddr = VMCPUHigh.hostIpAddr,hostName = VMCPUHigh.hostName,phyMachIpAddr = VMCPUHigh.phyMachIpAddr,phyMachName = VMCPUHigh.phyMachName,cpuReadyPct = VMCPUHigh.AVG(cpuReadyPct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="VMCPUHigh" name="VMCPUHigh">
	<Description>Average Ready Percent is greater than 25% for 3 consecutive readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_VM_CPU_UTIL" </SingleEvtConstr>
        <GroupEvtConstr> AVG(cpuReadyPct) &gt;= DeviceToCMDBAttr(hostIpAddr:ReadyCPUPctThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ******************VM Mem********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_221" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine Memory Swapping Warning </Name>
    <active>true</active>
    <Description>Detects that virtual machine memory has reached a warning level based on swapping rate between 1MBps and 1.5MBps based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VM_MEM_WARN" severity="5">
      <ArgList>
        hostIpAddr = VMMemMedium.hostIpAddr,hostName = VMMemMedium.hostName,phyMachIpAddr = VMMemMedium.phyMachIpAddr,phyMachName = VMMemMedium.phyMachName,swapReadKBytesPerSec  = VMMemMedium.AVG(swapReadKBytesPerSec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="VMMemMedium" name="VMMemMedium">
	 <Description>Average swapping rate is between 1 MBps and 1.5 MBps for 3 consecutive readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_VM_MEM_UTIL"  </SingleEvtConstr>
         <GroupEvtConstr> AVG(swapReadKBytesPerSec) &gt;= DeviceToCMDBAttr(hostIpAddr:SwapReadKBpsThreshWarn) AND AVG(swapReadKBytesPerSec) &lt; DeviceToCMDBAttr(hostIpAddr:SwapReadKBpsThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************VM Memory********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_222" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine Memory Swapping Critical </Name>
    <active>true</active>
    <Description>Detects that virtual machine memory has reached a warning level based on swapping rate greater than 1.5MBps based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VM_MEM_CRIT" severity="9">
      <ArgList>
        hostIpAddr = VMMemHigh.hostIpAddr,hostName = VMMemHigh.hostName,phyMachIpAddr = VMMemHigh.phyMachIpAddr,phyMachName = VMMemHigh.phyMachName,swapReadKBytesPerSec  = VMMemHigh.AVG(swapReadKBytesPerSec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="VMMemHigh" name="VMMemHigh">
	<Description>Average swapping rate is greater than 1.5 MBps for 3 consecutive readings over 10 min period </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_VM_MEM_UTIL" </SingleEvtConstr>
	<GroupEvtConstr> AVG(swapReadKBytesPerSec) &gt; DeviceToCMDBAttr(hostIpAddr:SwapReadKBpsThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
	<GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName</GroupByAttr>
      </SubPattern> 
    </PatternClause> 
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,cpuUtil,cpuSysPct,cpuReadyPct,phyCpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

 
  <!-- ******************VM Disk IO********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_224" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine SCSI Bus Reset </Name>
    <active>true</active>
    <Description>Detects that virtual machine SCSI bus reset indicating that a read or write failed to complete within an acceptable amount of time. Storage could be a bottleneck.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VM_DISKIO_SCSI_BUS_RESET" severity="9">
      <ArgList>
        hostIpAddr = VMDiskReset.hostIpAddr,hostName = VMDiskReset.hostName,phyMachIpAddr = VMDiskReset.phyMachIpAddr,phyMachName = VMDiskReset.phyMachName,diskAdapter = VMDiskReset.diskAdapter
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="VMDiskReset" name="VMDiskReset">
	<Description>Disk Bus Reset </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_VM_DISK_IO"  </SingleEvtConstr>
	<GroupEvtConstr>
          AVG(diskBusResets) &gt;= 1 AND COUNT(*) &gt; 0 </GroupEvtConstr>
	<GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName,diskAdapter</GroupByAttr>
      </SubPattern> 
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,diskAdapter,diskBusResets,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ******************ESX CPU********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_225" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX CPU Warning </Name>
    <active>true</active>
    <Description>Detects that ESX CPU utilization has reached a warning level (between 75% and 95% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_CPU_WARN" severity="5">
      <ArgList>
        hostIpAddr = ESXCPUWarn.hostIpAddr,hostName = ESXCPUWarn.hostName,cpuUtil = ESXCPUWarn.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXCPUWarn" name="ESXCPUWarn">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </SingleEvtConstr>
        <GroupEvtConstr> AVG(cpuUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:ServerCPUUtilThreshWarn) AND AVG(cpuUtil) &lt;=  DeviceToCMDBAttr(hostIpAddr:ServerCPUUtilThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_226" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX CPU Critical</Name>
    <active>true</active>
    <Description>Detects that ESX CPU utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_CPU_CRIT" severity="9">
      <ArgList>
        hostIpAddr = ESXCPUCrit.hostIpAddr,hostName = ESXCPUCrit.hostName,cpuUtil = ESXCPUCrit.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXCPUCrit" name="ESXCPUCrit">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_SYS_CPU_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </SingleEvtConstr>
        <GroupEvtConstr> AVG(cpuUtil) &gt; DeviceToCMDBAttr(hostIpAddr:ServerCPUUtilThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>
  
  <!-- ******************ESX Memory********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_227" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Memory Warning </Name>
    <active>true</active>
    <Description>Detects that ESX memory utilization has reached a warning level (greater than 85% and swap rate between 1MBps and 1.5 MBps) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_MEM_WARN" severity="5">
      <ArgList>
        hostIpAddr = ESXMemWarn.hostIpAddr, hostName = ESXMemWarn.hostName, memUtil = ESXMemWarn.AVG(memUtil), swapReadKBytesPerSec = ESXMemWarn.AVG(swapReadKBytesPerSec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXMemWarn" name="ESXMemWarn">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </SingleEvtConstr>
        <GroupEvtConstr> AVG(memUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:ServerMemUtilThreshWarn) AND 
	  AVG(swapReadKBytesPerSec) &gt;= DeviceToCMDBAttr(hostIpAddr:SwapReadKBpsThreshWarn) AND 
	  AVG(swapReadKBytesPerSec) &lt;=  DeviceToCMDBAttr(hostIpAddr:SwapReadKBpsThreshCrit) AND 
	  COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_228" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Memory Critical</Name>
    <active>true</active>
    <Description>Detects that ESX memory utilization has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_MEM_CRIT" severity="9">
      <ArgList>
        hostIpAddr = ESXMemCrit.hostIpAddr,hostName = ESXMemCrit.hostName, memUtil = ESXMemCrit.AVG(memUtil), swapReadKBytesPerSec = ESXMemCrit.AVG(swapReadKBytesPerSec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXMemCrit" name="ESXMemCrit">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_SYS_MEM_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </SingleEvtConstr>
        <GroupEvtConstr> AVG(memUtil) &gt; DeviceToCMDBAttr(hostIpAddr:ServerMemUtilThreshCrit) AND 
	  AVG(swapReadKBytesPerSec) &gt; DeviceToCMDBAttr(hostIpAddr:SwapReadKBpsThreshCrit) AND 
	  COUNT(*) &gt;= 2 
	</GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,memUtil,swapReadKBytesPerSec,swapWriteKBytesPerSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ******************ESX Disk I/O********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_229" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Disk I/O Warning </Name>
    <active>true</active>
    <Description>Detects that ESX disk I/O utilization has reached a warning level - average Disk IO Latency between 20ms and 50ms based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_DISKIO_WARN" severity="5">
      <ArgList>
        hostIpAddr = ESXDiskWarn.hostIpAddr, 
	hostName = ESXDiskWarn.hostName, 
	diskName = ESXDiskWarn.diskName, 
	datastore = ESXDiskWarn.datastore,
        devDiskRdLatency = ESXDiskWarn.AVG(devDiskRdLatency), 
	devDiskWrLatency = ESXDiskWarn.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXDiskWarn" name="ESXDiskWarn">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_ESX_DISK_IO"  </SingleEvtConstr>
        <GroupEvtConstr> ((AVG(devDiskRdLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshWarn) AND AVG(devDiskRdLatency) &lt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshCrit)) OR (AVG(devDiskWrLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshWarn) AND AVG(devDiskWrLatency) &lt; DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,diskName,datastore</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,diskName,datastore,devDiskRdLatency,devDiskWrLatency,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_230" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Disk I/O Critical </Name>
    <active>true</active>
    <Description>Detects that ESX disk I/O utilization has reached a critical level - average Disk IO Latency greater than 50ms based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_DISKIO_CRIT" severity="9">
      <ArgList>
        hostIpAddr = ESXDiskCrit.hostIpAddr, 
	hostName = ESXDiskCrit.hostName, 
	diskName = ESXDiskCrit.diskName,
        datastore = ESXDiskCrit.datastore,
        devDiskRdLatency = ESXDiskCrit.AVG(devDiskRdLatency), 
	devDiskWrLatency = ESXDiskCrit.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXDiskCrit" name="ESXDiskCrit">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_ESX_DISK_IO"  </SingleEvtConstr>
        <GroupEvtConstr> (AVG(devDiskRdLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshCrit) OR AVG(devDiskWrLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,diskName,datastore</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,diskName,datastore,devDiskRdLatency,devDiskWrLatency,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>
  
  <!-- ******************ESX Network I/O********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_231" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Network I/O Warning </Name>
    <active>true</active>
    <Description>Detects that ESX network I/O utilization has reached a warning level - average network interface utilization between 35% and 50% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_INTF_WARN" severity="5">
      <ArgList>
        hostIpAddr = ESXIntfWarn.hostIpAddr, hostName = ESXIntfWarn.hostName, vSwitch = ESXIntfWarn.vSwitch,
        inIntfUtil = ESXIntfWarn.AVG(inIntfUtil), outIntfUtil = ESXIntfWarn.AVG(outIntfUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXIntfWarn" name="ESXIntfWarn">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </SingleEvtConstr>
        <GroupEvtConstr>
          ((AVG(inIntfUtil) &gt;= 35 AND AVG(inIntfUtil) &lt;= 50) OR (AVG(outIntfUtil) &gt;= 35 AND AVG(outIntfUtil) &lt;= 50)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,vSwitch</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,vSwitch, inIntfUtil, outIntfUtil, rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_232" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Network I/O Critical </Name>
    <active>true</active>
    <Description>Detects that ESX network I/O utilization has reached a critical level - average network interface utilization greater than 50% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ESX_INTF_CRIT" severity="9">
      <ArgList>
        hostIpAddr = ESXIntfCrit.hostIpAddr, hostName = ESXIntfCrit.hostName, vSwitch = ESXIntfCrit.vSwitch,
        inIntfUtil = ESXIntfCrit.AVG(inIntfUtil), outIntfUtil = ESXIntfCrit.AVG(outIntfUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="ESXIntfCrit" name="ESXIntfCrit">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_NET_INTF_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_VM_SERVER) </SingleEvtConstr>
        <GroupEvtConstr>
           (AVG(inIntfUtil) &gt; 50 OR AVG(outIntfUtil) &gt; 50) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,vSwitch</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,vSwitch, inIntfUtil, outIntfUtil, rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************Storage********************* -->
  <!-- ******************CPU********************* -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_233" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>Storage CPU Warning </Name>
    <active>true</active>
    <Description>Detects that storage CPU has reached a warning level (between 85% and 95% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_STORAGE_CPU_WARN" severity="5"  >
      <ArgList>
        hostIpAddr = StorCPUWarn.hostIpAddr, hostName = StorCPUWarn.hostName, cpuUtil = StorCPUWarn.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="StorCPUWarn" name="StorCPUWarn">
	 <Description>Average CPU Utilization is between 85% and 95% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_SYS_CPU_UTIL","PH_DEV_MON_CLARION_SP_UTIL") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:StorageCPUUtilThreshWarn) AND 
	   AVG(cpuUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:StorageCPUUtilThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
 <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_234" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>Storage CPU Critical </Name>
    <active>true</active>
    <Description>Detects that storage CPU has reached a critical level (greater than 95% based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_STORAGE_CPU_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = StorCPUCrit.hostIpAddr, hostName = StorCPUCrit.hostName, cpuUtil = StorCPUCrit.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="StorCPUCrit" name="StorCPUCrit">
	 <Description>Average CPU Utilization is greater than 95% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_SYS_CPU_UTIL","PH_DEV_MON_CLARION_SP_UTIL") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt; DeviceToCMDBAttr(hostIpAddr:StorageCPUUtilThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,cpuUtil,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************NetApp Disk space******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_235" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NFS Disk space Warning </Name>
    <active>true</active>
    <Description>Detects that NFS disk space usage has reached a warning level (utilization between 80% and 95% and free disk still greater than 100 MB) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NFS_DISK_SPACE_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = NFSDiskWarn.hostIpAddr, hostName = NFSDiskWarn.hostName, diskName = NFSDiskWarn.diskName, diskUtil = NFSDiskWarn.AVG(diskUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" NFSDiskWarn" name=" NFSDiskWarn">
	 <Description>Average Disk Utilization for a logical volume between 85% and 95% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage) </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(diskUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshWarn) AND 
	   AVG(diskUtil) &lt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshCrit)) OR 
	   (AVG(diskUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshCrit) AND 
	   AVG(freeDiskMB) &gt; DeviceToCMDBAttr(hostIpAddr:diskName:FreeDiskMBThreshCrit))) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,totalDiskMB,usedDiskMB,freeDiskMB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
 <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_236" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NFS Disk Space Critical </Name>
    <active>true</active>
    <Description>Detects that NFS disk space usage has reached a critical level (greater than 95% and free disk less than 100 MB) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NFS_DISK_SPACE_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = NFSDiskCrit.hostIpAddr, hostName = NFSDiskCrit.hostName, diskName = NFSDiskCrit.diskName, diskUtil = NFSDiskCrit.AVG(diskUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="NFSDiskCrit" name=" NFSDiskCrit">
	 <Description>Average CPU Utilization is greater than 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_DISK_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Storage) </SingleEvtConstr>
         <GroupEvtConstr> AVG(diskUtil) &gt; DeviceToCMDBAttr(hostIpAddr:diskName:DiskSpaceUtilThreshCrit) AND 
	   AVG(freeDiskMB) &lt; DeviceToCMDBAttr(hostIpAddr:diskName:FreeDiskMBThreshCrit) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName,diskName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,diskName,diskUtil,totalDiskMB,usedDiskMB,freeDiskMB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************NetApp NFS latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_237" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp NFS Read/Write Latency Warning </Name>
    <active>true</active>
    <Description>Detects that the NFS Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_NFS_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, nfsReadLatency = StorageDiskLatencyWarn.AVG(nfsReadLatency), nfsWriteLatency = StorageDiskLatencyWarn.AVG(nfsWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyWarn" name=" StorageDiskLatencyWarn">
	 <Description>Average NFS Read or Write latency for a logical volume between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_NETAPP_NFS3_MET", "PH_DEV_MON_NETAPP_NFS4_MET")  </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(nfsReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:NFSLatencyThreshWarn) AND AVG(nfsReadLatency) &lt; DeviceToCMDBAttr(hostIpAddr:NFSLatencyThreshCrit) OR (AVG(nfsWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:NFSLatencyThreshWarn) AND AVG(nfsWriteLatency) &lt; DeviceToCMDBAttr(hostIpAddr:NFSLatencyThreshCrit)))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,nfsReadOpsPerSec,nfsWriteOpsPerSec,nfsOpsPerSec,nfsReadLatency,nfsWriteLatency,nfsReadKBytesPerSec,nfsWriteKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_238" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp NFS Read/Write Latency Critical </Name>
    <active>true</active>
    <Description>Detects that NetApp NFS Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_NFS_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, nfsReadLatency = StorageDiskLatencyCrit.AVG(nfsReadLatency), nfsWriteLatency = StorageDiskLatencyCrit.AVG(nfsWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr> eventType IN ("PH_DEV_MON_NETAPP_NFS3_MET", "PH_DEV_MON_NETAPP_NFS4_MET")  </SingleEvtConstr>
         <GroupEvtConstr> (AVG(nfsReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:NFSLatencyThreshCrit) OR 
	   AVG(nfsWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:NFSLatencyThreshCrit)) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,nfsReadOpsPerSec,nfsWriteOpsPerSec,nfsOpsPerSec,nfsReadLatency,nfsWriteLatency,nfsReadKBytesPerSec,nfsWriteKBytesPerSec </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************NetApp CIFS latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_239" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp CIFS Read/Write Latency Warning </Name>
    <active>true</active>
    <Description>Detects that the CIFS Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_CIFS_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, cifsLatency = StorageDiskLatencyWarn.AVG(cifsLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyWarn" name=" StorageDiskLatencyWarn">
	 <Description>Average CIFS Read or Write latency for a logical volume between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_NETAPP_CIFS_MET")  </SingleEvtConstr>
         <GroupEvtConstr> (AVG(cifsLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:CIFSLatencyThreshWarn) AND 
	   AVG(cifsLatency) &lt; DeviceToCMDBAttr(hostIpAddr:CIFSLatencyThreshCrit)) AND 
	   COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,cifsOpsPerSec,cifsLatency</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_240" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp CIFS Latency Critical </Name>
    <active>true</active>
    <Description>Detects that NetApp CIFS latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_CIFS_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, cifsLatency = StorageDiskLatencyCrit.AVG(cifsLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr> eventType IN ("PH_DEV_MON_NETAPP_CIFS_MET")  </SingleEvtConstr>
         <GroupEvtConstr> AVG(cifsLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:CIFSLatencyThreshCrit)  AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,cifsOpsPerSec,cifsLatency </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- ***************NetApp ISCSI latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_241" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp ISCSI Read/Write Latency Warning </Name>
    <active>true</active>
    <Description>Detects that the ISCSI Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_ISCSI_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, iscsiReadLatency = StorageDiskLatencyWarn.AVG(iscsiReadLatency), iscsiWriteLatency = StorageDiskLatencyWarn.AVG(iscsiWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyWarn" name=" StorageDiskLatencyWarn">
	 <Description>Average ISCSI Read or Write latency for a logical volume between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_NETAPP_ISCSI_MET")  </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(iscsiReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:ISCSILatencyThreshWarn) AND AVG(iscsiReadLatency) &lt; DeviceToCMDBAttr(hostIpAddr:ISCSILatencyThreshCrit)) OR (AVG(iscsiWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:ISCSILatencyThreshWarn) AND AVG(iscsiWriteLatency) &lt; DeviceToCMDBAttr(hostIpAddr:ISCSILatencyThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,iscsiReadOpsPerSec,iscsiWriteOpsPerSec,iscsiOpsPerSec,iscsiReadLatency,iscsiWriteLatency,iscsiReadKBytesPerSec,iscsiWriteKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_242" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp ISCSI Read/Write Latency Critical </Name>
    <active>true</active>
    <Description>Detects that NetApp ISCSI Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_ISCSI_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, iscsiReadLatency = StorageDiskLatencyCrit.AVG(iscsiReadLatency), iscsiWriteLatency = StorageDiskLatencyCrit.AVG(iscsiWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr> eventType IN ("PH_DEV_MON_NETAPP_ISCSI_MET")  </SingleEvtConstr>
         <GroupEvtConstr> (AVG(iscsiReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:ISCSILatencyThreshCrit) OR AVG(iscsiWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:ISCSILatencyThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,iscsiReadOpsPerSec,iscsiWriteOpsPerSec,iscsiOpsPerSec,iscsiReadLatency,iscsiWriteLatency,iscsiReadKBytesPerSec,iscsiWriteKBytesPerSec </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- ***************NetApp FCP latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_243" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp FCP Read/Write Latency Warning </Name>
    <active>true</active>
    <Description>Detects that the FCP Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_FCP_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, fcpReadLatency = StorageDiskLatencyWarn.AVG(fcpReadLatency), fcpWriteLatency = StorageDiskLatencyWarn.AVG(fcpWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyWarn" name=" StorageDiskLatencyWarn">
	 <Description>Average FCP Read or Write latency for a logical volume between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_NETAPP_FCP_MET")  </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(fcpReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:FCPLatencyThreshWarn) AND AVG(fcpReadLatency) &lt; DeviceToCMDBAttr(hostIpAddr:FCPLatencyThreshCrit)) OR (AVG(fcpWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:FCPLatencyThreshWarn) AND AVG(fcpWriteLatency) &lt; DeviceToCMDBAttr(hostIpAddr:FCPLatencyThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,fcpReadOpsPerSec,fcpWriteOpsPerSec,fcpOpsPerSec,fcpReadLatency,fcpWriteLatency,fcpReadKBytesPerSec,fcpWriteKBytesPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_244" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp FCP Read/Write Latency Critical </Name>
    <active>true</active>
    <Description>Detects that NetApp FCP Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_FCP_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, fcpReadLatency = StorageDiskLatencyCrit.AVG(fcpReadLatency), fcpWriteLatency = StorageDiskLatencyCrit.AVG(fcpWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr> eventType IN ("PH_DEV_MON_NETAPP_FCP_MET")  </SingleEvtConstr>
         <GroupEvtConstr> (AVG(fcpReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:FCPLatencyThreshCrit) OR AVG(fcpWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:FCPLatencyThreshCrit)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,fcpReadOpsPerSec,fcpWriteOpsPerSec,fcpOpsPerSec,fcpReadLatency,fcpWriteLatency,fcpReadKBytesPerSec,fcpWriteKBytesPerSec </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- ***************NetApp Volume latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_245" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp Volume Read/Write Latency Warning </Name>
    <active>true</active>
    <Description>Detects that the FCP Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_VOLUME_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, devDiskRdLatency = StorageDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyWarn.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyWarn" name=" StorageDiskLatencyWarn">
	 <Description>Average Read or Write latency for a logical volume between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_NETAPP_VOL_MET")  </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(devDiskRdLatency) &gt;= 20 AND AVG(devDiskRdLatency) &lt; 50) OR (AVG(devDiskWrLatency) &gt;= 20 AND AVG(devDiskWrLatency) &lt; 50)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName, devDiskRdLatency, devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_246" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp Volume Read/Write Latency Critical </Name>
    <active>true</active>
    <Description>Detects that NetApp Volume Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_VOLUME_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, devDiskRdLatency = StorageDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyCrit.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr> eventType IN ("PH_DEV_MON_NETAPP_VOL_MET")  </SingleEvtConstr>
         <GroupEvtConstr> (AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,devDiskRdLatency, devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <!-- ***************EqualLogic connection latency ******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_247" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>EqualLogic Connection Read/Write Latency Warning </Name>
    <active>true</active>
    <Description>Detects that the EqualLogic connection Read or Write latency has reached a warning level (between 20 and 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EQLOGIC_CONN_LATENCY_WARN" severity="5"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyWarn.hostIpAddr, hostName = StorageDiskLatencyWarn.hostName, devDiskRdLatency = StorageDiskLatencyWarn.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyWarn.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyWarn" name=" StorageDiskLatencyWarn">
	 <Description>Average Read or Write latency between between 20 and 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType IN ("PH_DEV_MON_EQL_CONN_MET")  </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(devDiskRdLatency) &gt;= 20 AND AVG(devDiskRdLatency) &lt; 50) OR (AVG(devDiskWrLatency) &gt;= 20 AND AVG(devDiskWrLatency) &lt; 50)) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName, devDiskRdLatency, devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_248" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>EqualLogic Connection Read/Write Latency Critical </Name>
    <active>true</active>
    <Description>Detects that EqualLogic Connection Read/Write latency has reached a critical level (greater  than 50 msec) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EQLOGIC_CONN_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, devDiskRdLatency = StorageDiskLatencyCrit.AVG(devDiskRdLatency), devDiskWrLatency = StorageDiskLatencyCrit.AVG(devDiskWrLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average Disk Read or Write latency for a logical volume greater than 50 msec for 2 readings over 10 min period </Description>
	 <SingleEvtConstr> eventType IN ("PH_DEV_MON_EQL_CONN_MET")  </SingleEvtConstr>
         <GroupEvtConstr> (AVG(devDiskRdLatency) &gt;= 50 OR AVG(devDiskWrLatency) &gt;= 50) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,devDiskRdLatency, devDiskWrLatency,diskReadReqPerSec,diskWriteReqPerSec</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************windows paging file********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_249" fireInternalIncident = "true" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Windows Server Paging File Usage Critical </Name>
    <active>true</active>
    <Description>Detects that server paging file usage has reached a critical level (greater than 98% based on 5 successive readings in a 1 hour interval. The paging file is a reserved space on disk that backes up committed physical memory on a computer </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SERVER_PAGING_FILE_CRIT" severity="9"  >
      <ArgList>
        hostIpAddr = ServPagingCrit.hostIpAddr, hostName = ServPagingCrit.hostName, pageFileUsage = ServPagingCrit.AVG(pageFileUsage)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="3600">
       <SubPattern displayName="ServPagingCrit" name="ServPagingCrit">
	 <Description>Average Paging file Utilization is greater than 98% based on 5 successive readings in a 1 hour interval </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_SYS_PAGEFILE_USAGE" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupEvtConstr> AVG(pageFileUsage) &gt;= 98 AND COUNT(*) &gt;= 5 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,pageFileUsage, pageFilePeakUsage </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_250" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>Isilon Protocol Latency Critical </Name>
    <active>true</active>
    <Description>Detects that Isilon protocol latency has reached a critical level (greater  than 2 sec) based on at least 3 readings in a 15 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ISILON_PROTO_LATENCY_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = StorageDiskLatencyCrit.hostIpAddr, hostName = StorageDiskLatencyCrit.hostName, latency = StorageDiskLatencyCrit.AVG(latency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
       <SubPattern displayName=" StorageDiskLatencyCrit" name=" StorageDiskLatencyCrit">
	 <Description>Average latency for a protocol is greater than 1 sec for 2 readings over 15 min period </Description>
	 <SingleEvtConstr> eventType = "PH_DEV_MON_ISILON_NODE_PROTO_PERF"  </SingleEvtConstr>
         <GroupEvtConstr> AVG(latency) &gt;= 1000 AND COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,appName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,appName,latency,opsPerSec,sentBitsPerSec,recvBitsPerSec,sentBytes,recvBytes</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

   <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_251" fireInternalIncident = "true" phIncidentCategory="Storage" function="PERFORMANCE">
    <Name>NetApp Back to Back Consistency Point </Name>
    <active>true</active>
    <Description>Detects back to back consistency points on NetApp filers. This simply means that writes are coming to the filer faster than can be written to NVRAM in one bank. Typically happens during RAID reconstruction or when the filer is overloaded.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_BACK_2_BACK_CP" severity="9"  fireFreq="21600">
      <ArgList>
        hostIpAddr = ConsistencyPoint.hostIpAddr, hostName = ConsistencyPoint.hostName, backtobackCp = ConsistencyPoint.AVG(backtobackCp), deferredBacktobackCp = ConsistencyPoint.AVG(deferredBacktobackCp)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="ConsistencyPoint" name="ConsistencyPoint">
	 <Description>Consistency point </Description>
	 <SingleEvtConstr> eventType = "PH_DEV_MON_NETAPP_CP_MET" </SingleEvtConstr>
         <GroupEvtConstr> AVG(backtobackCp) &gt;= 1 OR AVG(deferredBacktobackCp) &gt;= 1 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,backtobackCp,deferredBacktobackCp,cpFromTimer,cpFromSnapshot,cpFromLowWater,cpFromHiWater,cpFromLogFull,totalCp</AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************datacenter Datastore Disk space******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_252" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Datastore Space Warning </Name>
    <active>true</active>
    <Description>Detects that datastore usage has reached a warning level (utilization between 75% and 85% and free disk still greater than 10GB) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VMWARE_DATASTORE_SPACE_WARN" severity="7"  fireFreq="21600">
      <ArgList>
        datacenter = DatastoreWarn.datacenter, 
	datastore = DatastoreWarn.datastore, 
	datastoreType = DatastoreWarn.datastoreType,
	diskUtil = DatastoreWarn.AVG(diskUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="datastore">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="DatastoreWarn" name="DatastoreWarn">
	 <Description>Average Datastore Utilization between 75% and 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_DATASTORE_UTIL"  </SingleEvtConstr>
         <GroupEvtConstr> ((AVG(diskUtil) &gt;= 75 AND AVG(diskUtil) &lt;= 85) OR 
	   (AVG(diskUtil) &gt; 85 AND AVG(freeDiskMB) &gt; 10240)) AND  
	   COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>datacenter,datastore,datastoreType</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,datacenter,datastore,datastoreType,diskUtil,totalDiskMB,usedDiskMB,freeDiskMB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ***************datacenter Datastore Disk space******************** -->
  <Rule group="PH_SYS_RULE_Perf_Storage" id="PH_Rule_Perf_253" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Datastore Space Critical </Name>
    <active>true</active>
    <Description>Detects that datastore usage has reached a critical level (utilization greater than 85% and free disk less than 10GB) based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VMWARE_DATASTORE_SPACE_CRIT" severity="9"  fireFreq="21600">
      <ArgList>
        datacenter = DatastoreCrit.datacenter, 
	datastore = DatastoreCrit.datastore, 
	datastoreType = DatastoreCrit.datastoreType,
	diskUtil = DatastoreCrit.AVG(diskUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="datastore">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="DatastoreCrit" name="DatastoreCrit">
	 <Description>Average Datastore Utilization greater than 85% and free disk less than 10GB for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_DATASTORE_UTIL"  </SingleEvtConstr>
         <GroupEvtConstr> AVG(diskUtil) &gt; 85 AND AVG(freeDiskMB) &lt; 10240 AND COUNT(*) &gt;= 2 
	 </GroupEvtConstr>
         <GroupByAttr>datacenter,datastore,datastoreType</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,datacenter,datastore,datastoreType,diskUtil,totalDiskMB,usedDiskMB,freeDiskMB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

</Rules>
<Rules>

 <!-- *************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_301" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Guest Critical </Name>
    <active>true</active>
    <Description>Detects that an HyperV Guest is in critical state</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_GUEST_CRITICAL" severity="10"  >
      <ArgList>
        hostName = GuestCrit.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="GuestCrit" name="GuestCrit">
	 <Description>HyperV health critical </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_OVERALL_HEALTH" AND vmHealthCritCount &gt;= 1 </SingleEvtConstr>
         <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
         <GroupByAttr>hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_HYPERV_GUEST_CRITICAL_CLEAR">
	<ArgList>hostName = GuestCrit_CLEAR.hostName</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_HYPERV_GUEST_CRITICAL.hostName = PH_RULE_HYPERV_GUEST_CRITICAL_CLEAR.hostName </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="GuestCrit_CLEAR" name="GuestCrit_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_HYPERV_OVERALL_HEALTH" AND vmHealthCritCount = 0 </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule> 


  <!-- ******************total run time pct********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_302" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Logical Processor Total Run Time Percent Warning</Name>
    <active>true</active>
    <Description>Detects that Hyper-V logical processor total run time pct has reached a warning level (between 70% and 90% based on 2 successive readings in a 10 minute interval). The total run time combines the time guest code and the hypervisor is running on a logical processor. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_LOGIC_CPU_TOT_RUN_PCT_WARN" severity="7"  >
      <ArgList>
        hostIpAddr = TotalRunTimeWarn.hostIpAddr, 
	hostName = TotalRunTimeWarn.hostName, 
	totalRunTimePct = TotalRunTimeWarn.AVG(totalRunTimePct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="TotalRunTimeWarn" name="TotalRunTimeWarn">
	 <Description>Average Hyper-V logical processor total run time pct between 75% and 85% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_CPU_LOGICAL_PROC" </SingleEvtConstr>
         <GroupEvtConstr> AVG(totalRunTimePct) &gt;= DeviceToCMDBAttr(hostIpAddr:HyperVLogicalTotRunTimePctThreshWarn) AND 
	   AVG(totalRunTimePct) &lt;= DeviceToCMDBAttr(hostIpAddr:HyperVLogicalTotRunTimePctThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList>phRecvTime,eventType,hostIpAddr,hostName,totalRunTimePct,idleTimePct,guestRunTimePct,hypervisorRunTimePct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************total run time pct********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_303" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name> HyperV Logical Processor Total Run Time Percent Critical</Name>
    <active>true</active>
    <Description>Detects that Hyper-V logical processor total run time pct has reached a critical level (greater than 90% based on 2 successive readings in a 10 minute interval). The total run time combines the time guest code and the hypervisor is running on a logical processor.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_LOGIC_CPU_TOT_RUN_PCT_CRIT" severity="5"  >
      <ArgList>
        hostIpAddr = TotalRunTimeWarn.hostIpAddr, 
	hostName = TotalRunTimeWarn.hostName, 
	totalRunTimePct = TotalRunTimeWarn.AVG(totalRunTimePct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="TotalRunTimeWarn" name="TotalRunTimeWarn">
	 <Description>Average Hyper-V logical processor total run time pct greater than 90% for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_CPU_LOGICAL_PROC" </SingleEvtConstr>
         <GroupEvtConstr> AVG(totalRunTimePct) &gt;= DeviceToCMDBAttr(hostIpAddr:HyperVLogicalTotRunTimePctThreshCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,totalRunTimePct,idleTimePct,guestRunTimePct,hypervisorRunTimePct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <!-- ******************hypervisor run time pct********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_304" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Guest Hypervisor Run Time Percent Warning</Name>
    <active>true</active>
    <Description>Detects that Hyper-V Guest hypervisor run time pct has reached a warning level (greater than 25% based on 2 successive readings in a 10 minute interval). Hypervisor run time percent represents the percent of time Guest virtual processor is running in hypervisor code on an logical processor  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_GUEST_HYPERV_RUN_PCT_WARN" severity="7"  >
      <ArgList>
        hostIpAddr = GuestHyperVRunTimeWarn.hostIpAddr, 
	hostName = GuestHyperVRunTimeWarn.hostName,
	phyMachName = GuestHyperVRunTimeWarn.phyMachName,
	hypervisorRunTimePct = GuestHyperVRunTimeWarn.AVG(hypervisorRunTimePct)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="GuestHyperVRunTimeWarn" name="GuestHyperVRunTimeWarn">
	 <Description>Average Hyper-V Guest hypervisor run time pct more than 25pct for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_CPU_GUEST_VIRTUAL_PROC" </SingleEvtConstr>
         <GroupEvtConstr> AVG(hypervisorRunTimePct) &gt; DeviceToCMDBAttr(hostIpAddr:HyperVRunTimePctThreshWarn) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,phyMachName</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList>phRecvTime,eventType,hostIpAddr,hostName,phyMachName,totalRunTimePct,idleTimePct,guestRunTimePct,hypervisorRunTimePct,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************hypervisor free memory********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_305" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Remainining Guest Memory Warning </Name>
    <active>true</active>
    <Description>Detects that Hyper-V free memory remaining for guest is below 2MB </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_REMAIN_GUEST_MEMORY_WARN" severity="7"  >
      <ArgList>
        hostIpAddr = LowMemWarn.hostIpAddr, 
	hostName = LowMemWarn.hostName,
	freeMemKB = LowMemWarn.AVG(freeMemKB)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="LowMemWarn" name="LowMemWarn">
	 <Description>Average Hyper-V free memory less than 2 MB for 2 readings over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_MEM_OVERALL" </SingleEvtConstr>
         <GroupEvtConstr> AVG(freeMemKB) &lt; DeviceToCMDBAttr(hostIpAddr:HyperVFreeMemKBWarn) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList>phRecvTime,eventType,hostIpAddr,hostName,freeMemKB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 


  <!-- ******************hypervisor free memory********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_306" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Page fault Warning </Name>
    <active>true</active>
    <Description>Detects that Hyper-V page fault rate has reached a warning level. Page fault rate is the pace at which pages are read in and out of disk to resolve hard page faults </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_PAGE_FAULT_WARN" severity="7"  >
      <ArgList>
        hostIpAddr = PageFaultWarn.hostIpAddr, 
	hostName = PageFaultWarn.hostName,
	pageFaultsPersec = PageFaultWarn.AVG(pageFaultsPersec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="PageFaultWarn" name="PageFaultWarn">
	 <Description>Average Hyper-V page fault rate is between 750/sec and 1000/sec over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_MEM_OVERALL" </SingleEvtConstr>
         <GroupEvtConstr> AVG(pageFaultsPersec) &gt; DeviceToCMDBAttr(hostIpAddr:HyperVPageFaultWarn) AND 
	   AVG(pageFaultsPersec) &lt;= DeviceToCMDBAttr(hostIpAddr:HyperVPageFaultCrit) AND
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList>phRecvTime,eventType,hostIpAddr,hostName,freeMemKB,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************hypervisor free memory********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_307" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Page fault Critical </Name>
    <active>true</active>
    <Description>Detects that Hyper-V page fault rate has reached a critical level. Page fault rate is the pace at which pages are read in and out of disk to resolve hard page faults </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_PAGE_FAULT_CRIT" severity="10"  >
      <ArgList>
        hostIpAddr = PageFaulrCrit.hostIpAddr, 
	hostName = PageFaulrCrit.hostName,
	pageFaultsPersec = PageFaulrCrit.AVG(pageFaultsPersec)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="PageFaulrCrit" name="PageFaulrCrit">
	 <Description>Average Hyper-V page fault rate is greater than 1000/sec over 10 min period </Description>
	 <SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_MEM_OVERALL" </SingleEvtConstr>
         <GroupEvtConstr> AVG(pageFaultsPersec) &gt; DeviceToCMDBAttr(hostIpAddr:HyperVPageFaultCrit) AND 
	   COUNT(*) &gt;= 2 </GroupEvtConstr>
         <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList>phRecvTime,eventType,hostIpAddr,hostName,freeMemKB,pageFaultsPersec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 

  <!-- ******************HyperV Disk I/O********************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_308" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Disk I/O Warning </Name>
    <active>true</active>
    <Description>Detects that HyperV disk I/O utilization has reached a warning level - average Disk IO Latency between 20ms and 50ms based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_DISK_LATENCY_WARN" severity="5">
      <ArgList>
        hostIpAddr = DiskWarn.hostIpAddr, 
	hostName = DiskWarn.hostName, 
        ioReadLatency = DiskWarn.AVG(ioReadLatency), 
	ioWriteLatency = DiskWarn.AVG(ioWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="DiskWarn" name="DiskWarn">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_STORAGE_LOGICAL_DISK"  </SingleEvtConstr>
        <GroupEvtConstr> ((AVG(ioReadLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshWarn)  AND AVG(ioReadLatency) &lt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshCrit)) OR (AVG(ioWriteLatency) &gt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshWarn) AND AVG(ioWriteLatency) &lt;= DeviceToCMDBAttr(hostIpAddr:IOLatencyThreshCrit))) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,ioReadLatency,ioWriteLatency,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule> 
  
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_309" fireInternalIncident = "true" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>HyperV Disk I/O Critical </Name>
    <active>true</active>
    <Description>Detects that HyperV disk I/O utilization has reached a critical level - average Disk IO Latency greater than 50ms based on 2 successive readings in a 10 minute interval</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HYPERV_DISK_LATENCY_CRIT" severity="9">
      <ArgList>
        hostIpAddr = DiskCrit.hostIpAddr, 
	hostName = DiskCrit.hostName, 
        ioReadLatency = DiskCrit.AVG(ioReadLatency), 
	ioWriteLatency = DiskCrit.AVG(ioWriteLatency)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
      <SubPattern displayName="DiskCrit" name="DiskCrit">
	<Description> </Description>
	<SingleEvtConstr>eventType = "PH_DEV_MON_HYPERV_STORAGE_LOGICAL_DISK"  </SingleEvtConstr>
        <GroupEvtConstr> (AVG(ioReadLatency) &gt;= 50 OR AVG(ioWriteLatency) &gt;= 50) AND COUNT(*) &gt;= 2 </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>  
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,ioReadLatency,ioWriteLatency,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_310" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>FortiWeb Connection High</Name>
    <active>true</active>
    <Description> Detects excessive number of concurrent connections through a FortiWeb appliance</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTIWEB_CONN_HIGH" severity="9">
      <ArgList>
        hostIpAddr = ConnHigh.reptDevIpAddr, 
	hostName = ConnHigh.reptDevName 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ConnHigh" name="ConnHigh">
         <SingleEvtConstr> eventType = "FortiWeb-19999498" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,reptDevName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
   </Rule>

  
</Rules>
<Rules>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_8" phIncidentCategory="Server" function="PERFORMANCE">
    <Name> High Process CPU: Server </Name>
    <active>true</active>
    <Description>Detects high CPU usage by a server application on the basis of 3 consecutive measurements in a 15 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_CPU_APPL_SERVER" severity="8">
      <ArgList>
        hostName = HighProcessCPU.hostName, 
	hostIpAddr = HighProcessCPU.hostIpAddr, 
	swProcName = HighProcessCPU.swProcName, 
	cpuUtil = HighProcessCPU.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
       <SubPattern displayName="HighProcessCPU" name="HighProcessCPU">
	 <SingleEvtConstr>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:swProcName:ProcessCPUUtilThreshCrit) AND COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr> hostName,hostIpAddr, swProcName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,appName,swProcName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_9" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>High Process Memory: Server</Name>
    <active>true</active>
    <Description>Detects high memory usage by a server application on the basis of 3 consecutive measurements in a 15 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_MEM_APPL_SERVER" severity="8">
      <ArgList>
        hostName = HighProcessMemory.hostName, 
	hostIpAddr = HighProcessMemory.hostIpAddr, 
	swProcName = HighProcessMemory.swProcName, 
	memUtil = HighProcessMemory.AVG(memUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
       <SubPattern displayName="HighProcessMemory" name="HighProcessMemory">
	 <SingleEvtConstr>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Server) </SingleEvtConstr>
         <GroupEvtConstr> AVG(memUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:swProcName:ProcessMemoryUtilThreshCrit) AND COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr> hostName, hostIpAddr, swProcName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,appName,swProcName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_21" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Device Health: Critical</Name>
    <active>false</active>
    <Description>Detects that the health of a network device is critical and needs immediate attention based average CPU, memory and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_NET_DEV_CRITICAL" severity="9">
      <ArgList>
        hostIpAddr = NetHealthCrit.hostIpAddr,hostName = NetHealthCrit.hostName
      </ArgList>
    </IncidentDef>

    <PatternClause window="540">
      <SubPattern displayName="NetHealthCrit" name="NetHealthCrit">
	<Description>CPU, memory, interface util/error critical</Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_NET_CPU_CRIT","PH_RULE_NET_MEM_CRIT", "PH_RULE_NET_INTF_UTIL_CRIT","PH_RULE_NET_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
        <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>    
    
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostIpAddr,hostName, eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_22" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Windows Server Health: Critical</Name>
    <active>false</active>
    <Description>Detects that the health of a windows server is critical and needs immediate attention based average CPU, memory, disk and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_WIN_SERVER_CRITICAL" severity="9">
      <ArgList>
        hostIpAddr = WinHealthCrit.hostIpAddr, hostName = WinHealthCrit.hostName
      </ArgList>
    </IncidentDef>
    
    <PatternClause window="540">
      <SubPattern displayName="WinHealthCrit" name="WinHealthCrit">
	<Description>CPU, Memory, Disk space or interface critical</Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_SERVER_CPU_CRIT","PH_RULE_SERVER_MEM_CRIT","PH_RULE_SERVER_DISK_SPACE_CRIT", "PH_RULE_SERVER_INTF_UTIL_CRIT","PH_RULE_SERVER_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) </SingleEvtConstr>
        <GroupByAttr>hostIpAddr, hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>    

    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ******************************************************* -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_24" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Unix Server Health: Critical</Name>
    <active>false</active>
    <Description>Detects that the health of a unix server is critical and needs immediate attention based average CPU, memory, disk and interface utilization and interface errors - at least one of the measured attributes has crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_UNIX_SERVER_CRITICAL" severity="9">
      <ArgList>
        hostIpAddr = UnixHealthCrit.hostIpAddr, hostName = UnixHealthCrit.hostName
      </ArgList>
    </IncidentDef>
    
    <PatternClause window="540">
      <SubPattern displayName="UnixHealthCrit" name="UnixHealthCrit">
	<Description></Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_SERVER_CPU_CRIT","PH_RULE_SERVER_MEM_CRIT","PH_RULE_SERVER_DISK_SPACE_CRIT", "PH_RULE_SERVER_INTF_UTIL_CRIT","PH_RULE_SERVER_INTF_ERR_CRIT") AND hostIpAddr IN (Group@PH_SYS_DEVICE_UNIX_SERVER) </SingleEvtConstr>
        <GroupByAttr>hostIpAddr, hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>    
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,freeDiskMB,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_28" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Network Device Health: Warning</Name>
    <active>false</active>
    <Description>Detects that the health of a network device need to be watched carefully based average CPU, memory and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HEALTH_NET_DEV_WATCH" severity="5">
      <ArgList>
        hostIpAddr = NetHealthWarn.hostIpAddr, hostName = NetHealthWarn.hostName
      </ArgList>
    </IncidentDef>
    <PatternClause window="540">
      <SubPattern displayName="NetHealthWarn" name="NetHealthWarn">
	<Description>CPU, memory, interface util/error warning</Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_NET_CPU_WARN","PH_RULE_NET_MEM_WARN", "PH_RULE_NET_INTF_UTIL_WARN","PH_RULE_NET_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
        <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>    
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_29" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Windows Server Health: Warning</Name>
    <active>false</active>
    <Description>Detects that the health of a windows server need to be watched carefully based average CPU, memory, disk and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_WIN_SERVER_WATCH" severity="5" phEventCategory="1">
      <ArgList>
        hostIpAddr = WinHealthWarn.hostIpAddr, hostName = WinHealthWarn.hostName
      </ArgList>
    </IncidentDef>

    <PatternClause window="540">
      <SubPattern displayName="WinHealthWarn" name="WinHealthWarn">
	<Description></Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN", "PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER) </SingleEvtConstr>
        <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>    
    
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,cpuUtil,memUtil,diskUtil,diskIOUtil,intfName,inIntfUtil,outIntfUtil,inIntfPktErrPct,outIntfPktErrPct,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_30" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Unix Server Health: Warning </Name>
    <active>false</active>
    <Description>Detects that the health of a unix server need to be watched carefully based average CPU, memory, disk and interface utilization and interface errors- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_UNIX_SERVER_WATCH" severity="5" phEventCategory="1">
      <ArgList>
        hostIpAddr = UnixHealthWarn.hostIpAddr, hostName = UnixHealthWarn.hostName
      </ArgList>
    </IncidentDef>

    <PatternClause window="540">
      <SubPattern displayName="UnixHealthWarn" name="UnixHealthWarn">
	<Description></Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_SERVER_CPU_WARN","PH_RULE_SERVER_MEM_WARN","PH_RULE_SERVER_DISK_SPACE_WARN", "PH_RULE_SERVER_INTF_UTIL_WARN","PH_RULE_SERVER_INTF_ERR_WARN") AND hostIpAddr IN (Group@PH_SYS_DEVICE_UNIX_SERVER) </SingleEvtConstr>
        <GroupByAttr>hostIpAddr,hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>    

    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName, rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_31" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>High Process CPU: Network Device</Name>
    <active>true</active>
    <Description>Detects high CPU usage by an application on the basis of 3 consecutive measurements in a 15 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_CPU_APPL_NET_DEV" severity="8">
      <ArgList>
        hostName = NetProcCPUHigh.hostName, 
	hostIpAddr = NetProcCPUHigh.hostIpAddr, 
	swProcName = NetProcCPUHigh.swProcName, 
	cpuUtil = NetProcCPUHigh.AVG(cpuUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
       <SubPattern displayName="NetProcCPUHigh" name="NetProcCPUHigh">
	 <SingleEvtConstr>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
         <GroupEvtConstr> AVG(cpuUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:swProcName:ProcessCPUUtilThreshCrit) AND COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr> hostName, hostIpAddr,swProcName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,appName,swProcName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Perf_32" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>High Process Memory: Network Device</Name>
    <active>true</active>
    <Description>Detects high memory usage by an application on the basis of 3 consecutive measurements in a 15 minute period </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_MEM_APPL_NET_DEV" severity="8">
      <ArgList>
        hostName = NetProcMemHigh.hostName, 
	hostIpAddr = NetProcMemHigh.hostIpAddr, 
	swProcName = NetProcMemHigh.swProcName, 
	memUtil = NetProcMemHigh.AVG(memUtil)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="900">
       <SubPattern displayName="NetProcMemHigh" name="NetProcMemHigh">
	 <SingleEvtConstr>eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" AND hostIpAddr IN (Group@PH_SYS_DEVICE_Network) </SingleEvtConstr>
         <GroupEvtConstr> AVG(memUtil) &gt;= DeviceToCMDBAttr(hostIpAddr:swProcName:ProcessCPUUtilThreshCrit) AND COUNT(*) &gt;= 3 </GroupEvtConstr>
         <GroupByAttr>hostName, hostIpAddr, swProcName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,appName,swProcName,cpuUtil,memUtil,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_43" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine Health: Warning </Name>
    <active>false</active>
    <Description>Detects that the health of a virtual machine need to be watched carefully based on specific VM metrics such as CPU ready percent, memory swapping rates and disk I/O activity- at least one of the measured attributes has crossed the specified LOW threshold but has not yet crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_VM_WATCH" severity="5">
      <ArgList>
        hostIpAddr = VMHealthWarn.hostIpAddr,hostName = VMHealthWarn.hostName,phyMachIpAddr = VMHealthWarn.phyMachIpAddr,phyMachName = VMHealthWarn.phyMachName
      </ArgList>
    </IncidentDef>

    <PatternClause window="540">
       <SubPattern displayName="VMHealthWarn" name="VMHealthWarn">
	 <Description>VM CPU, memory or disk I/O issue </Description>
	 <SingleEvtConstr>eventType IN ("PH_RULE_VM_CPU_WARN", "PH_RULE_VM_MEM_WARN", "PH_RULE_VM_DISKIO_WARN")  </SingleEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName</GroupByAttr>
       </SubPattern>
    </PatternClause>    

    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_44" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>Virtual Machine Health: Critical </Name>
    <active>false</active>
    <Description>Detects that the health of a virtual machine is critical based on specific VM metrics such as CPU ready percent, memory swapping rates and disk I/O activity- at least one of the measured attributes has crossed the specified HIGH threshold </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_VM_CRITICAL" severity="9">
      <ArgList>
        hostIpAddr = VMHealthCrit.hostIpAddr,hostName = VMHealthCrit.hostName,phyMachIpAddr = VMHealthCrit.phyMachIpAddr,phyMachName = VMHealthCrit.phyMachName
      </ArgList>
    </IncidentDef>

    <PatternClause window="540">
       <SubPattern displayName="VMHealthCrit" name="VMHealthCrit">
	 <Description>VM CPU, memory or disk I/O issue </Description>
	 <SingleEvtConstr>eventType IN ("PH_RULE_VM_CPU_CRIT", "PH_RULE_VM_MEM_CRIT", "PH_RULE_VM_DISKIO_CRIT")  </SingleEvtConstr>
         <GroupByAttr>hostName,hostIpAddr,phyMachIpAddr,phyMachName</GroupByAttr>
       </SubPattern>
    </PatternClause>    

    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,phyMachIpAddr,phyMachName,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_47" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Server Health: Warning </Name>
    <active>false</active>
    <Description>Detects that the health of an ESX server is to be watched carefully since either the performance of one of the component VMs has entered a watched state or the ESX server itself is showing high resource utilization at the aggregate level.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_ESX_WATCH" severity="7">
      <ArgList>
        hostIpAddr = VMHealthWatch.hostIpAddr, hostName = VMHealthWatch.hostName
      </ArgList>
    </IncidentDef>
    
    <PatternClause window="600">
      <SubPattern displayName="VMHealthWatch" name="VMHealthWatch">
	<Description> </Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_ESX_CPU_WARN","PH_RULE_ESX_MEM_WARN","PH_RULE_ESX_DISKIO_WARN", "PH_RULE_ESX_INTF_WARN")  </SingleEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>    

    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>


  <!-- *************************************************************************** -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Perf_48" phIncidentCategory="Virtualization" function="PERFORMANCE">
    <Name>ESX Server Health: Critical </Name>
    <active>false</active>
    <Description>Detects that the health of an ESX server is critical since either the performance of one of the component VMs is in critical state or the ESX server itself is showing critical resource utilization at the aggregate level.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>

    <IncidentDef eventType="PH_RULE_HEALTH_ESX_CRITICAL" severity="9">
      <ArgList>
        hostName = VMHealthWatch.hostName,hostIpAddr = VMHealthWatch.hostIpAddr
      </ArgList>
    </IncidentDef>

    <PatternClause window="600">
      <SubPattern displayName="VMHealthWatch" name="VMHealthWatch">
	<Description> </Description>
	<SingleEvtConstr>eventType IN ("PH_RULE_ESX_CPU_CRIT","PH_RULE_ESX_MEM_CRIT","PH_RULE_ESX_DISKIO_CRIT", "PH_RULE_ESX_INTF_CRIT")  </SingleEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause> 

    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostIpAddr,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

</Rules>
<Rules>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_1" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Warning: Low Available Event Storage Capacity </Name>
    <active>false</active>
    <Description> Detects the free space of the file system containing the folder /data/eventdb used for storing events is lower than a warning threshold - default 20GB. Once the free space is lower than critical threshold (default 10GB), the system will automatically purge old events until the free space is more than 20GB. If you do not want this automatical purge of old events, please backup old events to a remote location using nfs, cifs or sftp, otherwise, you can disable this rule.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_LOW_STORAGE" severity="8">
      <ArgList>
        hostIpAddr = AOStorageLow.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOStorageLow" name="AOStorageLow">
        <SingleEvtConstr> eventType = "PH_SYSTEM_STORAGE_LOW" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>
  
  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_2" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System License Warning: High Event Rate</Name>
    <active>true</active>
    <Description> Detects that the system is receiving events at a rate that is higher than the license limit. Events beyond the license limit would be dropped unless the license is upgraded.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_HIGH_EPS" severity="10">
      <ArgList>
        hostIpAddr = AOLicenseExpire.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseExpire" name="AOLicenseExpire">
        <SingleEvtConstr> eventType = "PH_SYSTEM_EVENT_RATE_EXCEED_LICENSE" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_4" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Collector Down</Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that collector is down.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_COLLECTOR_DOWN"  severity="9">
      <ArgList>
        customer = AOCollectorDown.customer, phCollectorName = AOCollectorDown.phCollectorName
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOCollectorDown" name="AOCollectorDown">
        <SingleEvtConstr> eventType = "PH_COLLECTOR_DOWN" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer,phCollectorName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,customer,phCollectorName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_ACCELOPS_COLLECTOR_DOWN_CLEAR">
	<ArgList>customer = AOCollectorDown_CLEAR.customer, phCollectorName = AOCollectorDown_CLEAR.phCollectorName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_ACCELOPS_COLLECTOR_DOWN.customer = PH_RULE_ACCELOPS_COLLECTOR_DOWN_CLEAR.customer,
                    PH_RULE_ACCELOPS_COLLECTOR_DOWN.phCollectorName = PH_RULE_ACCELOPS_COLLECTOR_DOWN_CLEAR.phCollectorName 
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AOCollectorDown_CLEAR" name="AOCollectorDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_COLLECTOR_UP" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>customer,phCollectorName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_8" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System License Warning: Max Number of Devices Exceeded License</Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that the system discovered more devices than what license allows.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_MAX_DEVICE_EXCEEDED"  severity="10">
      <ArgList/>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseMaxDevice" name="AOLicenseMaxDevice">
        <SingleEvtConstr> eventType = "PH_MAX_DEVICES_EXCEEDED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_9" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Worker Down</Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that system worker is down.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_WORKER_DOWN"  severity="9">
      <ArgList>
        hostIpAddr = AOWorkerDown.hostIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOWorkerDown" name="AOWorkerDown">
        <SingleEvtConstr> eventType = "PH_WORKER_DOWN" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_ACCELOPS_WORKER_DOWN_CLEAR">
        <ArgList>hostIpAddr = AOWorkerDown_CLEAR.hostIpAddr
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_ACCELOPS_WORKER_DOWN.hostIpAddr = PH_RULE_ACCELOPS_WORKER_DOWN_CLEAR.hostIpAddr
      </ClearConstr>
      <PatternClause window="600">
        <SubPattern displayName="AOWorkerDown_CLEAR" name="AOWorkerDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_WORKER_UP" </SingleEvtConstr>
          <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
          <GroupByAttr>hostIpAddr</GroupByAttr>
        </SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <!-- NEW RULES 3.6.1 -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_10" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archiving Failed</Name>
    <active>true</active>
    <Description> Detects that system failed to archive event database files to offline storage</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVING_FAILED"  severity="10">
      <ArgList>
        phCustId = AOArchiveFailed.phCustId
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchiveFailed" name="AOArchiveFailed">
        <SingleEvtConstr> eventType = "PH_SYSTEM_DISK_ARCHIVING_FAILED" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>phCustId</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,phCustId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_11" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archive Directory Unavailable</Name>
    <active>true</active>
    <Description> Detects that system failed to open archive directory. If the problem is not resolved soon, events from online event database will be purged </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_UNAVAIL"  severity="10">
      <ArgList/>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchiveUnavail" name="AOArchiveUnavail">
        <SingleEvtConstr> eventType = "PH_UNABLE_ACCESS_DIR" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_12" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System EventDB Archiving Completed</Name>
    <active>true</active>
    <Description> Detects that system archived event database files to offline storage</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_EVENTDB_ARCHIVE"  severity="5">
       <ArgList>
        hostIpAddr = AOArchive.reptDevIpAddr,totBytes64 = AOArchive.AVG(totBytes64)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchive" name="AOArchive">
        <SingleEvtConstr> eventType = "PH_SYSTEM_DISK_ARCHIVING_FINISHED" AND totBytes64 &gt; 0</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(totBytes64) &gt; 0 </GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_12B" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System EventDB Purge Completed</Name>
    <active>true</active>
    <Description> Detects that system purged event database files to offline storage</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_EVENTDB_PURGE"  severity="5">
       <ArgList>
        hostIpAddr = AOPurge.reptDevIpAddr,totBytes64 = AOPurge.AVG(totBytes64)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOPurge" name="AOPurge">
        <SingleEvtConstr> eventType = "PH_SYSTEM_DISK_PURGING_FINISHED" AND totBytes64 &gt; 0</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(totBytes64) &gt; 0 </GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_13" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archive Purging Completed - Low Available Space</Name>
    <active>true</active>
    <Description> Detects that system purged archive files since archive space is low. Archive policies may be violated. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_PURGE_COMPLETED_LOW_SPACE"  severity="10">
      <ArgList>
        hostIpAddr = AOArchivePurge.reptDevIpAddr,totBytes64 = AOArchivePurge.AVG(totBytes64)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchivePurge" name="AOArchivePurge">
        <SingleEvtConstr> eventType = "PH_SYSTEM_ARCHIVE_PURGING_LOW_SPACE_FINISHED" AND totBytes64 &gt; 0 </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(totBytes64) &gt; 0 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_14" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archive Purging Completed - Policy Driven</Name>
    <active>true</active>
    <Description> Detects that system purged archive files based on archive policy </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_PURGE_POLICY_COMPLETED"  severity="7">
       <ArgList>
        hostIpAddr = AOArchivePurge.reptDevIpAddr, totBytes64 = AOArchivePurge.AVG(totBytes64)
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchivePurge" name="AOArchivePurge">
        <SingleEvtConstr> eventType = "PH_SYSTEM_ARCHIVE_PURGING_POLICY_FINISHED" AND totBytes64 &gt; 0 </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(totBytes64) &gt; 0 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_15" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archive Purging Failed</Name>
    <active>true</active>
    <Description> Detects that system failed to purge archive files because of internal errors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_PURGE_FAILED"  severity="10">
      <ArgList>
        phCustId = AOArchivePurgeFailed.phCustId
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchivePurgeFailed" name="AOArchivePurgeFailed">
        <SingleEvtConstr> eventType IN ("PH_SYSTEM_ARCHIVE_PURGING_POLICY_FAILED","PH_SYSTEM_ARCHIVE_PURGING_LOW_SPACE_FAILED") </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>phCustId</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>No Events Reported From External Devices In Last Hour</Name>
    <active>false</active>
    <Description> Detects that a reporting device that reported events (logs etc) in the last hour did not report any events this hour. This does not include monitoring events (like CPU, Memory etc). This indicates that there is a problem in the network or at the reporting device. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_DEVICE_NO_EVENTS"  severity="10">
      <ArgList>
        srcIpAddr = AONoEvents.reptDevIpAddr
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONoEvents" name="AONoEvents">
        <SingleEvtConstr> eventType = "PH_SYSTEM_DEVICE_NO_EVENTS" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_SYS_DEVICE_NO_EVENTS_CLEAR">
	<ArgList>
	  srcIpAddr = AONoEvents_CLEAR.reptDevIpAddr
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_SYS_DEVICE_NO_EVENTS.srcIpAddr = PH_RULE_SYS_DEVICE_NO_EVENTS_CLEAR.srcIpAddr
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AONoEvents_CLEAR" name="AONoEvents_CLEAR">
          <SingleEvtConstr> phEventCategory = 3 AND eventType = "PH_SYSTEM_IP_EVENTS_PER_SEC" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 AND AVG(eventsPerSec) &gt; 0 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>     
  </Rule>  

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16B" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Performance Monitoring Error</Name>
    <active>false</active>
    <Description> Detects that the system failed to monitor a performance monitoring metric </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_PERF_MON_ERROR"  severity="7">
      <ArgList>
        hostIpAddr = AOPerfMonErr.hostIpAddr,hostName = AOPerfMonErr.hostName,jobName = AOPerfMonErr.jobName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOPerfMonErr" name="AOPerfMonErr">
        <SingleEvtConstr> eventType = "PH_JOB_STAT" AND (jobStatus = 1 OR jobStatus = 2) AND phEventCategory = 3 </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,jobName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,jobName,jobDesc,jobDetail,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_SYS_PERF_MON_ERROR_CLEAR">
	<ArgList>
	  hostIpAddr = AOPerfMonErr_CLEAR.hostIpAddr,hostName = AOPerfMonErr_CLEAR.hostName,jobName = AOPerfMonErr_CLEAR.jobName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> 
      PH_RULE_SYS_PERF_MON_ERROR.hostName =PH_RULE_SYS_PERF_MON_ERROR_CLEAR.hostName,
      PH_RULE_SYS_PERF_MON_ERROR.hostIpAddr = PH_RULE_SYS_PERF_MON_ERROR_CLEAR.hostIpAddr,
      PH_RULE_SYS_PERF_MON_ERROR.jobName = PH_RULE_SYS_PERF_MON_ERROR_CLEAR.jobName 
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AOPerfMonErr_CLEAR" name="AOPerfMonErr_CLEAR">
          <SingleEvtConstr> eventType = "PH_JOB_STAT" AND (jobStatus = 0 OR jobStatus = 3) AND phEventCategory = 3 </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostName,hostIpAddr,jobName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition> 
  </Rule>  

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16C" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>FortiSIEM Log Relay Not Working - All Devices delayed </Name>
    <active>false</active>
    <Description> Detects that a FortiSIEM system (e.g. Collector, Worker) is not relaying logs for any device. This indicates that the FortiSIEM system has a problem in a specific module or there is a connectivity issue with the FortiSIEM cloud. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NO_LOGS_VIA_AO"  severity="10">
      <ArgList>
        hostName = AONoEvents.relayDevName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONoEvents" name="AONoEvents">
        <SingleEvtConstr> eventType = "PH_DEV_MON_LOG_ALL_DEVICE_DELAY_HIGH" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>relayDevName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,relayDevName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NO_LOGS_VIA_AO_CLEAR">
	<ArgList>
	  hostName = AONoEvents_CLEAR.relayDevName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NO_LOGS_VIA_AO.hostName = PH_RULE_NO_LOGS_VIA_AO_CLEAR.hostName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AONoEvents_CLEAR" name="AONoEvents_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_LOG_ALL_DEVICE_DELAY_LOW" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>relayDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>     
  </Rule>  

 <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16D" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>FortiSIEM Performance Monitoring Relay Not Working - All Devices delayed </Name>
    <active>true</active>
    <Description> Detects that a FortiSIEM system (e.g. Collector, Worker) is not collecting/relaying performance metrics for any device. This indicates that the FortiSIEM system has a problem in a specific module or there is a connectivity issue with the FortiSIEM cloud. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NO_PERFMON_VIA_AO"  severity="10">
      <ArgList>
        hostName = AONoEvents.relayDevName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONoEvents" name="AONoEvents">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERFMON_ALL_DEVICE_DELAY_HIGH" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>relayDevName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,relayDevName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NO_PERFMON_VIA_AO_CLEAR">
	<ArgList>
	  hostName = AONoEvents_CLEAR.relayDevName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NO_PERFMON_VIA_AO.hostName = PH_RULE_NO_PERFMON_VIA_AO_CLEAR.hostName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AONoEvents_CLEAR" name="AONoEvents_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PERFMON_ALL_DEVICE_DELAY_LOW" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>relayDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>     
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16E" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>No logs from a device </Name>
    <active>true</active>
    <Description> Detects that a FortiSIEM has not received a log from a device for a configured period of time. This indicates that (a) the FortiSIEM system has a log collection/delivery problem in a specific module or (b) there is a connectivity issue between the device and FortiSIEM or (c) there is a connectivity problem within the FortiSIEM cloud. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NO_LOGS_FROM_DEVICE"  severity="10">
      <ArgList>
        hostIpAddr = AONoEvents.hostIpAddr
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONoEvents" name="AONoEvents">
        <SingleEvtConstr> eventType = "PH_DEV_MON_LOG_DEVICE_DELAY_HIGH" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,relayDevName,hostName,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NO_LOGS_FROM_DEVICE_CLEAR">
	<ArgList>
	  hostIpAddr = AONoEvents_CLEAR.hostIpAddr
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NO_LOGS_FROM_DEVICE.hostIpAddr = PH_RULE_NO_LOGS_FROM_DEVICE_CLEAR.hostIpAddr
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AONoEvents_CLEAR" name="AONoEvents_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_LOG_DEVICE_DELAY_LOW" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>     
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16F" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>No performance metrics from a device </Name>
    <active>true</active>
    <Description> Detects that a FortiSIEM has not received any performance metric from a device for a configured period of time. This indicates that (a)the FortiSIEM system has a perf monitoring metric collection/delivery problem in a specific module or (b) there is a connectivity issue between the device and FortiSIEM or (c) there is a connectivity problem within the FortiSIEM cloud. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NO_PERFMON_FROM_DEVICE"  severity="10">
      <ArgList>
        hostName = AONoEvents.hostName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONoEvents" name="AONoEvents">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERFMON_DEVICE_DELAY_HIGH" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,relayDevName,hostName,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NO_PERFMON_FROM_DEVICE_CLEAR">
	<ArgList>
	  hostName = AONoEvents_CLEAR.hostName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NO_PERFMON_FROM_DEVICE.hostName = PH_RULE_NO_PERFMON_FROM_DEVICE_CLEAR.hostName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AONoEvents_CLEAR" name="AONoEvents_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PERFMON_DEVICE_DELAY_LOW" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>hostName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>     
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_16G" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Missing specific performance metric from a device </Name>
    <active>true</active>
    <Description> Detects that a FortiSIEM has not received a specific performance metric from a device for a configured period of time. This indicates that (a)the FortiSIEM system has a perf monitoring metric collection/delivery problem in a specific module or (b) there is a connectivity issue between the device and FortiSIEM or (c) there is a connectivity problem within the FortiSIEM cloud. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MISSING_SPECIFIC_PERFMON_FROM_DEVICE"  severity="10">
      <ArgList>
        hostName = AONoEvents.hostName, jobName = AONoEvents.jobName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONoEvents" name="AONoEvents">
        <SingleEvtConstr> eventType = "PH_DEV_MON_PERFMON_JOB_DELAY_HIGH" </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostName,jobName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,relayDevName,hostName,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MISSING_SPECIFIC_PERFMON_FROM_DEVICE_CLEAR">
	<ArgList>
	  hostName = AONoEvents_CLEAR.hostName, jobName = AONoEvents_CLEAR.jobName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr>PH_RULE_MISSING_SPECIFIC_PERFMON_FROM_DEVICE.hostName = PH_RULE_MISSING_SPECIFIC_PERFMON_FROM_DEVICE_CLEAR.hostName, 
	PH_RULE_MISSING_SPECIFIC_PERFMON_FROM_DEVICE.jobName = PH_RULE_MISSING_SPECIFIC_PERFMON_FROM_DEVICE_CLEAR.jobName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AONoEvents_CLEAR" name="AONoEvents_CLEAR">
          <SingleEvtConstr> eventType = "PH_DEV_MON_PERFMON_JOB_DELAY_LOW" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1  </GroupEvtConstr>
	  <GroupByAttr>hostName,jobName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>     
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_17" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Low Available System Archive Space</Name>
    <active>true</active>
    <Description> Detects that low (less than 20GB) available archive space - purging is going to start soon </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_LOW_SPACE"  severity="10">
      <ArgList>
          hostIpAddr = AOArchiveLow.reptDevIpAddr
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchiveLow" name="AOArchiveLow">
        <SingleEvtConstr> eventType = "PH_SYSTEM_ARCHIVE_LOW" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_18" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Incident Notification Error</Name>
    <active>true</active>
    <Description> Detects that system has failed to take notification action on an incident </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_INCIDENT_NOTIF_ERROR"  severity="10">
      <ArgList>
         phCustId = AONotifyErr.phCustId,
	 actionName = AONotifyErr.actionName,
	 policyId = AONotifyErr.policyId,
	 ruleName = AONotifyErr.ruleName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONotifyErr" name="AONotifyErr">
        <SingleEvtConstr> eventType = "PH_INCIDENT_ACTION_STATUS" AND actionResult = "Failed" AND phEventCategory = 3 </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>phCustId,actionName,policyId,ruleName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,actionName,policyId,ruleName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_18B" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Scheduled Report Send Error</Name>
    <active>true</active>
    <Description> Detects that system has failed to deliver a scheduled report </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_REPORT_NOTIF_ERROR"  severity="10">
      <ArgList>
         phCustId = AONotifyErr.phCustId,
	 reportName = AONotifyErr.reportName
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AONotifyErr" name="AONotifyErr">
        <SingleEvtConstr> eventType = "PH_REPORT_ACTION_STATUS" AND actionResult = "Failed" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>phCustId,reportName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reportName,deliveryName,actionResult,actionError,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

 <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_19" phIncidentCategory="Internal" function="PERFORMANCE">
    <Name>Large Worker Input Event Queue </Name>
    <active>true</active>
    <Description> Detects that Worker input event queue is very large (greater than 100MB). This indicates that the workers are falling behind in handling events and cannot keep pace with the rate at which workers are sending events. Consider ading more workers or adding resources to workers. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_LARGE_WORKER_EVENT_QUEUE"  severity="10">
      <ArgList>
         hostName = AOLargeEventQueue.hostName,
	 totBytes = AOLargeEventQueue.AVG(totBytes)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLargeEventQueue" name="AOLargeEventQueue">
        <SingleEvtConstr> eventType = "PH_EVT_HANDLER_EVT_QUEUE_WARNING" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 104857600</GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_20" phIncidentCategory="Internal" function="PERFORMANCE">
    <Name>Large Worker Input SVN Queue </Name>
    <active>true</active>
    <Description> Detects that Worker input SVN queue is very large (greater than 100MB). This indicates that the workers are falling behind in handling SVN files from collectors or from the parser modules. Check the SVN installation. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_LARGE_WORKER_SVN_QUEUE"  severity="10">
      <ArgList>
         hostName = AOLargeSVNQueue.hostName,
	 totBytes = AOLargeSVNQueue.AVG(totBytes)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLargeSVNQueue" name="AOLargeSVNQueue">
        <SingleEvtConstr> eventType = "PH_EVT_HANDLER_SVN_QUEUE_WARNING" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(totBytes) &gt; 104857600</GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_21" phIncidentCategory="Internal" function="PERFORMANCE">
    <Name>Large Supervisor JMS Request Queue </Name>
    <active>true</active>
    <Description> Detects that Supervisor JMS Request queue is very large </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_LARGE_JMS_REQUEST_QUEUE"  severity="10">
      <ArgList>
         hostName = AOLargeJMSRequestQueue.hostName,
	 jmsQueueSize = AOLargeJMSRequestQueue.AVG(jmsQueueSize)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLargeJMSRequestQueue" name="AOLargeJMSRequestQueue">
        <SingleEvtConstr> eventType = "PH_JMS_QUEUE_SIZE_WARNING" AND jmsQueueType = "request" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(jmsQueueSize) &gt; AVG(jmsQueueThreshold) </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,jmsQueueType,jmsQueueType,jmsQueueThreshold,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_22" phIncidentCategory="Internal" function="PERFORMANCE">
    <Name>Large Supervisor JMS System Queue </Name>
    <active>true</active>
    <Description> Detects that Supervisor JMS System queue is very large </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_LARGE_JMS_SYSTEM_QUEUE"  severity="10">
      <ArgList>
         hostName = AOLargeJMSSystemQueue.hostName,
	 jmsQueueSize = AOLargeJMSSystemQueue.AVG(jmsQueueSize)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLargeJMSSystemQueue" name="AOLargeJMSSystemQueue">
        <SingleEvtConstr> eventType = "PH_JMS_QUEUE_SIZE_WARNING" AND jmsQueueType = "system"</SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 AND AVG(jmsQueueSize) &gt; AVG(jmsQueueThreshold) </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,jmsQueueType,jmsQueueSize,jmsQueueThreshold,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_23" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Discovered Device Incorrectly Merged: Overlapping IP</Name>
    <active>true</active>
    <Description> Detects that a discovered device is merged (incorrectly) to an existing CMDB device with different host name because of one or more overlapping IP addresses. To avoid such merging, include the overlapping IP addresses in the list of Virtual IP addresses and rediscover</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEVICE_MERGED_OVERLAP_IP"  severity="9">
      <ArgList>
         hostName = Overlap.hostName,targetHostName = Overlap.targetHostName, overlapIp = Overlap.overlapIp
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="Overlap" name="Overlap">
        <SingleEvtConstr> eventType = "PH_AUDIT_DEVICE_MERGED_BY_IP_WITH_DIFF_NAME" AND phEventCategory = 2 </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>hostName, targetHostName, overlapIp</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,targetHostName, overlapIp, rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_24" phIncidentCategory="Internal" function="AVAILABILITYE">
    <Name>System Collector Event Delayed </Name>
    <active>true</active>
     <Beacon>true</Beacon>
    <Description> Detects that collector has not sent an event to FortiSIEM cloud for more than 10 minutes</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_COLLECTOR_DELAY"  severity="9">
      <ArgList>
        customer = AOCollectorDelay.customer, phCollectorName = AOCollectorDelay.phCollectorName
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOCollectorDelay" name="AOCollectorDelay">
        <SingleEvtConstr> eventType = "PH_COLLECTOR_EVENT_ARRIVAL_DELAYED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer,phCollectorName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,customer,phCollectorName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_ACCELOPS_COLLECTOR_DELAY_CLEAR">
	<ArgList>customer = AOCollectorDelay_CLEAR.customer, phCollectorName = AOCollectorDelay_CLEAR.phCollectorName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_ACCELOPS_COLLECTOR_DELAY.customer = PH_RULE_ACCELOPS_COLLECTOR_DELAY_CLEAR.customer,
                    PH_RULE_ACCELOPS_COLLECTOR_DELAY.phCollectorName = PH_RULE_ACCELOPS_COLLECTOR_DELAY_CLEAR.phCollectorName 
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AOCollectorDelay_CLEAR" name="AOCollectorDelay_CLEAR">
          <SingleEvtConstr> eventType = "PH_COLLECTOR_EVENT_ARRIVAL_OK" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>customer,phCollectorName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition> 
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_25" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>External Event Dropped By License</Name>
    <active>true</active>
    <Description> Detects that an event is lost because of inadequate license</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EVENTS_DROPPED_LICENSE"  severity="9">
      <ArgList>
         phCustId = eventLoss.phCustId,
	 customer = eventLoss.customer,
	 dropLicenseEvents = eventLoss.SUM(dropLicenseEvents)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="eventLoss" name="eventLoss">
        <SingleEvtConstr> phEventCategory = 3 AND eventType = "PH_SYSTEM_EVENTS_POLICY_PER_SEC" </SingleEvtConstr>
        <GroupEvtConstr>SUM(dropLicenseEvents) &gt;= 1 AND COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>phCustId,customer</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,phCustId,customer,incomingEventsPerSec,peakIncomingEventsPerSec,dropLicenseEvents,dropLicenseEventRatio,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_26" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Excessive External Event Dropped By License</Name>
    <active>true</active>
     <Beacon>true</Beacon>
    <Description> Detects that more than 10 percent events are lost because of inadequate license</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_EVENTS_DROPPED_LICENSE"  severity="9">
      <ArgList>
         phCustId = eventLoss.phCustId,
	 customer = eventLoss.customer,
	 dropLicenseEventRatio= eventLoss.AVG(dropLicenseEventRatio)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="eventLoss" name="eventLoss">
        <SingleEvtConstr> phEventCategory = 3 AND eventType = "PH_SYSTEM_EVENTS_POLICY_PER_SEC"  </SingleEvtConstr>
        <GroupEvtConstr>AVG(dropLicenseEventRatio) &gt;= 10 AND COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>phCustId,customer</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,phCustId,customer,incomingEventsPerSec,peakIncomingEventsPerSec,dropLicenseEvents,dropLicenseEventRatio,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_27" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Excessive Clock Skew Between Collector and Supervisor nodes</Name>
    <active>true</active>
     <Beacon>true</Beacon>
    <Description> Detects that more than 2 min clock skew  between collector and super - this will cause real time rules to not trigger for events received from that collector </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_EXCESS_COLLECTOR_CLOCK_SKEW"  severity="9">
      <ArgList>
         phCustId = clockSkew.phCustId,
	 customer = clockSkew.customer,
	 collectorIp = clockSkew.collectorIp,
	 timeSkewSec = clockSkew.AVG(timeSkewSec)
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="clockSkew" name="clockSkew">
        <SingleEvtConstr> phEventCategory = 3 AND eventType = "PH_COLLECTOR_CLOCK_SKEW"  </SingleEvtConstr>
        <GroupEvtConstr>AVG(timeSkewSec) &gt;= 120 AND COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>phCustId,customer,collectorIp</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,phCustId,customer,collectorIp,collectorTime,superTime,timeSkewSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_28" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>FortiSIEM Report Server license about to expire </Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that FortiSIEM Report Server license is about to expire in 7 days</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_RS_LICENSE_TO_EXPIRE" severity="8">
      <ArgList>
	hostIpAddr = AOLicenseExpiry.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseExpiry" name="AOLicenseExpiry">
        <SingleEvtConstr> eventType = "PH_AUDIT_REPORT_SERVER_LICENSE_TO_EXPIRE" AND daysToAccountExpiry &lt; 7</SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_29" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>FortiSIEM Report Server license expired </Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that FortiSIEM Report Server license expired</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_RS_LICENSE_EXPIRED" severity="10">
      <ArgList>
	hostIpAddr = AOLicenseExpiry.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseExpiry" name="AOLicenseExpiry">
        <SingleEvtConstr> eventType = "PH_AUDIT_REPORT_SERVER_LICENSE_EXPIRED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_30" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>FortiSIEM Report Server Removed After License Expiry</Name>
    <active>true</active>
    <Description>FortiSIEM Report Server removed from CMDB after license grace period expired</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_RS_LICENSE_REMOVED" severity="10">
      <ArgList>
	hostIpAddr = AOLicenseExpiry.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseExpiry" name="AOLicenseExpiry">
        <SingleEvtConstr> eventType = "PH_AUDIT_REPORT_SERVER_LICENSE_EXPIRED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps,PH_SYS_RULE_Beaconing_Customer" id="PH_Rule_Avail_PH_31" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Report Server Down</Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that Report Server is down.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_RPT_SVR_DOWN"  severity="9">
      <ArgList> hostIpAddr = AORptServerDown.hostIpAddr </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AORptServerDown" name="AORptServerDown">
        <SingleEvtConstr> eventType = "PH_REPORT_SERVER_DOWN" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_ACCELOPS_RPT_SVR_DOWN_CLEAR">
	<ArgList>hostIpAddr = AORptServerDown_CLEAR.hostIpAddr
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_ACCELOPS_RPT_SVR_DOWN.hostIpAddr = PH_RULE_ACCELOPS_RPT_SVR_DOWN_CLEAR.hostIpAddr
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AORptServerDown_CLEAR" name="AORptServerDown_CLEAR">
          <SingleEvtConstr> eventType = "PH_REPORT_SERVER_UP" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>hostIpAddr</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_32" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Performance monitoring jobs deleted by discovery</Name>
    <active>false</active>
    <Description>FortiSIEM discovery procedure removed performance monitoring jobs because credentials became invalid or job execution failed during discovery. Discovery tests whether the jobs can still run using the credentials provided. PING jobs are never removed but all other jobs are removed. Incorrect credentials lead to protocol timeouts which in turn lead to bad performance affecting all other devices.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PERF_MON_JOB_DELETED" severity="7">
      <ArgList>
	hostName = PerfJobRemove.hostName,
	hostIpAddr = PerfJobRemove.hostIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="PerfJobRemove" name="PerfJobRemove">
        <SingleEvtConstr>eventType = "PH_AUDIT_DEV_MON_JOB_STATUS_CHANGE" AND jobStatusType IN ("DiscoveryRemoved", "DiscoveryNotScheduled") </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>customer,hostName,hostIpAddr,jobName,appTransportProto</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,customer,hostName,jobName,appTransportProto,jobStatusType,errReason,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_33" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Performance monitoring jobs not picked up for execution</Name>
    <active>false</active>
    <Description>Performance monitoring jobs not picked up for execution </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PERF_MON_JOB_NOT_STARTED" severity="7">
      <ArgList>
	hostName = PerfJobRemove.hostName,
	hostIpAddr = PerfJobRemove.hostIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="PerfJobRemove" name="PerfJobRemove">
        <SingleEvtConstr>eventType = "PH_AUDIT_DEV_MON_JOB_NOT_STARTED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>hostName, hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,customer,hostName,jobName,appTransportProto,jobStatusType,errReason,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_34" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archive Purging Started - Low Available Space</Name>
    <active>true</active>
    <Description> Detects that system is starting to purge archived event files since space is low. Archive policies may be violated. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_PURGE_STARTED_LOW_SPACE"  severity="10">
      <ArgList>
        hostIpAddr = AOArchivePurge.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchivePurge" name="AOArchivePurge">
        <SingleEvtConstr> eventType = "PH_SYSTEM_ARCHIVE_PURGING_LOW_SPACE_STARTED" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_35" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Archive Purging Started - Policy Driven</Name>
    <active>true</active>
    <Description> Detects that system is starting to purge archived event files based on archived policy definitions. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_ARCHIVE_PURGE_POLICY_STARTED"  severity="5">
      <ArgList>
        hostIpAddr = AOArchivePurge.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOArchivePurge" name="AOArchivePurge">
        <SingleEvtConstr> eventType = "PH_SYSTEM_ARCHIVE_PURGING_POLICY_STARTED" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_36" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Device License Exceeded - Device Not Added To CMDB</Name>
    <active>true</active>
    <Beacon>true</Beacon>
    <Description> Detects that a discovered device is not added to CMDB because of license limitations</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SYS_CMDB_DEVICE_LICENSE_EXCEEDED"  severity="5">
      <ArgList>
        hostName = License.hostName
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="License" name="License">
        <SingleEvtConstr> phEventCategory = 2 AND eventType = "PH_DEVICE_NOT_ADDED" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- beaconing rules  -->
  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_37" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: System Collector Down </Name>
    <active>true</active>
    <Description> Beaconing detects that collector is down.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_ACCELOPS_COLLECTOR_DOWN"  severity="9">
      <ArgList>
        customer = AOCollectorDown.customer, phCollectorName = AOCollectorDown.phCollectorName
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOCollectorDown" name="AOCollectorDown">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_ACCELOPS_COLLECTOR_DOWN" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer,phCollectorName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,customer,phChildCustomer,phCollectorName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_BEACON_ACCELOPS_COLLECTOR_DOWN_CLEAR">
	<ArgList>customer = AOCollectorDown_CLEAR.customer, phCollectorName = AOCollectorDown_CLEAR.phCollectorName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_BEACON_ACCELOPS_COLLECTOR_DOWN.customer = PH_RULE_BEACON_ACCELOPS_COLLECTOR_DOWN_CLEAR.customer,
                    PH_RULE_BEACON_ACCELOPS_COLLECTOR_DOWN.phCollectorName = PH_RULE_BEACON_ACCELOPS_COLLECTOR_DOWN_CLEAR.phCollectorName
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AOCollectorDown_CLEAR" name="AOCollectorDown_CLEAR">
          <SingleEvtConstr> compEventType = "PH_COLLECTOR_UP" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>customer,phCollectorName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition> 
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_38" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: System Collector Event Delayed</Name>
    <active>true</active>
    <Description> Beaconing detects that collector has not sent an event to FortiSIEM cloud for more than 10 minutes</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_ACCELOPS_COLLECTOR_DELAY"  severity="9">
      <ArgList>
        customer = AOCollectorDelay.customer, phCollectorName = AOCollectorDelay.phCollectorName
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOCollectorDelay" name="AOCollectorDelay">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND  compEventType = "PH_RULE_COLLECTOR_EVENT_ARRIVAL_DELAYED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer,phCollectorName</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,customer,phChildCustomer,phCollectorName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_BEACON_ACCELOPS_COLLECTOR_DELAY_CLEAR">
	<ArgList>customer = AOCollectorDelay_CLEAR.customer,phCollectorName = AOCollectorDelay_CLEAR.phCollectorName
        </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_BEACON_ACCELOPS_COLLECTOR_DELAY.customer = PH_RULE_BEACON_ACCELOPS_COLLECTOR_DELAY_CLEAR.customer,
                    PH_RULE_BEACON_ACCELOPS_COLLECTOR_DELAY.phCollectorName = PH_RULE_BEACON_ACCELOPS_COLLECTOR_DELAY_CLEAR.phCollectorName 
      </ClearConstr>
      <PatternClause window="600">
	<SubPattern displayName="AOCollectorDelay_CLEAR" name="AOCollectorDelay_CLEAR">
          <SingleEvtConstr> compEventType = "PH_COLLECTOR_EVENT_ARRIVAL_OK" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>customer,phCollectorName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition> 
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_39" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: FortiSIEM Report Server license about to expire </Name>
    <active>true</active>
    <Description> Detects that FortiSIEM Report Server license is about to expire in 7 days</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_AO_RS_LICENSE_TO_EXPIRE" severity="8">
      <ArgList>
	hostIpAddr = AOLicenseExpiry.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseExpiry" name="AOLicenseExpiry">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_AO_RS_LICENSE_TO_EXPIRE" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_40" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: FortiSIEM Report Server license expired </Name>
    <active>true</active>
    <Description> Detects that FortiSIEM Report Server license expired</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_AO_RS_LICENSE_EXPIRED" severity="10">
      <ArgList>
	hostIpAddr = AOLicenseExpiry.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseExpiry" name="AOLicenseExpiry">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_AO_RS_LICENSE_EXPIRED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_41" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: Excessive Clock Skew Between Collector and Supervisor nodes</Name>
    <active>true</active>
    <Description> Detects that more than 2 min clock skew  between collector and super - this will cause real time rules to not trigger for events received from that collector </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_EXCESS_COLLECTOR_CLOCK_SKEW"  severity="9">
      <ArgList>
	 customer = clockSkew.customer,
	 collectorIp = clockSkew.collectorIp
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="clockSkew" name="clockSkew">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_EXCESS_COLLECTOR_CLOCK_SKEW"  </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
        <GroupByAttr>customer,collectorIp</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,phCustId,customer,collectorIp,timeSkewSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_42" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: License EPS Exceeded: Events Dropped </Name>
    <active>true</active>
    <Description> Detects that more than 10 percent events are lost because of inadequate license</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_EXCESS_EVENTS_DROPPED_LICENSE"  severity="9">
      <ArgList>
	 customer = eventLoss.customer
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="eventLoss" name="eventLoss">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_EVENTS_DROPPED_LICENSE"  </SingleEvtConstr>
        <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,phCustId,customer,incomingEventsPerSec,peakIncomingEventsPerSec,dropLicenseEvents,dropLicenseEventRatio,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_43" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: CMDB Device License Exceeded: Device Not Added to CMDB</Name>
    <active>true</active>
    <Description> Detects that the system discovered more devices than what license allows.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_ACCELOPS_MAX_DEVICE_EXCEEDED"  severity="10">
      <ArgList>
	customer = AOLicenseMaxDevice.customer
      </ArgList> 
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOLicenseMaxDevice" name="AOLicenseMaxDevice">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_SYS_CMDB_DEVICE_LICENSE_EXCEEDED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>customer</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,phCustId,customer,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_44" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: System Worker Down</Name>
    <active>true</active>
    <Description> Detects that system worker is down.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_ACCELOPS_WORKER_DOWN"  severity="9">
      <ArgList>
        customer = AOWorkerDown.customer, hostIpAddr = AOWorkerDown.hostIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOWorkerDown" name="AOWorkerDown">
        <SingleEvtConstr> eventType = "PH_BEACON_INCIDENT" AND compEventType = "PH_RULE_ACCELOPS_WORKER_DOWN" </SingleEvtConstr>
        <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Beaconing_Cloud" id="PH_Rule_Avail_PH_45" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>Beaconing Cloud: System Report Server Down</Name>
    <active>true</active>
    <Description> Detects that Report Server is down.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BEACON_ACCELOPS_RPT_SVR_DOWN"  severity="9">
      <ArgList> customer = AORptServerDown.customer, hostIpAddr = AORptServerDown.hostIpAddr </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AORptServerDown" name="AORptServerDown">
        <SingleEvtConstr> eventType = "PH_RULE_ACCELOPS_RPT_SVR_DOWN" AND compEventType = "PH_REPORT_SERVER_DOWN" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
        <GroupByAttr>customer,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>1200</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_46" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Critical: DataManager event store failed</Name>
    <active>true</active>
    <Description> Detects the datamanager module is unable to create directory in NFS for writing event files even after a few retries. Data will be lost. Please fix NFS issue.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ACCELOPS_DATAMGR_EVENT_STORE_FAILED" severity="10">
      <ArgList>
        hostIpAddr = AOUnableDir.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="AOUnableDir" name="AOUnableDir">
        <SingleEvtConstr> eventType = "PH_UNABLE_CREATE_DIR" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "timebased">
      <QuietPeriod>3600</QuietPeriod>
    </ClearCondition>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Change_PH_47" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>FortiSIEM Windows Agent Operational Error</Name>
    <active>true</active>
    <Description>Detects Windows Servers Operational errors - uninstalls, stopped and non-responsive </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_WIN_AGENT_OP_ERROR" severity="9">
      <ArgList>
        destName = Error.reptDevName, compEventType = Error.eventType
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Error" name="Error">
        <SingleEvtConstr>eventType IN ("AO-WUA-AgentStatus-NonResponsive", "AO-WUA-AgentStatus-Stopped", "AO-WUA-AgentStatus-Uninstalled")  </SingleEvtConstr>
	<GroupByAttr>reptDevName,eventType</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,eventType,diskName,diskType,hwDiskModel,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_48" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Warning: Policy Based Event Retention Error </Name>
    <active>true</active>
    <Description>Detects Policy Based Event Retention Errors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_POL_EVENT_RETEN_ERROR" severity="9">
      <ArgList>
        hostIpAddr = Error.reptDevIpAddr, errReason= Error.errReason
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="Error" name="Error">
        <SingleEvtConstr> eventType = "PH_SYSTEM_RETENTION_POLICY_FAILED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr,errReason</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_49" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Warning: Event Retention Policy Violation </Name>
    <active>true</active>
    <Description>Detects Event Retention Policy Violations </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_POL_EVENT_RETEN_VIOLATION" severity="9">
      <ArgList>
        hostIpAddr = Error.reptDevIpAddr, phCustId = Error.phCustId
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="Error" name="Error">
        <SingleEvtConstr> eventType = "PH_SYSTEM_RETENTION_POLICY_VIOLATED" </SingleEvtConstr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr,phCustId</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

  <!-- ***************************************************** -->
  <Rule group="PH_SYS_RULE_Avail_AccelOps" id="PH_Rule_Avail_PH_50" phIncidentCategory="Internal" function="AVAILABILITY">
    <Name>System Warning: Excessive Data Retention Time </Name>
    <active>true</active>
    <Description>Detects that policy based event retention took more than 6 hours</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_POL_EVENT_RETEN_DELAY" severity="8">
      <ArgList>
        hostIpAddr = Error.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
      <SubPattern displayName="Error" name="Error">
        <SingleEvtConstr> eventType = "PH_SYSTEM_RETENTION_POLICY_EXEC_TIME" </SingleEvtConstr>
	<GroupEvtConstr>(AVG(runTime)/3600000) &gt;= 6 </GroupEvtConstr>
	<GroupByAttr>reptDevIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay> 
  </Rule>

 </Rules>
<Rules>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_1" phIncidentCategory="Application" function = "SECURITY">
    <Name>P2P traffic detected</Name>
    <active>true</active>
    <Description>Network IPS detects P2P traffic </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_P2P_TRAFFIC" severity="7">
      <ArgList>
        srcIpAddr = P2P.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="P2P" name="P2P">
         <SingleEvtConstr> (reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_P2PTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_2" phIncidentCategory="Application" function = "SECURITY">
    <Name>P2P traffic consuming high network bandwidth </Name>
    <active>true</active>
    <Description>Network IPS detected P2P traffic and the source IP is also sending/receiving  excessive traffic exceeding 5MB over a 10 minute window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_P2P_TRAFFIC_HIGH_BW" severity="9">
      <ArgList>
        srcIpAddr = P2P.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="P2P" name="P2P">
         <SingleEvtConstr> (reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_P2PTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr</GroupByAttr>
       </SubPattern>
       <Operator rank="0" type="AND"/>
       <SubPattern displayName="ExcessiveBytes" name="ExcessiveBytes">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic,Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	<GroupByAttr> srcIpAddr </GroupByAttr>
	<GroupEvtConstr> SUM(totBytes) &gt;= 5242880 </GroupEvtConstr>
      </SubPattern>
       <GlobalConstr>P2P.srcIpAddr = ExcessiveBytes.srcIpAddr </GlobalConstr>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,totBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_3" phIncidentCategory="Application" function = "SECURITY">
    <Name>Tunneled traffic detected</Name>
    <active>true</active>
    <Description>Network IPS detects Tunneled traffic </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TUNNEL_TRAFFIC" severity="7">
      <ArgList>
        srcIpAddr = Tunnel.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="Tunnel" name="Tunnel">
         <SingleEvtConstr> (reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_TunnelledTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_4" phIncidentCategory="Application" function = "SECURITY">
    <Name>Inappropriate Website access</Name>
    <active>true</active>
    <Description>Network IPS or Security Gateway or Firewall detects inappropriate website access </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INAPPROPRIATE_WEB_TRAFFIC" severity="7">
      <ArgList>
        srcIpAddr = WebViolation.srcIpAddr, webCategory = WebViolation.webCategory
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="WebViolation" name="WebViolation">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_WebsiteCategoryViolation) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,webCategory </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_4B" phIncidentCategory="Application" function = "SECURITY">
    <Name>Inappropriate Website access: Multiple categories</Name>
    <active>true</active>
    <Description>Detects excessive inappropriate website access from the same source IP address - excessive is defined by (more  than 5 distinct categories in 1 hour </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INAPPROPRIATE_WEB_TRAFFIC_DISTINCT_CAT" severity="9">
      <ArgList>
        srcIpAddr = WebViolation.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="3600">
       <SubPattern displayName="WebViolation" name="WebViolation">
         <SingleEvtConstr> eventType = "PH_RULE_INAPPROPRIATE_WEB_TRAFFIC" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(DISTINCT webCategory) &gt;= 5</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_4C" phIncidentCategory="Application" function = "SECURITY">
    <Name>Inappropriate Website access: High volume</Name>
    <active>true</active>
    <Description>Detects excessive inappropriate website access from the same source IP address - excessive is defined by (more  than 10 attempts in 1 hour </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INAPPROPRIATE_WEB_TRAFFIC_HIGH_VOL" severity="9">
      <ArgList>
        srcIpAddr = WebViolation.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="3600">
       <SubPattern displayName="WebViolation" name="WebViolation">
         <SingleEvtConstr> eventType = "PH_RULE_INAPPROPRIATE_WEB_TRAFFIC" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 10</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_5" phIncidentCategory="Application" function = "SECURITY">
    <Name>IRC traffic detected</Name>
    <active>true</active>
    <Description>Network IPS detects IRC traffic </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_IRC_TRAFFIC" severity="9">
      <ArgList>
        srcIpAddr = IRC.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="IRC" name="IRC">
         <SingleEvtConstr> (reptDevIpAddr IN (Group@PH_SYS_DEVICE_NETWORK_IPS) OR (reptDevIpAddr IN (Group@PH_SYS_APP_NETWORK_IPS) AND eventType CONTAIN "Snort-")) AND  eventType IN (Group@PH_SYS_EVENT_IRCTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_6" phIncidentCategory="Application" function = "SECURITY">
    <Name>Inbound cleartext password usage detected</Name>
    <active>true</active>
    <Description>Detects inbound usage of protocols that use clear text passwords e.g. FTP, Telnet, POP </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CLEARTEXT_PWD_INBOUND" severity="9">
      <ArgList>
        srcIpAddr = Cleartext.srcIpAddr,destIpAddr = Cleartext.destIpAddr,ipProto = Cleartext.ipProto,destIpPort = Cleartext.destIpPort
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="Cleartext" name="Cleartext">
         <SingleEvtConstr> srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpPort IN  (21,23,109,110,143) AND eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic,Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr,ipProto,destIpPort</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_7" phIncidentCategory="Application" function = "SECURITY">
    <Name>Outbound cleartext password usage from non-guest network detected</Name>
    <active>true</active>
    <Description>Detects outbound usage of protocols that use clear text passwords e.g. FTP, Telnet, POP from non-guest network</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_CLEARTEXT_PWD_OUTBOUND" severity="9">
      <ArgList>
        srcIpAddr = Cleartext.srcIpAddr,destIpAddr = Cleartext.destIpAddr,ipProto = Cleartext.ipProto,destIpPort = Cleartext.destIpPort
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="Cleartext" name="Cleartext">
         <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND srcIpAddr NOT IN (Group@PH_SYS_NETWORK_GUEST) AND destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpPort IN  (21,23,109,110,143) AND eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic,Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr,ipProto,destIpPort</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_8" phIncidentCategory="Application" function = "SECURITY">
    <Name>Remote Desktop from Internet </Name>
    <active>true</active>
    <Description>Detects remote desktop from the Internet, which is defined as anything outside the Internal network. Please make sure that the Internal network definition is correct to avoid false positives. Remote desktop is detected from a windows log or from a flow to the RDP port</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INBOUND_REMOTE_DESKTOP" severity="9">
      <ArgList>
        srcIpAddr = RDP.srcIpAddr,destIpAddr = RDP.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="RDP" name="RDP">
         <SingleEvtConstr> srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND ((destIpAddr IN (Group@PH_SYS_DEVICE_WINDOWS_SERVER)  AND winLogonType = 10 AND eventType IN (Group@PH_SYS_EVENT_HostLogonFailure,Group@PH_SYS_EVENT_HostLogonSuccess)) OR (destIpPort = 3389 AND eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic, Group@PH_SYS_EVENT_PermitTraffic))) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,winLogonType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_9" phIncidentCategory="Application" function = "SECURITY">
    <Name>VNC from Internet</Name>
    <active>true</active>
    <Description> Detects VNC from Internet, which is defined as anything outside the Internal network. Please make sure that the Internal network definition is correct to avoid false positives </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_INBOUND_VNC" severity="9">
      <ArgList>
        srcIpAddr = VNC.srcIpAddr,destIpAddr = VNC.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="VNC" name="VNC">
         <SingleEvtConstr> srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND srcIpPort &gt;= 1024 AND ((destIpPort &gt;= 5800 AND destIpPort &lt;= 5820) OR (destIpPort &gt;= 5900 AND destIpPort &lt;= 5920) OR (destIpPort &gt;= 6000 AND destIpPort &lt;= 6020)) AND eventType IN (Group@PH_SYS_EVENT_BiNetflowTraffic, Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_10" phIncidentCategory="Server" function = "SECURITY">
    <Name>Windows Audit Log Cleared</Name>
    <active>true</active>
    <Description> Detects that a user cleared the audit log</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AUDIT_LOG_CLEARED" severity="9">
      <ArgList>
        hostIpAddr = AuditLogCleared.reptDevIpAddr,user = AuditLogCleared.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="AuditLogCleared" name="AuditLogCleared">
         <SingleEvtConstr> eventType IN ("Win-Security-517","Win-Security-1102") AND eventSource IN ("Security", "Microsoft-Windows-Security-Auditing") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_11" phIncidentCategory="Server" function = "SECURITY">
    <Name>Windows Audit Policy Changed</Name>
    <active>true</active>
    <Description> Detects that a user disabled auditing</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AUDIT_DISABLED" severity="9">
      <ArgList>
        hostIpAddr = AuditDisabled.reptDevIpAddr,user = AuditDisabled.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="AuditDisabled" name="AuditDisabled">
         <SingleEvtConstr> eventType IN ("Win-Security-4719","Win-Security-612") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_12" phIncidentCategory="Server" function = "SECURITY">
    <Name>Multiple Accounts Disabled by Administrator</Name>
    <active>true</active>
    <Description> Detects that multiple (more than 3) accounts were disabled by administrator in a short period of time</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MULTI_ACCOUNT_DISABLED" severity="9">
      <ArgList>
        hostIpAddr = AcctDisabled.reptDevIpAddr,user = AcctDisabled.user
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="AcctDisabled" name="AcctDisabled">
         <SingleEvtConstr> eventType IN ("Win-Security-629","Win-Security-4725") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(DISTINCT targetUser) &gt;= 3</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,targetUser,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_13" phIncidentCategory="Network" function = "SECURITY">
    <Name>Layer 2 Switch Port Security Violation</Name>
    <active>true</active>
    <Description> Detects that more than configured number of MAC addresses attempted to connect to the switch port. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_L2_PORT_SEC_VIOLATION" severity="9">
      <ArgList>
        hostIpAddr = PortViolation.reptDevIpAddr,hostMACAddr = PortViolation.hostMACAddr,intfName = PortViolation.intfName 
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="PortViolation" name="PortViolation">
         <SingleEvtConstr> eventType IN ("IOS-PORT_SECURITY-SP-PSECURE_VIOLATION","Cisco-NxOS-PORT_SECURITY-PSECURE_VIOLATION") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostMACAddr,intfName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,user,targetUser,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_14" phIncidentCategory="Network" function = "SECURITY">
    <Name>Rogue or Unsecure AP Detected</Name>
    <active>true</active>
    <Description> Detects a rogue or unsecure AP association attempt </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ROGUE_AP" severity="9">
      <ArgList>
        hostIpAddr = Rogue.reptDevIpAddr,srcMACAddr = Rogue.srcMACAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcMACAddr">
       <WatchList>PH_DYNLIST_WLAN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("Aruba-1053-wlsxUnsecureAPDetected","Aruba-1150-wlsxSuspectUnsecureAPDetected", "Aruba-1103-wlsxStaAssociatedToUnsecureAP","Cisco-WLC-36-bsnRogueAPDetected", "Cisco-WLC-59-bsnRogueAPDetectedOnWiredNetwork", "SonicOS-546") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,srcMACAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcMACAddr,hostName,hostMACAddr,wlanSsid,wlanRadioId,wlanChannelId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_15" phIncidentCategory="Network" function = "SECURITY">
    <Name>Excessive Rogue or Unsecure APs Detected</Name>
    <active>true</active>
    <Description> Detects an excessive number of rogue or unsecure AP association attempts </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ROGUE_AP_EXCESS" severity="9">
      <ArgList>
        hostIpAddr = Rogue.reptDevIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("Cisco-WLC-50-bsnApMaxRogueCountExceeded") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcMACAddr,hostName,hostMACAddr,wlanSsid,wlanRadioId,wlanChannelId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_16" phIncidentCategory="Network" function = "SECURITY">
    <Name>Wireless Host Blacklisted</Name>
    <active>true</active>
    <Description> Detects that a wireless host is blacklisted by WLAN system. It would not be able to communicate until it is removed from the blacklist. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WLAN_HOST_BLACKLISTED" severity="9">
      <ArgList>
        hostIpAddr = Rogue.reptDevIpAddr,srcMACAddr = Rogue.srcMACAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcMACAddr">
       <WatchList>PH_DYNLIST_WLAN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("Cisco-WLC-52-bsnDot11StationBlacklisted","Aruba-1044-wlsxNStationAddedToBlackList") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,srcMACAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcMACAddr,hostName,hostMACAddr,wlanSsid,wlanRadioId,wlanChannelId,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_18" phIncidentCategory="Network" function = "SECURITY">
    <Name>Permitted Blacklisted Source</Name>
    <active>true</active>
    <Description> Detects that a blacklisted source of moderate or higher severity is permitted into the network by Cisco ASA firewall Botnet filter </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ASA_PERMIT_BLACKLIST_SRC" severity="9">
      <ArgList>
         srcIpAddr = Rogue.srcIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("ASA-338001","ASA-338003","ASA-338201") AND threatLevel IN ("moderate", "high", "very-high")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, threatLevel,threatCategory</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName, rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_19" phIncidentCategory="Network" function = "SECURITY">
    <Name>Denied Blacklisted Source</Name>
    <active>true</active>
    <Description> Detects that a blacklisted source of moderate or higher severity is permitted into the network by Cisco ASA Firewall Botnet filter </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ASA_DENY_BLACKLIST_SRC" severity="9">
      <ArgList>
         srcIpAddr = Rogue.srcIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </ArgList>
    </IncidentDef>
     <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("ASA-338005","ASA-338007","ASA-338203") AND threatLevel IN ("moderate", "high", "very-high")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr, threatLevel,threatCategory</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName, rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_20" phIncidentCategory="Network" function = "SECURITY">
    <Name>Permitted Blacklisted Destination</Name>
    <active>true</active>
    <Description> Detects that a blacklisted destination of moderate or higher severity is permitted into the network by Cisco ASA firewall Botnet filter </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ASA_PERMIT_BLACKLIST_DEST" severity="9">
      <ArgList>
         destIpAddr = Rogue.destIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("ASA-338002","ASA-338004","ASA-338202") AND threatLevel IN ("moderate", "high", "very-high")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>destIpAddr, threatLevel,threatCategory</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName, rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_21" phIncidentCategory="Network" function = "SECURITY">
    <Name>Denied Blacklisted Destination</Name>
    <active>true</active>
    <Description> Detects that a blacklisted destination of moderate or higher severity is permitted into the network by Cisco ASA Firewall Botnet filter </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ASA_DENY_BLACKLIST_DEST" severity="9">
      <ArgList>
         destIpAddr = Rogue.destIpAddr,threatLevel = Rogue.threatLevel,threatCategory = Rogue.threatCategory
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="Rogue" name="Rogue">
         <SingleEvtConstr> eventType IN ("ASA-338006","ASA-338008","ASA-338204") AND threatLevel IN ("moderate", "high", "very-high")</SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>destIpAddr, threatLevel,threatCategory</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>eventType,threatLevel,threatCategory,eventAction,srcIpAddr,srcName,destIpAddr,ipProto,destIpPort,srcIntfName,destIntfName, rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_22" phIncidentCategory="Network" function = "SECURITY">
    <Name>Long lasting VPN session</Name>
    <active>true</active>
    <Description> Detects that a VPN lasted for more than 2 days </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_LONG_LASTING_VPN" severity="7">
      <ArgList>
         srcIpAddr = LongVpn.localVpnIpAddr, user=LongVpn.user, userGrp=LongVpn.userGrp
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="LongVpn" name="LongVpn">
         <SingleEvtConstr> eventType ="PH_DEV_MON_CISCO_RAS_VPN_MET" AND tunnelUpTime &gt; 172800 </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>localVpnIpAddr,user,userGrp</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>localVpnIpAddr,ispVpnIpAddr,user,userGrp,tunnelUpTime,rasSessProto,authenMethod,authorMethod,encryptAlgo,authenAlgo,sentBytes,recvBytes,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_23" phIncidentCategory="Network" function = "SECURITY">
    <Name>High throughput VPN session</Name>
    <active>true</active>
    <Description> Detects that a VPN session consistently consuming more than 1 Mbps over a period of 15 minutes </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_XPUT_VPN" severity="7">
      <ArgList>
         srcIpAddr = LongVpn.localVpnIpAddr, user=LongVpn.user, userGrp=LongVpn.userGrp,sentBitsPerSec = LongVpn.AVG(sentBitsPerSec), 
         recvBitsPerSec = LongVpn.AVG(recvBitsPerSec) 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
       <SubPattern displayName="LongVpn" name="LongVpn">
         <SingleEvtConstr> eventType ="PH_DEV_MON_CISCO_RAS_VPN_MET" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 10 AND (AVG(sentBitsPerSec) &gt; 1000000 OR AVG(recvBitsPerSec) &gt; 1000000)</GroupEvtConstr>
	 <GroupByAttr>localVpnIpAddr,user,userGrp</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>localVpnIpAddr,ispVpnIpAddr,user,userGrp,tunnelUpTime,rasSessProto,authenMethod,authorMethod,encryptAlgo,authenAlgo,sentBitsPerSec,recvBitsPerSec,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_24" phIncidentCategory="Application" function = "SECURITY">
    <Name>Outbound Traffic to Unapproved Public DNS Servers</Name>
    <active>false</active>
    <Description>Detects DNS name resolution via uncommon public DNS servers - Google DNS server is excluded - this is a typical violation of corporate policies. To prevent this rule from creating false positives, make sure that the CMDB Group: Approved Public DNS Server is populated according to corporate policies. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PUBLIC_DNS_USAGE" severity="7">
      <ArgList>
        srcIpAddr = PublicDNS.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="PublicDNS" name="PublicDNS">
         <SingleEvtConstr> destIpAddr NOT IN (Group@PH_SYS_NETWORK_PUBLIC_DNS,Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET,Group@PH_SYS_APP_DNS_SERVER) AND destIpPort = 53 AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_25" phIncidentCategory="Application" function = "SECURITY">
    <Name>Default Password Detected by System</Name>
    <active>true</active>
    <Description>Detects a device is discovered with a default credentials</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEFAULT_PWD_AO" severity="7">
      <ArgList>
        hostName=DefCred.hostName,hostIpAddr=DefCred.hostIpAddr,appTransportProto=DefCred.appTransportProto,reptModel=DefCred.reptModel
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostIpAddr">
      <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="DefCred" name="DefCred">
         <SingleEvtConstr> eventType = "PH_AUDIT_DEFAULT_PWD_MATCH" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>hostName,hostIpAddr,appTransportProto,reptModel</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_26" phIncidentCategory="Network" function = "SECURITY">
    <Name>Outbound Traffic to Open Proxies</Name>
    <active>true</active>
    <Description>Detects traffic from inside the corporate network to open proxies. Proxies are used for hiding identity and such, is a typical violation of corporate policies</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TO_OPEN_PROXY" severity="9">
      <ArgList>
        srcIpAddr = OpenProxy.srcIpAddr, destIpAddr = OpenProxy.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="OpenProxy" name="OpenProxy">
         <SingleEvtConstr> destIpAddr IN (Group@PH_SYS_ANON_OPEN_PROXY) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_27" phIncidentCategory="Network" function = "SECURITY">
    <Name>Inbound Traffic from Open Proxies</Name>
    <active>true</active>
    <Description>Detects traffic from open proxies to servers inside the corporate network. Proxies are used for hiding identity and such, is a typical violation of corporate policies</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FROM_OPEN_PROXY" severity="9">
      <ArgList>
        srcIpAddr = OpenProxy.srcIpAddr, destIpAddr = OpenProxy.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="OpenProxy" name="OpenProxy">
         <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_ANON_OPEN_PROXY) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_28" phIncidentCategory="Network" function = "SECURITY">
    <Name>Outbound Traffic to Tor Network</Name>
    <active>true</active>
    <Description>Detects traffic from inside the corporate network to Tor network nodes. Tor Network is used for hiding identity and such, is a typical violation of corporate policies</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TO_TOR_NETWORK" severity="9">
      <ArgList>
        srcIpAddr = Tor.srcIpAddr, destIpAddr = Tor.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="Tor" name="Tor">
         <SingleEvtConstr> destIpAddr IN (Group@PH_SYS_ANON_TOR_NODE) AND srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_29" phIncidentCategory="Network" function = "SECURITY">
    <Name>Inbound Traffic from Tor Network</Name>
    <active>true</active>
    <Description>Detects traffic from Tor network to servers inside the corporate network. Tor network is used for hiding identity and such, is a typical violation of corporate policies</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FROM_TOR_NETWORK" severity="7">
      <ArgList>
        srcIpAddr = Tor.srcIpAddr, destIpAddr = Tor.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="Tor" name="Tor">
         <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_ANON_TOR_NODE) AND destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,destIpAddr</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_30" phIncidentCategory="Application" function = "SECURITY">
    <Name>Blacklist User Agent Match</Name>
    <active>true</active>
    <Description>Detects a match with the list of blacklisted http user agents. Malware, Adware, Spyware etc use uncommon user agents.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MALWARE_USER_AGENT" severity="10">
      <ArgList>
        srcIpAddr = MalwareUA.srcIpAddr, httpUserAgent = MalwareUA.httpUserAgent
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="MalwareUA" name="MalwareUA">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_PermitWebTraffic) AND httpUserAgent REGEXP (Group@PH_SYS_HTTP_UA_BLACKLIST) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>srcIpAddr,httpUserAgent</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,httpUserAgent,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--     -->
  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_31" phIncidentCategory="Application" function = "SECURITY">
    <Name>Blocked File Execution</Name>
    <active>true</active>
    <Description> Detects a file execution being blocked by Bit9</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BLOCKED_FILE_EXEC" severity="8">
      <ArgList>
        hostIpAddr = BlockedFile.hostIpAddr, 
	hostName = BlockedFile.hostName,
	filePath = BlockedFile.filePath,
	fileName = BlockedFile.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="BlockedFile" name="BlockedFile">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_BlockedFileExec) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>hostName,hostIpAddr,filePath,fileName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,filePath,fileName,hashCode,fileThreatLevel,fileTrustLevel,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--     -->
  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_32" phIncidentCategory="Application" function = "SECURITY">
    <Name>Unapproved File Execution</Name>
    <active>true</active>
    <Description> Detects a unapproved file execution by Bit9</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_UNAPPROVED_FILE_EXEC" severity="10">
      <ArgList>
        hostIpAddr = UnapprovedFile.hostIpAddr, 
	hostName = UnapprovedFile.hostName,
	filePath = UnapprovedFile.filePath,
	fileName = UnapprovedFile.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="UnapprovedFile" name="UnapprovedFile">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_UnapprovedFileExec) </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>hostName,hostIpAddr,filePath,fileName</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,filePath,fileName,hashCode,fileThreatLevel,fileTrustLevel,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--     -->
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_PolicyViolation_33" phIncidentCategory="Application" function = "SECURITY">
    <Name>Bit9 Fatal Errors</Name>
    <active>true</active>
    <Description> Detects fatal Bit9 errors</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BIT9_FATAL_ERROR" severity="10">
      <ArgList>
        hostIpAddr = FatalError.reptDevIpAddr,
	compEventType = FatalError.eventType
      </ArgList>
    </IncidentDef> 
    <PatternClause window="600">
       <SubPattern displayName="FatalError" name="FatalError">
         <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Fatal) AND eventType CONTAIN "Bit9-" </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,eventType</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,hostName,hostIpAddr,eventType,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!--     -->
  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_34" phIncidentCategory="Application" function = "SECURITY">
    <Name>Bit9 Agent Uninstalled or File Tracking Disabled</Name>
    <active>true</active>
    <Description> Detects Bit9 Agent uninstalled or File tracking disabled </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_BIT9_UNINSTALL_OR_DISABLED" severity="10">
      <ArgList>
        hostIpAddr = UnapprovedFile.hostIpAddr, 
	hostName = UnapprovedFile.hostName,
	compEventType = UnapprovedFile.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostIpAddr">
       <WatchList>PH_DYNLIST_POL_VIOLATION_ISSUE</WatchList>
    </DynWatchListDef> 
    <PatternClause window="600">
       <SubPattern displayName="UnapprovedFile" name="UnapprovedFile">
         <SingleEvtConstr> eventType IN ("Bit9-ComputerManagement-Agent-uninstalled", "Bit9-PolicyManagement-Policy-file-tracking-disabled", "Bit9-ServerManagement-File-tracking-disabled") </SingleEvtConstr>
	 <GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>hostName,hostIpAddr,eventType</GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostName,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_PolicyViolation_35" phIncidentCategory="Application" function="SECURITY">
    <Name>Windows Removable Media Inserts</Name>
    <active>true</active>
    <Description>Detects removable media inserts on Windows Servers </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WIN_REM_MEDIA_INSERT" severity="7">
      <ArgList>
        destName = Insert.reptDevName, diskName = Insert.diskName, diskType= Insert.diskType, hwDiskModel= Insert.hwDiskModel
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Insert" name="Insert">
        <SingleEvtConstr>eventType = "AO-WUA-RemovableMedia-Insert" </SingleEvtConstr>
	<GroupByAttr>reptDevName,diskName,diskType,hwDiskModel</GroupByAttr>
	<GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevName,diskName,diskType,hwDiskModel,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_DFSR_1" phIncidentCategory="Application" function="AVAILABILITY"> 
    <Name>Windows File System Replication Down</Name>
    <active>true</active>
    <Description> Detects that Windows File System Replication Service is down </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DFSR_DOWN" severity="10">
      <ArgList>
        reptDevName = DFSRDown.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DFSRDown" name="DFSRDown">
        <SingleEvtConstr> eventType IN ("Win-App-DFSR-1006","Win-App-DFSR-1008") </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_DFSR_DOWN_CLEAR">
	<ArgList>reptDevName = DFSRDown_CLEAR.reptDevName</ArgList>
      </ClearIncidentDef>
      <ClearConstr>PH_RULE_DFSR_DOWN.reptDevName = PH_RULE_DFSR_DOWN_CLEAR.reptDevName </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="DFSRDown_CLEAR" name="DFSRDown_CLEAR">
          <SingleEvtConstr> eventType IN ("Win-App-DFSR-1004","Win-App-DFSR-1004")</SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevName</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_DFSR_2" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Windows File System Replication Sharing violation </Name>
    <active>true</active>
    <Description> Detects that Windows File System Replication service has been repeatedly prevented from replicating a file due to consistent sharing violations encountered on the files or folders </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DFSR_SHARING_VIOLATION" severity="8">
      <ArgList>
        reptDevName = DFSRViol.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DFSRViol" name="DFSRViol">
        <SingleEvtConstr> eventType IN ("Win-App-DFSR-4302","Win-App-DFSR-4304") </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_DFSR_3" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Windows File System Replication Staging quota too small </Name>
    <active>true</active>
    <Description> DFS Replication service failed to clean up old staging files for the replicated folder - the replicated folder might get out of sync </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DFSR_STAGING_QUOTA_TOO_SMALL" severity="8">
      <ArgList>
        reptDevName = DFSRViol.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DFSRViol" name="DFSRViol">
        <SingleEvtConstr> eventType IN ("Win-App-DFSR-4206","Win-App-DFSR-4208") </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_DFSR_4" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Windows File System Replication Service Communication Error </Name>
    <active>true</active>
    <Description> DFS Replication service unable to contact replication peer </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DFSR_COMM_ERROR" severity="8">
      <ArgList>
        reptDevName = DFSRViol.reptDevName
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DFSRViol" name="DFSRViol">
        <SingleEvtConstr> eventType IN ("Win-App-DFSR-5002","Win-App-DFSR-5008","Win-App-DFSR-5012","Win-App-DFSR-5014","Win-App-DFSR-6002","Win-App-DFSR-1722","Win-App-DFSR-6804") </SingleEvtConstr>
	<GroupByAttr>reptDevName</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Avail_App" id="PH_Rule_DFSR_5" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Windows File System Replication Service Fatal Internal Error </Name>
    <active>true</active>
    <Description> DFS Replication service unable to contact replication peer </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DFSR_FATAL_INTERNAL_ERROR" severity="10">
      <ArgList>
        reptDevName = DFSRViol.reptDevName,compEventType=DFSRViol.eventType
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="DFSRViol" name="DFSRViol">
        <SingleEvtConstr> eventType IN ("Win-App-DFSR-2104","Win-App-DFSR-2212","Win-App-DFSR-2213","Win-App-DFSR-5014","Win-App-DFSR-6002","Win-App-DFSR-9110") </SingleEvtConstr>
	<GroupByAttr>reptDevName,eventType</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>

<Rules>
  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_RV_1" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Radvision Gateway Down</Name>
    <active>true</active>
    <Description> Detects that the Radvision gateway is down. Cleared by the up event </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RV_DOWN" severity="9">
      <ArgList>
        hostIpAddr = Down.reptDevIpAddr  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Down" name="Down">
        <SingleEvtConstr> eventType = "RV-powerDown"  </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,msg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_RV_DOWN_CLEAR">
	<ArgList>hostIpAddr = Down_CLEAR.reptDevIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_RV_DOWN.hostIpAddr = PH_RULE_RV_DOWN_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "RV-powerUp"  </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_RV_2" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Radvision ISDN Loss</Name>
    <active>true</active>
    <Description> Detects that loss of Radvision gateway ISDN link. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RV_ISDN_DOWN" severity="9">
      <ArgList>
        hostIpAddr = Down.reptDevIpAddr  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Down" name="Down">
        <SingleEvtConstr> eventType = "RV-lossIsdn" AND eventAction = 0 </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,msg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_RV_ISDN_DOWN_CLEAR">
	<ArgList>hostIpAddr = Down_CLEAR.reptDevIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_RV_ISDN_DOWN.hostIpAddr = PH_RULE_RV_ISDN_DOWN_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "RV-lossIsdn" AND eventAction = 2 </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>
  
   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_RV_3" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Radvision Ethernet Loss</Name>
    <active>true</active>
    <Description> Detects that loss of Radvision gateway Ethernet link. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RV_ETHERNET_DOWN" severity="9">
      <ArgList>
        hostIpAddr = Down.reptDevIpAddr  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Down" name="Down">
        <SingleEvtConstr> eventType = "RV-lossEthernet" AND eventAction = 0 </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,msg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_RV_ETHERNET_DOWN_CLEAR">
	<ArgList>hostIpAddr = Down_CLEAR.reptDevIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_RV_ETHERNET_DOWN.hostIpAddr = PH_RULE_RV_ETHERNET_DOWN_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "RV-lossEthernet" AND eventAction = 2 </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_RV_4" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Radvision call setup issues</Name>
    <active>true</active>
    <Description> Detects call setup problems with peer gateways </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RV_CALL_PROBLEMS" severity="7">
      <ArgList>
        hostIpAddr = Down.reptDevIpAddr, compEventType = Down.eventType  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Down" name="Down">
        <SingleEvtConstr> eventType IN ("RV-peerCallRejected","RV-peerCallRejectedCapacity","RV-peerCallRejectedByAll","RV-peerCallFailedNoPeers", "RV-peerCallRejectedNonPeer","RV-maxHighLevelResMeter") </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr,eventType </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,msg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_RV_5" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Radvision Hardware Removed/Swapped</Name>
    <active>true</active>
    <Description> Detects a card removed from/inserted into chassis under power, or when the gateway enters maintenance mode </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RV_HW_REMOVE" severity="9">
      <ArgList>
        hostIpAddr = Down.reptDevIpAddr  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Down" name="Down">
        <SingleEvtConstr> eventType = "RV-cardExtractHotSwap" AND eventAction = 0 </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,msg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_RV_HW_REMOVE_CLEAR">
	<ArgList>hostIpAddr = Down_CLEAR.reptDevIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_RV_HW_REMOVE.hostIpAddr = PH_RULE_RV_HW_REMOVE_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "RV-cardExtractHotSwap" AND eventAction = 2 </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

  <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_RV_6" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Radvision Corrupt video packets</Name>
    <active>true</active>
    <Description> Detects Corrupt or empty video packets present in the gateway </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_RV_CORRUPT_VIDEO" severity="9">
      <ArgList>
        hostIpAddr = Down.reptDevIpAddr  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="Down" name="Down">
        <SingleEvtConstr> eventType = "RV-badVideo" AND eventAction = 0 </SingleEvtConstr>
	<GroupByAttr> reptDevIpAddr </GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,msg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_RV_CORRUPT_VIDEO_CLEAR">
	<ArgList>hostIpAddr = Down_CLEAR.reptDevIpAddr</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_RV_CORRUPT_VIDEO.hostIpAddr = PH_RULE_RV_CORRUPT_VIDEO_CLEAR.hostIpAddr </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "RV-badVideo" AND eventAction = 2 </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
  </Rule>

</Rules>
<Rules>
  
  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_1B" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase In Permitted Traffic From Host</Name>
    <active>true</active>
    <Description> Detects traffic anomaly from a source. This means that the permitted traffic pattern from the source is statistically anomalous in the following sense: over a 15 minute time window: at least 100 permitted flows from this host and excessive traffic, peers or ports. Excessive traffic is detected from the number of permitted flows from the source and the total exchanged bytes more than three standard deviations away from mean for the current hour. Excessive peers amounts to more than twice the statistical average for the hour. Excessive destination ports amounts to more than five times the statistical average for the hour. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_FROM_SRC" severity="7">
      <ArgList>
        srcIpAddr = StatHighFlowFromSrc.srcIpAddr,
	totFlows = StatHighFlowFromSrc.SUM(totFlows),
	totBytes64 = StatHighFlowFromSrc.SUM(totBytes),
	avgTotFlows = StatHighFlowFromSrc.STAT_AVG(SUM(totFlows):125),
	sdevTotFlows = StatHighFlowFromSrc.STAT_STDDEV(SUM(totFlows):125),
	avgTotBytes = StatHighFlowFromSrc.STAT_AVG(SUM(totBytes):125),
	sdevTotBytes = StatHighFlowFromSrc.STAT_STDDEV(SUM(totBytes):125)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_TRAFFIC_ANOMALY</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
      <SubPattern displayName="StatHighFlowFromSrc" name="StatHighFlowFromSrc">
	<SingleEvtConstr> 
	  eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND 
          reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH) AND 
          (ipProto = 17 OR ipProto = 6) AND 
          srcIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) 
        </SingleEvtConstr>
        <GroupEvtConstr> 
	  SUM(totFlows) &gt;= 100 AND
	  ((SUM(totFlows)-STAT_AVG(SUM(totFlows):125))/STAT_STDDEV(SUM(totFlows):125) &gt;= 3 AND   
          (SUM(totBytes)-STAT_AVG(SUM(totBytes):125))/STAT_STDDEV(SUM(totBytes):125) &gt;= 3 AND 
	  STAT_STDDEV(SUM(totFlows):125) &gt; 0 AND STAT_STDDEV(SUM(totBytes):125)&gt; 0)
        </GroupEvtConstr>
        <GroupByAttr> srcIpAddr </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_2B" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase In Permitted Traffic To Host</Name>
    <active>true</active>
    <Description> Detects traffic anomaly to a destination. This means that the permitted traffic pattern to the destination is statistically anomalous in the following sense: over a 15 minute time window, at least 500 permitted flows and excessive traffic, peers or ports. Excessive traffic is detected from the number of permitted flows destined to this host and total exchanged bytes more than three standard deviations away from mean for the current hour. Excessive peers amounts to more than twice the statistical average for the current hour. Excessive destination ports amounts to more than five times the statistical average for the current hour. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_TO_DEST" severity="7">
      <ArgList>
        destIpAddr = StatHighFlowToDest.destIpAddr,
        totFlows = StatHighFlowToDest.SUM(totFlows),
	totBytes64 = StatHighFlowToDest.SUM(totBytes),
	avgTotFlows = StatHighFlowToDest.STAT_AVG(SUM(totFlows):126),
	sdevTotFlows = StatHighFlowToDest.STAT_STDDEV(SUM(totFlows):126),
	avgTotBytes = StatHighFlowToDest.STAT_AVG(SUM(totBytes):126),
	sdevTotBytes = StatHighFlowToDest.STAT_STDDEV(SUM(totBytes):126)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_TRAFFIC_ANOMALY</WatchList>
    </DynWatchListDef> 
    <PatternClause window="900">
      <SubPattern displayName="StatHighFlowToDest" name="StatHighFlowToDest">
	<SingleEvtConstr> 
	  eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND 
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH) AND 
	  (ipProto = 17 OR ipProto = 6) AND 
	  destIpAddr NOT IN (Group@PH_SYS_APP_ACCELOPS) 
	</SingleEvtConstr>
        <GroupEvtConstr> 
	   SUM(totFlows) &gt;= 500 AND 
	   ((SUM(totFlows)-STAT_AVG(SUM(totFlows):126))/STAT_STDDEV(SUM(totFlows):126) &gt;= 3 AND 
           (SUM(totBytes)-STAT_AVG(SUM(totBytes):126))/STAT_STDDEV(SUM(totBytes):126) &gt;= 3 AND 
	   STAT_STDDEV(SUM(totFlows):126) &gt; 0 AND STAT_STDDEV(SUM(totBytes):126)&gt; 0)
        </GroupEvtConstr>
        <GroupByAttr> destIpAddr </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_4" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase in Firewall Permitted Inbound Traffic To A Specific TCP/UDP port</Name>
    <active>true</active>
    <Description> Detects traffic anomaly on inbound TCP/UDP port usage on a firewall. This means that over a 30 minute time window, the permitted inbound traffic (both number of flows and total bytes) to a specific TCP/UDP port is more than three standard deviations away than the average for the current hour. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_PERMIT_INBOUND_PORT" severity="7">
      <ArgList>
        ipProto = StatHighPort.ipProto,
	destIpPort = StatHighPort.destIpPort,
	totFlows = StatHighPort.SUM(totFlows),
	totBytes64 = StatHighPort.SUM(totBytes),
	avgTotFlows = StatHighPort.STAT_AVG(SUM(totFlows):104),
	sdevTotFlows= StatHighPort.STAT_STDDEV(SUM(totFlows):104),
	avgTotBytes = StatHighPort.STAT_AVG(SUM(totBytes):104),
	sdevTotBytes = StatHighPort.STAT_STDDEV(SUM(totBytes):104)
      </ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="StatHighPort" name="StatHighPort">
	<SingleEvtConstr> 
	  eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND 
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND 
          srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) 
        </SingleEvtConstr>
        <GroupEvtConstr> 
	  (SUM(totFlows)-STAT_AVG(SUM(totFlows):104))/STAT_STDDEV(SUM(totFlows):104) &gt;= 3 AND 
	  (SUM(totBytes)-STAT_AVG(SUM(totBytes):104))/STAT_STDDEV(SUM(totBytes):104) &gt;= 3 AND 
	  STAT_STDDEV(SUM(totFlows):104) &gt; 0 AND 
	  STAT_STDDEV(SUM(totBytes):104) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>destIpPort,ipProto </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_5" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase In Firewall Permitted Outbound Traffic To A Specific TCP/UDP port</Name>
    <active>true</active>
    <Description> Detects traffic anomaly on outbound TCP/UDP port usage. Detects traffic anomaly on outbound TCP/UDP port usage on a firewall. This means that over a 30 minute time window, the permitted outbound traffic (both number of flows and total bytes) to a specific TCP/UDP port is more than 3 standard deviations away than the average for the current hour. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_PERMIT_OUTBOUND_PORT" severity="7">
      <ArgList>
        ipProto = StatHighPort.ipProto,
        destIpPort = StatHighPort.destIpPort,
	totFlows = StatHighPort.SUM(totFlows),
	totBytes64 = StatHighPort.SUM(totBytes),
	avgTotFlows = StatHighPort.STAT_AVG(SUM(totFlows):105),
	sdevTotFlows= StatHighPort.STAT_STDDEV(SUM(totFlows):105),
	avgTotBytes = StatHighPort.STAT_AVG(SUM(totBytes):105),
	sdevTotBytes = StatHighPort.STAT_STDDEV(SUM(totBytes):105)
      </ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="StatHighPort" name="StatHighPort">
	<SingleEvtConstr> 
	  eventType IN (Group@PH_SYS_EVENT_PermitTraffic) AND 
          reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND 
          srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) 
        </SingleEvtConstr>
        <GroupEvtConstr> 
	  (SUM(totFlows)-STAT_AVG(SUM(totFlows):105))/STAT_STDDEV(SUM(totFlows):105) &gt;= 3 AND 
          (SUM(totBytes)-STAT_AVG(SUM(totBytes):105))/STAT_STDDEV(SUM(totBytes):105) &gt;= 3 AND 
	  STAT_STDDEV(SUM(totFlows):105) &gt; 0 AND 
	  STAT_STDDEV(SUM(totBytes):105) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>destIpPort,ipProto</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_6" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase In Firewall Denied Inbound Traffic To A Specific TCP/UDP port</Name>
    <active>true</active>
    <Description> Detects anomalous denied inbound traffic profile on a specific TCP/UDP port - over a 30 minute window, both the total number of denies and the number of unique source IP addresses are at least 3 standard deviations away from the mean for the current hour </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_DENIED_INBOUND_PORT" severity="7">
      <ArgList>
        ipProto = StatHighPort.ipProto,
        destIpPort = StatHighPort.destIpPort,
        totEventCount = StatHighPort.COUNT(*),
        avgTotFlows =StatHighPort.STAT_AVG(COUNT(*):106),
        sdevTotFlows=StatHighPort.STAT_STDDEV(COUNT(*):106)
      </ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="StatHighPort" name="StatHighPort">
	<SingleEvtConstr> 
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND 
	  eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND 
	  srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) 
	</SingleEvtConstr>
        <GroupEvtConstr> 
	  (COUNT(*)-STAT_AVG(COUNT(*):106))/STAT_STDDEV(COUNT(*):106) &gt;= 3  AND
	  STAT_STDDEV(COUNT(*):106) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>destIpPort,ipProto </GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_7" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase In Firewall Denied Outbound Traffic To A Specific TCP/UDP port</Name>
    <active>true</active>
    <Description>Detects anomalous denied outbound traffic profile on a specific TCP/UDP port - over a 30 minute window, both the total number of denies or the number of unique destination IP addresses are at least 3 standard deviations away from the mean for the current hour</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_DENIED_OUTBOUND_PORT" severity="7">
      <ArgList>
        ipProto = StatHighPort.ipProto,
        destIpPort = StatHighPort.destIpPort,
        totEventCount = StatHighPort.COUNT(*),
        avgTotFlows =StatHighPort.STAT_AVG(COUNT(*):107),
        sdevTotFlows=StatHighPort.STAT_STDDEV(COUNT(*):107)
      </ArgList>
   </IncidentDef>
   <PatternClause window="1800">
      <SubPattern displayName="StatHighPort" name="StatHighPort">
	<SingleEvtConstr> 
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND 
	  eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND 
	  srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) 
	</SingleEvtConstr>
        <GroupEvtConstr> 
	  (COUNT(*)-STAT_AVG(COUNT(*):107))/STAT_STDDEV(COUNT(*):107) &gt;= 3  AND
	  STAT_STDDEV(COUNT(*):107) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>destIpPort,ipProto </GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,srcDestTCPFlags,reptDevIpAddr,rawEventMsg </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_9" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase in Network Interface Traffic</Name>
    <active>true</active>
    <Description>Detects anomaly in aggregate traffic on a router/switch port. Over a 30 minute window, both the total sent bytes or the total received bytes are more than 3 standard deviations away from the mean for the current hour </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_TRAFFIC_NET_INTF" severity="7">
      <ArgList>
	hostName = NetIntfUsage.hostName,
        hostIpAddr = NetIntfUsage.hostIpAddr,
	intfName = NetIntfUsage.intfName,
	sentBytes64 = NetIntfUsage.SUM(sentBytes64),
	recvBytes64 = NetIntfUsage.SUM(recvBytes64),
	avgSentBytes = NetIntfUsage.STAT_AVG(SUM(sentBytes64):110),
	avgRecvBytes = NetIntfUsage.STAT_AVG(SUM(recvBytes64):110),
	sdevSentBytes = NetIntfUsage.STAT_STDDEV(SUM(sentBytes64):110),
	sdevRecvBytes = NetIntfUsage.STAT_STDDEV(SUM(recvBytes64):110)
      </ArgList>
   </IncidentDef>
   <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="NetIntfUsage" name="NetIntfUsage">
	<SingleEvtConstr> eventType = "PH_DEV_MON_NET_INTF_UTIL" </SingleEvtConstr>
        <GroupEvtConstr> 
	  (SUM(sentBytes64)-STAT_AVG(SUM(sentBytes64):110))/STAT_STDDEV(SUM(sentBytes64):110) &gt;= 3 AND
	  (SUM(recvBytes64)-STAT_AVG(SUM(recvBytes64):110))/STAT_STDDEV(SUM(recvBytes64):110) &gt;= 3  AND 
	  STAT_STDDEV(SUM(sentBytes64):110) &gt; 0 AND 
	  STAT_STDDEV(SUM(recvBytes64):110) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,intfName </GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,intfName,intfAlias,sentBytes64,recvBytes64,totBytes64 </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_10" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase in Network Interface Errors</Name>
    <active>true</active>
    <Description> Detects anomaly in interface errors seen on a router/switch port. Over a 30 minute window, either the total inbound or outbound interface errored packets or discarded packets is more than 3 standard deviations away from the mean. To detect significant issues, the average packet error or discarded packet error is more than 1 percent. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_ERROR_NET_INTF" severity="7">
      <ArgList>
	hostName = NetIntfError.hostName,
        hostIpAddr = NetIntfError.hostIpAddr,
	intfName = NetIntfError.intfName,
	inIntfPktErr = NetIntfError.SUM(inIntfPktErr),
	outIntfPktErr = NetIntfError.SUM(outIntfPktErr), 
	inIntfPktDiscarded = NetIntfError.SUM(inIntfPktDiscarded),
	outIntfPktDiscarded = NetIntfError.SUM(outIntfPktDiscarded),
        inIntfPktErrPct = NetIntfError.AVG(inIntfPktErrPct),
	outIntfPktErrPct = NetIntfError.AVG(outIntfPktErrPct),
	inIntfPktDiscardedPct = NetIntfError.AVG(inIntfPktDiscardedPct),
	outIntfPktDiscardedPct = NetIntfError.AVG(outIntfPktDiscardedPct),	
	avgInIntfPktErr = NetIntfError.STAT_AVG(SUM(inIntfPktErr):111),
	avgOutIntfPktErr = NetIntfError.STAT_AVG(SUM(outIntfPktErr):111), 
	avgInIntfPktDiscarded = NetIntfError.STAT_AVG(SUM(inIntfPktDiscarded):111),
	avgOutIntfPktDiscarded = NetIntfError.STAT_AVG(SUM(outIntfPktDiscarded):111)
      </ArgList>
   </IncidentDef>
   <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="NetIntfError" name="NetIntfError">
	<SingleEvtConstr> eventType = "PH_DEV_MON_NET_INTF_UTIL" </SingleEvtConstr>
        <GroupEvtConstr> 
          (AVG(inIntfPktErrPct) &gt;= 1.0 AND STAT_AVG(SUM(inIntfPktErr):111) &gt; 0 AND SUM(inIntfPktErr) &gt;=  2.0 * STAT_AVG(SUM(inIntfPktErr):111)) OR
	  (AVG(outIntfPktErrPct) &gt;= 1.0 AND STAT_AVG(SUM(outIntfPktErr):111) &gt; 0 AND SUM(outIntfPktErr) &gt;= 2.0 * STAT_AVG(SUM(outIntfPktErr):111)) OR 
	  (AVG(inIntfPktDiscardedPct) &gt;= 1.0 AND STAT_AVG(SUM(inIntfPktDiscarded):111) &gt; 0 AND SUM(inIntfPktDiscarded) &gt;= 2.0 * STAT_AVG(SUM(inIntfPktDiscarded):111)) OR
	  (AVG(outIntfPktDiscardedPct) &gt;= 1.0 AND STAT_AVG(SUM(outIntfPktDiscarded):111) &gt; 0 AND SUM(outIntfPktDiscarded) &gt;= 2.0 * STAT_AVG(SUM(outIntfPktDiscarded):111))
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,intfName</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,hostIpAddr,intfName,intfAlias,sentBytes64,recvBytes64,totBytes,inIntfPktErr,outIntfPktErr,inIntfPktDiscarded,outIntfPktDiscarded</AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_11" phIncidentCategory="Network" function="SECURITY">
    <Name> Sudden Increase In Firewall Connections</Name>
    <active>true</active>
    <Description> Detects sudden increase in permitted firewall connections. Over a 30 minute window, the current firewall connections is more than 3 standard deviations away from the mean.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_FW_CONN" severity="7">
      <ArgList>
	hostName = StatHighConn.hostName,
        hostIpAddr = StatHighConn.hostIpAddr,
        fwConnCount = StatHighConn.AVG(fwConnCount),
	avgFwConnCount = StatHighConn.STAT_AVG(AVG(fwConnCount):112),
	sdevFwConnCount = StatHighConn.STAT_STDDEV(AVG(fwConnCount):112)
      </ArgList>
    </IncidentDef>
    <PatternClause window="1800">
      <SubPattern displayName="StatHighConn" name="StatHighConn">
	<SingleEvtConstr> eventType = "PH_DEV_MON_FW_CONN_UTIL" 
        </SingleEvtConstr>
        <GroupEvtConstr> 
	  (AVG(fwConnCount)-STAT_AVG(AVG(fwConnCount):112))/STAT_STDDEV(AVG(fwConnCount):112) &gt;= 3  AND 
	  STAT_STDDEV(AVG(fwConnCount):112) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,fwConnCount </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_12" phIncidentCategory="Network" function="SECURITY">
    <Name> Sudden Increase In DNS Requests From A Specific Host</Name>
    <active>true</active>
    <Description> Detects sudden increase in DNS requests from a specific source IP - over a 15 minute period, a particular source IP is either doing excessive DNS requests or resolving excessive distinct names. Excessive DNS requests is defined as at least 100 requests and current count is 3 standard deviations away from mean for the current hour. Excessive Destination names is defined as 50 distinct name resolutions and current count is more than 3 standard deviations away from the mean for the current hour </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_DNS_DEST" severity="7">
      <ArgList>
        srcIpAddr = DNSConn.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
      <WatchList>PH_DYNLIST_TRAFFIC_ANOMALY</WatchList>
    </DynWatchListDef>  
    <PatternClause window="900">
      <SubPattern displayName="DNSConn" name="DNSConn">
	<SingleEvtConstr> destIpPort = 53 AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)
        </SingleEvtConstr>
        <GroupEvtConstr> 
	  (COUNT(*)-STAT_AVG(COUNT(*):113))/STAT_STDDEV(COUNT(*):113) &gt;= 3  AND STAT_STDDEV(COUNT(*):113) &gt; 0 AND COUNT(*) &gt;= 100
        </GroupEvtConstr>
        <GroupByAttr>srcIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList>phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,destName,sentBytes,recvBytes,totBytes</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_12B" phIncidentCategory="Network" function="SECURITY">
    <Name> Sudden Change In DNS Data Transfer Pattern From A Specific Host</Name>
    <active>true</active>
    <Description> Detects sudden change in DNS data transfer pattern from a specific IP - over a 15 minute period, either the sent or received bytes is more than 3 standard deviations away from the mean and more than 1 MB of trafic is exchanged in the corresponding direction. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_DNS_TRAFFIC" severity="7">
      <ArgList>
        srcIpAddr = DNSConn.srcIpAddr,
	sentBytes64 = DNSConn.SUM(sentBytes),
	recvBytes64 = DNSConn.SUM(recvBytes),
	avgSentBytes = DNSConn.STAT_AVG(SUM(sentBytes):113),
	avgRecvBytes = DNSConn.STAT_AVG(SUM(recvBytes):113),
	sdevSentBytes = DNSConn.STAT_STDDEV(SUM(sentBytes):113),
	sdevRecvBytes = DNSConn.STAT_STDDEV(SUM(recvBytes):113)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
      <WatchList>PH_DYNLIST_TRAFFIC_ANOMALY</WatchList>
    </DynWatchListDef>  
    <PatternClause window="900">
      <SubPattern displayName="DNSConn" name="DNSConn">
	<SingleEvtConstr> destIpPort = 53 AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic)
        </SingleEvtConstr>
        <GroupEvtConstr> 
	  ((SUM(sentBytes)-STAT_AVG(SUM(sentBytes):113))/STAT_STDDEV(SUM(sentBytes):113) &gt;= 3 AND STAT_STDDEV(SUM(sentBytes):113) &gt; 0 AND SUM(sentBytes) &gt;= 1048576) OR
	  ((SUM(recvBytes)-STAT_AVG(SUM(recvBytes):113))/STAT_STDDEV(SUM(recvBytes):113) &gt;= 3 AND STAT_STDDEV(SUM(recvBytes):113) &gt; 0 AND SUM(recvBytes) &gt;= 1048576)                
        </GroupEvtConstr>
        <GroupByAttr>srcIpAddr</GroupByAttr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,destName,sentBytes,recvBytes</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_13" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Sudden Increase In System CPU Usage</Name>
    <active>true</active>
    <Description> Detects sudden increase in CPU usage - current average over 30 minute interval is more than 3 standard deviations away from the mean and the current average is at least 50 percent </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_CPU_USAGE" severity="7">
      <ArgList>
	hostName = StatResource.hostName,
        hostIpAddr = StatResource.hostIpAddr,
	cpuUtil = StatResource.AVG(cpuUtil),
	avgCpuUtil = StatResource.STAT_AVG(AVG(cpuUtil):109),
	sdevCpuUtil = StatResource.STAT_STDDEV(AVG(cpuUtil):109)
      </ArgList>
   </IncidentDef>
   <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
   </DynWatchListDef>   
   <PatternClause window="1800">
      <SubPattern displayName="StatResource" name="StatResource">
	<SingleEvtConstr> eventType = "PH_DEV_MON_SYS_CPU_UTIL" </SingleEvtConstr>
        <GroupEvtConstr> (AVG(cpuUtil)-STAT_AVG(AVG(cpuUtil):109))/STAT_STDDEV(AVG(cpuUtil):109) &gt;= 3 AND AVG(cpuUtil) &gt;= 50 AND COUNT(*) &gt;= 3 AND STAT_STDDEV(AVG(cpuUtil):109) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,cpuUtil,rawEventMsg </AttrList>
   </TriggerEventDisplay>
  </Rule>
  
  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_14" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Sudden Increase in System Memory Usage</Name>
    <active>true</active>
    <Description> Detects a sudden increase in system memory usage - over a 30 minute interval, either the physical or virtual memory is 25% more than the statistical average over that same time period and the current physical memory usage is at least 50% </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_MEM_USAGE" severity="7">
      <ArgList>
	hostName = StatResource.hostName,
        hostIpAddr = StatResource.hostIpAddr,
	memUtil = StatResource.AVG(memUtil),
	virtMemUtil = StatResource.AVG(virtMemUtil),
	avgMemUtil = StatResource.STAT_AVG(AVG(memUtil):109),
	avgVirtMemUtil = StatResource.STAT_AVG(AVG(virtMemUtil):109)
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="StatResource" name="StatResource">
	<SingleEvtConstr> eventType = "PH_DEV_MON_SYS_MEM_UTIL" </SingleEvtConstr>
        <GroupEvtConstr> 
	  ((AVG(memUtil) &gt;= 1.25 * STAT_AVG(AVG(memUtil):109) AND  AVG(memUtil) &gt;= 50) OR 
	  (AVG(virtMemUtil) &gt;= 1.25 * STAT_AVG(AVG(virtMemUtil):109) AND  AVG(virtMemUtil) &gt;= 65)) AND COUNT(*) &gt;= 3
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,memUtil,virtMemUtil,rawEventMsg </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_15" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Sudden Increase in Disk I/O </Name>
    <active>true</active>
    <Description> Detects anomaly in disk I/O usage for servers, VMs and ESX hosts - over a 30 minute interval, either the read or write volume is more than 3 standard deviations away from the mean over that same time period and the read/write volume is at least 1 Mbps </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_DISKIO_USAGE" severity="7">
      <ArgList>
	hostName = StatResource.hostName,
        hostIpAddr = StatResource.hostIpAddr,
	diskName = StatResource.diskName,
	datastore = StatResource.datastore,
	diskReadKBytesPerSec = StatResource.AVG(diskReadKBytesPerSec),
	diskWriteKBytesPerSec = StatResource.AVG(diskWriteKBytesPerSec),
	avgDiskReadKBytesPerSec = StatResource.STAT_AVG(AVG(diskReadKBytesPerSec):121),
	avgDiskWriteKBytesPerSec = StatResource.STAT_AVG(AVG(diskWriteKBytesPerSec):121),
	sdevDiskReadKBytesPerSec = StatResource.STAT_STDDEV(AVG(diskReadKBytesPerSec):121),
	sdevDiskWriteKBytesPerSec = StatResource.STAT_STDDEV(AVG(diskWriteKBytesPerSec):121)
      </ArgList>
   </IncidentDef>
    <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="StatResource" name="StatResource">
	<SingleEvtConstr> eventType IN ("PH_DEV_MON_DISK_IO_UTIL","PH_DEV_MON_VM_DISK_IO","PH_DEV_MON_ESX_DISK_IO") </SingleEvtConstr>
        <GroupEvtConstr> 
	  ((AVG(diskReadKBytesPerSec)-STAT_AVG(AVG(diskReadKBytesPerSec):121))/STAT_STDDEV(AVG(diskReadKBytesPerSec):121) &gt;= 3 AND STAT_STDDEV(AVG(diskReadKBytesPerSec):121) &gt; 0 AND 
	  AVG(diskReadKBytesPerSec) &gt;= 1048576) OR
	  ((AVG(diskWriteKBytesPerSec)-STAT_AVG(AVG(diskWriteKBytesPerSec):121))/STAT_STDDEV(AVG(diskWriteKBytesPerSec):121) &gt;= 3 AND STAT_STDDEV(AVG(diskWriteKBytesPerSec):121) &gt; 0 AND 
	  AVG(diskWriteKBytesPerSec) &gt;= 1048576)
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr,diskName,datastore</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostIpAddr,diskName,datastore,diskReadKBytesPerSec,diskWriteKBytesPerSec,rawEventMsg </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_17" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Sudden Increase in Reported Events From A Host</Name>
    <active>true</active>
    <Description> Detects that a reporting device is suddenly reporting more events. The current average over a 30 minute time window is more than 3 times the standard deviation and also 50% more than the statistical mean. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_INCREASING_EPS" severity="7">
      <ArgList>
	hostName = Events.reptDevName,
        hostIpAddr = Events.reptDevIpAddr,
	eventsPerSec = Events.AVG(eventsPerSec),
	avgEventsPerSec = Events.STAT_AVG(AVG(eventsPerSec):116),
	sdevEventsPerSec = Events.STAT_STDDEV(AVG(eventsPerSec):116)
      </ArgList>
   </IncidentDef>
   <PatternClause window="1800">
      <SubPattern displayName="Events" name="Events">
	<SingleEvtConstr>
	  phEventCategory = 3 AND 
	  eventType = "PH_SYSTEM_IP_EVENTS_PER_SEC"
	</SingleEvtConstr>
        <GroupEvtConstr> 
	  (AVG(eventsPerSec)-STAT_AVG(AVG(eventsPerSec):116))/STAT_STDDEV(AVG(eventsPerSec):116) &gt;= 3 AND 
	  AVG(eventsPerSec) &gt;= 1.5 * STAT_AVG(AVG(eventsPerSec):116) AND 
	  AVG(eventsPerSec) &gt;= 100 AND STAT_STDDEV(AVG(eventsPerSec):116) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,eventsPerSec,rawEventMsg </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_18" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Sudden Decrease in Reported Events From A Host</Name>
    <active>true</active>
    <Description> Detects that a reporting device is suddenly reporting less events. The current average over the one hour time window is less than 3 times the standard deviation and also 50% less than the statistical mean </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_DECREASING_EPS" severity="7">
      <ArgList>
	hostName = Events.reptDevName,
        hostIpAddr = Events.reptDevIpAddr,
	eventsPerSec = Events.AVG(eventsPerSec),
	avgEventsPerSec = Events.STAT_AVG(AVG(eventsPerSec):116),
	sdevEventsPerSec = Events.STAT_STDDEV(AVG(eventsPerSec):116)
      </ArgList>
   </IncidentDef>
   <PatternClause window="600">
      <SubPattern displayName="Events" name="Events">
	<SingleEvtConstr>
	  phEventCategory = 3 AND 
	  eventType = "PH_SYSTEM_IP_EVENTS_PER_SEC"
	</SingleEvtConstr>
        <GroupEvtConstr> 
	  (AVG(eventsPerSec)-STAT_AVG(AVG(eventsPerSec):116))/STAT_STDDEV(AVG(eventsPerSec):116) &lt;= -3 AND 
	  AVG(eventsPerSec) &lt;= 0.5 * STAT_AVG(AVG(eventsPerSec):116) AND 
	  STAT_STDDEV(AVG(eventsPerSec):116) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,eventsPerSec,rawEventMsg </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_19" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase in Outbound Firewall Aggregate Denies </Name>
    <active>true</active>
    <Description> Detects that a firewall is seeing a sudden increase in outbound denied traffic - over a 30 minute window, either the number of denied flows or the number of distinct denied source ip addresses is more than 3 standard deviations away from the mean </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_OUTBOUND_AGGR_DENY" severity="7">
      <ArgList>
	hostName = Denies.reptDevName,
        hostIpAddr = Denies.reptDevIpAddr,
	totFlows = Denies.COUNT(*),
	avgTotFlows = Denies.STAT_AVG(COUNT(*):108),
	sdevTotFlows = Denies.STAT_STDDEV(COUNT(*):108)
      </ArgList>
   </IncidentDef>
   <PatternClause window="1800">
      <SubPattern displayName="Denies" name="Denies">
	<SingleEvtConstr>
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND 
	  eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND 
	  srcIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND 
	  destIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) 
	</SingleEvtConstr>
        <GroupEvtConstr> 
	  COUNT(*) &gt;= 1000 AND 
	  (COUNT(*)-STAT_AVG(COUNT(*):108))/STAT_STDDEV(COUNT(*):108) &gt;= 3 AND 
	  STAT_STDDEV(COUNT(*):108) &gt; 0
        </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_20" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase in Inbound Firewall Aggregate Denies </Name>
    <active>true</active>
    <Description> Detects that a firewall is seeing a sudden increase inbound denied traffic - over a 30 minute window, either the number of denied flows or the number of distinct denied source ip addresses is more than 3 standard deviations away from the mean </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_INBOUND_AGGR_DENY" severity="7">
      <ArgList>
	hostName = Denies.reptDevName,
        hostIpAddr = Denies.reptDevIpAddr,
	totFlows = Denies.COUNT(*),
	avgTotFlows = Denies.STAT_AVG(COUNT(*):108),
	sdevTotFlows = Denies.STAT_STDDEV(COUNT(*):108)
      </ArgList>
   </IncidentDef>
   <PatternClause window="1800">
      <SubPattern displayName="Denies" name="Denies">
	<SingleEvtConstr>
	  reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND 
	  eventType IN (Group@PH_SYS_EVENT_DenyTraffic) AND 
	  srcIpAddr NOT IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) AND 
	  destIpAddr IN (Group@PH_SYS_NETWORK_ENTERPRISE_INTERNAL_NET) 
	</SingleEvtConstr>
        <GroupEvtConstr> 
	  COUNT(*) &gt;= 1000 AND 
	  (STAT_STDDEV(COUNT(*):108) &gt; 0 AND (COUNT(*)-STAT_AVG(COUNT(*):108))/STAT_STDDEV(COUNT(*):108) &gt;= 3)
        </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Network" id="PH_Rule_Stat_21" phIncidentCategory="Network" function="SECURITY">
    <Name>Sudden Increase in ICMP Requests From A Host</Name>
    <active>true</active>
    <Description> Detects that a host is making excessive ICMP requests - both the volume and the number of distinct destinations is more than twice the statistical average and at least 100 ICMP requests </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_EXCESS_ICMP" severity="7">
      <ArgList>
        srcIpAddr = Icmp.srcIpAddr,
	totFlows = Icmp.COUNT(*),
	avgTotFlows = Icmp.STAT_AVG(COUNT(*):114)
      </ArgList>
   </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
      <WatchList>PH_DYNLIST_TRAFFIC_ANOMALY</WatchList>
    </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="Icmp" name="Icmp">
	<SingleEvtConstr>
	  ipProto = 1 AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL,Group@PH_SYS_DEVICE_ROUTER_SWITCH) 
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 100 AND 
	  COUNT(*) &gt;= 2.0 * STAT_AVG(COUNT(*):114)
        </GroupEvtConstr>
        <GroupByAttr>srcIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,srcIpAddr,destIpAddr,destIpPort </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Stat_22" phIncidentCategory="Server" function="PERFORMANCE">
    <Name>Sudden Increase in Server Process Count </Name>
    <active>true</active>
    <Description> Detects that a server is suddenly running 25% more processes than the average</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_HIGH_PROCESS_COUNT" severity="7">
      <ArgList>
	hostName = Process.hostName,
        hostIpAddr = Process.hostIpAddr,
	procCount = Process.AVG(procCount),
	avgProcCount = Process.STAT_AVG(AVG(procCount):117)
      </ArgList>
   </IncidentDef>
   <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_RESOURCE_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="Process" name="Process">
	<SingleEvtConstr>
	  eventType = "PH_DEV_MON_SYS_PROC_COUNT"
	</SingleEvtConstr>
        <GroupEvtConstr>
	  AVG(procCount) &gt;= 1.25 * STAT_AVG(AVG(procCount):117) AND COUNT(*) &gt;= 3
        </GroupEvtConstr>
        <GroupByAttr>hostName,hostIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,procCount </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Stat_23" phIncidentCategory="Server" function="SECURITY">
    <Name>Sudden Increase in Successful Logons To A Host</Name>
    <active>true</active>
    <Description> Detects a sudden 50% increase of successful logons and 25% more distinct users or 100% more distinct source IP addresses to a particular server - over a 30 minute window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_SUCCESSFUL_LOGON" severity="7">
      <ArgList>
	hostName = Logon.reptDevName,
        hostIpAddr = Logon.reptDevIpAddr,
	count = Logon.COUNT(*),
	avgMatchedEvents = Logon.STAT_AVG(COUNT(*):115)
      </ArgList>
   </IncidentDef>
   <PatternClause window="1800">
      <SubPattern displayName="Logon" name="Logon">
	<SingleEvtConstr>
	  eventType IN (Group@PH_SYS_EVENT_HostLogonSuccess)
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 10 AND 
	  COUNT(*) &gt;= 1.50 * STAT_AVG(COUNT(*):115)
        </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,user </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_Server" id="PH_Rule_Stat_24" phIncidentCategory="Server" function="SECURITY">
    <Name>Sudden Increase in Failed Logons To A Host</Name>
    <active>true</active>
    <Description> Detects a sudden 50% increase of failed logons and 25% more distinct users to a particular host - over a 30 minute window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_FAILED_LOGON" severity="7">
      <ArgList>
	hostName = Logon.reptDevName,
        hostIpAddr = Logon.reptDevIpAddr,
	count = Logon.COUNT(*),
	avgMatchedEvents = Logon.STAT_AVG(COUNT(*):122)
      </ArgList>
   </IncidentDef>
   <PatternClause window="1800">
      <SubPattern displayName="Logon" name="Logon">
	<SingleEvtConstr>
	  eventType IN (Group@PH_SYS_EVENT_HostLogonFailure)
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 10 AND 
	  COUNT(*) &gt;= 1.50 * STAT_AVG(COUNT(*):122)
        </GroupEvtConstr>
        <GroupByAttr>reptDevName,reptDevIpAddr</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevName,reptDevIpAddr,user </AttrList>
   </TriggerEventDisplay>
  </Rule>

  <!-- another complex rule -->
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Stat_25" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Sudden Increase in STM Response Times</Name>
    <active>true</active>
    <Description> Detects a sudden 50% increase of Synthetic Transaction Monitoring Response Times over a 30 minute time window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_STM_RESP_TIME" severity="7">
      <ArgList>
	hostName = STM.hostName,
        endUserMonitorName = STM.endUserMonitorName,
	appResponseTimeMSec = STM.AVG(appResponseTimeMSec),
	avgAppResponseTimeMSec = STM.STAT_AVG(AVG(appResponseTimeMSec):123)
      </ArgList>
   </IncidentDef>
    <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="STM" name="STM">
	<SingleEvtConstr>
	  eventType = "PH_DEV_MON_EUM_SUCCESS" 
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 3 AND 
	  AVG(appResponseTimeMSec) &gt;= 1.50 * STAT_AVG(AVG(appResponseTimeMSec):123) 
        </GroupEvtConstr>
        <GroupByAttr>hostName,endUserMonitorName</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,endUserMonitorName,appResponseTimeMSec</AttrList>
   </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Stat_26" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Sudden Increase in Ping Response Times</Name>
    <active>true</active>
    <Description> Detects a sudden 100% increase of Ping Response Times over a 30 minute time window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_PING_RESP_TIME" severity="7">
      <ArgList>
	hostName = Ping.hostName,
	avgDurationMSec = Ping.AVG(avgDurationMSec),
	avgAvgDurationMSec = Ping.STAT_AVG(AVG(avgDurationMSec):127)
      </ArgList>
   </IncidentDef>
    <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="Ping" name="Ping">
	<SingleEvtConstr>
	  eventType = "PH_DEV_MON_PING_STAT" 
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 3 AND 
	  AVG(avgDurationMSec) &gt;= 50 AND 
	  AVG(avgDurationMSec) &gt;= 2.0 * STAT_AVG(AVG(avgDurationMSec):127) 
        </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,avgDurationMSec,pktLossPct</AttrList>
   </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Stat_27" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Sudden Increase in SNMP Response Times</Name>
    <active>true</active>
    <Description> Detects a sudden 100% increase of SNMP Response Times over a 30 minute time window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_SNMP_RESP_TIME" severity="7">
      <ArgList>
	hostName = SNMP.hostName,
	avgDurationMSec = SNMP.AVG(avgDurationMSec),
	avgAvgDurationMSec = SNMP.STAT_AVG(AVG(avgDurationMSec):128)
      </ArgList>
   </IncidentDef>
    <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="SNMP" name="SNMP">
	<SingleEvtConstr>
	  eventType = "PH_DEV_MON_SNMP_PING_STAT" 
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 3 AND 
	  AVG(avgDurationMSec) &gt;= 50 AND 
	  AVG(avgDurationMSec) &gt;= 2.0 * STAT_AVG(AVG(avgDurationMSec):128) 
        </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,avgDurationMSec,pktLossPct</AttrList>
   </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_Stat_28" phIncidentCategory="Application" function="AVAILABILITY">
    <Name>Sudden Increase in WMI Response Times</Name>
    <active>true</active>
    <Description> Detects a sudden 50% increase of WMI Response Times over a 30 minute time window </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ANOMALY_WMI_RESP_TIME" severity="7">
      <ArgList>
	hostName = WMI.hostName,
	avgDurationMSec = WMI.AVG(avgDurationMSec),
	avgAvgDurationMSec = WMI.STAT_AVG(AVG(avgDurationMSec):129)
      </ArgList>
   </IncidentDef>
    <DynWatchListDef attr="hostName">
     <WatchList>PH_DYNLIST_APPL_ISSUE</WatchList>
   </DynWatchListDef>  
   <PatternClause window="1800">
      <SubPattern displayName="WMI" name="WMI">
	<SingleEvtConstr>
	  eventType = "PH_DEV_MON_WMI_PING_STAT" 
	</SingleEvtConstr>
        <GroupEvtConstr>
	  COUNT(*) &gt;= 3 AND 
	  AVG(avgDurationMSec) &gt;= 100 AND 
	  AVG(avgDurationMSec) &gt;= 1.50 * STAT_AVG(AVG(avgDurationMSec):129) 
        </GroupEvtConstr>
        <GroupByAttr>hostName</GroupByAttr>
      </SubPattern>
   </PatternClause>
   <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,hostName,hostIpAddr,avgDurationMSec,pktLossPct</AttrList>
   </TriggerEventDisplay>
  </Rule>

</Rules>

<Rules>
   <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Trap_1" phIncidentCategory="Storage" function="AVAILABILITY">
    <Name>Critical NetApp Trap (can be auto-cleared)</Name>
    <active>true</active>
    <Description> Detects a high severity trap from NetApp Filers. This trap can be cleared by a corresponding event. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_TRAP_CRIT_CLEARABLE" severity="9">
      <ArgList>
        hostIpAddr = HighSevTrap.reptDevIpAddr, 
	hostName = HighSevTrap.hostName, 
	compEventType = HighSevTrap.eventType, 
	errorNo=HighSevTrap.errorNo 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="HighSevTrap" name="HighSevTrap">
         <SingleEvtConstr> reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "High" AND errorNo IS NOT NULL</SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostName, eventType,errorNo </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NETAPP_TRAP_CRIT_CLEARABLE_CLEAR">
	<ArgList>hostIpAddr = HighSevTrap_CLEAR.reptDevIpAddr,
	  compEventType = HighSevTrap_CLEAR.eventType, 
	  errorNo=HighSevTrap_CLEAR.errorNo 
	</ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NETAPP_TRAP_CRIT_CLEARABLE.hostIpAddr = PH_RULE_NETAPP_TRAP_CRIT_CLEARABLE_CLEAR.hostIpAddr,
	PH_RULE_NETAPP_TRAP_CRIT_CLEARABLE.errorNo = PH_RULE_NETAPP_TRAP_CRIT_CLEARABLE_CLEAR.errorNo 
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="HighSevTrap_CLEAR" name="HighSevTrap_CLEAR">
          <SingleEvtConstr>reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "Low" AND errorNo IS NOT NULL </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,eventType,errorNo</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Trap_2" phIncidentCategory="Storage" function="AVAILABILITY">
       <Name>Warning NetApp Trap (can be auto-cleared) </Name>
       <active>true</active>
    <Description> Detects a medium severity trap from NetApp Filers. This trap can be cleared by a corresponding event. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_TRAP_WARN_CLEARABLE" severity="7">
      <ArgList>
        hostIpAddr = MedSevTrap.reptDevIpAddr, 
	hostName = MedSevTrap.hostName, 
	compEventType = MedSevTrap.eventType,
	errorNo=MedSevTrap.errorNo 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="MedSevTrap" name="MedSevTrap">
         <SingleEvtConstr> reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "Medium" AND errorNo IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostName, eventType,errorNo </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_NETAPP_TRAP_WARN_CLEARABLE_CLEAR">
	<ArgList>hostIpAddr = MedSevTrap_CLEAR.reptDevIpAddr,compEventType = MedSevTrap_CLEAR.eventType, errorNo=MedSevTrap_CLEAR.errorNo </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_NETAPP_TRAP_WARN_CLEARABLE.hostIpAddr = PH_RULE_NETAPP_TRAP_WARN_CLEARABLE_CLEAR.hostIpAddr,
	PH_RULE_NETAPP_TRAP_WARN_CLEARABLE.errorNo = PH_RULE_NETAPP_TRAP_WARN_CLEARABLE_CLEAR.errorNo 
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="MedSevTrap_CLEAR" name="MedSevTrap_CLEAR">
          <SingleEvtConstr>reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "Low" AND errorNo IS NOT NULL </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,eventType,errorNo</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>

   <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Trap_3" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>Critical APC Trap (can be auto-cleared) </Name>
    <active>true</active>
    <Description> Detects a high severity trap from APC devices (UPS, PDUs etc). This trap can be cleared by a corresponding event. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APC_TRAP_CRIT_CLEARABLE" severity="9">
      <ArgList>
        hostIpAddr = HighSevTrap.reptDevIpAddr, 
	hostName = HighSevTrap.hostName, 
	compEventType = HighSevTrap.eventType, 
	errorNo=HighSevTrap.errorNo 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="HighSevTrap" name="HighSevTrap">
         <SingleEvtConstr> reptVendor = "APC" AND eventSeverityCat = "High" AND errorNo IS NOT NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,eventType,errorNo </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_APC_TRAP_CRIT_CLEARABLE_CLEAR">
	<ArgList>hostIpAddr = HighSevTrap_CLEAR.reptDevIpAddr,compEventType = HighSevTrap_CLEAR.eventType, errorNo=HighSevTrap_CLEAR.errorNo </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_APC_TRAP_CRIT_CLEARABLE.hostIpAddr = PH_RULE_APC_TRAP_CRIT_CLEARABLE_CLEAR.hostIpAddr,
	PH_RULE_APC_TRAP_CRIT_CLEARABLE.errorNo = PH_RULE_APC_TRAP_CRIT_CLEARABLE_CLEAR.errorNo 
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="HighSevTrap_CLEAR" name="HighSevTrap_CLEAR">
          <SingleEvtConstr>reptVendor = "APC" AND eventSeverityCat = "Low" AND errorNo IS NOT NULL </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,eventType,errorNo</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>

   <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Trap_4" phIncidentCategory="Environmental" function="AVAILABILITY">
       <Name>Warning APC Trap (can be auto-cleared) </Name>
       <active>true</active>
    <Description> Detects a medium severity trap from APC devices (UPS, PDUs etc).This trap can be cleared by a corresponding event. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APC_TRAP_WARN_CLEARABLE" severity="7">
      <ArgList>
        destIpAddr = MedSevtrap.reptDevIpAddr, 
	hostName = MedSevtrap.hostName, 
	compEventType = MedSevtrap.eventType, 
	errorNo=MedSevtrap.errorNo 
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="MedSevtrap" name="MedSevtrap">
         <SingleEvtConstr> reptVendor = "APC" AND eventSeverityCat = "Medium" AND errorNo IS NOT NULL  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostName, eventType,errorNo </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
    <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_APC_TRAP_WARN_CLEARABLE_CLEAR">
	<ArgList>destIpAddr = MedSevtrap_CLEAR.reptDevIpAddr,compEventType = MedSevtrap_CLEAR.eventType, errorNo=MedSevtrap_CLEAR.errorNo </ArgList>
      </ClearIncidentDef>
      <ClearConstr> PH_RULE_APC_TRAP_WARN_CLEARABLE.destIpAddr = PH_RULE_APC_TRAP_WARN_CLEARABLE_CLEAR.destIpAddr,PH_RULE_APC_TRAP_WARN_CLEARABLE.errorNo = PH_RULE_APC_TRAP_WARN_CLEARABLE_CLEAR.errorNo </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="MedSevtrap_CLEAR" name="MedSevtrap_CLEAR">
          <SingleEvtConstr>reptVendor = "APC" AND eventSeverityCat = "Low" AND errorNo IS NOT NULL  </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr,eventType,errorNo</GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>
  
   <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Trap_5" phIncidentCategory="Storage" function="AVAILABILITY">
    <Name>Critical NetApp Trap </Name>
    <active>true</active>
    <Description> Detects a high severity trap from NetApp Filers  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_TRAP_CRIT" severity="9">
      <ArgList>
        hostIpAddr = HighSevTrap.reptDevIpAddr, hostName = HighSevTrap.hostName, compEventType = HighSevTrap.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="HighSevTrap" name="HighSevTrap">
         <SingleEvtConstr> reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "High" AND errorNo IS NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostName, eventType </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Storage" id="PH_Rule_Trap_6" phIncidentCategory="Storage" function="AVAILABILITY">
       <Name>Warning NetApp Trap </Name>
       <active>true</active>
    <Description> Detects a medium severity trap from NetApp Filers  </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_NETAPP_TRAP_WARN" severity="7">
      <ArgList>
        hostIpAddr = HighSevTrap.reptDevIpAddr, hostName = HighSevTrap.hostName, compEventType = HighSevTrap.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_HW_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="HighSevTrap" name="HighSevTrap">
         <SingleEvtConstr> reptVendor = "NetApp" AND reptModel = "DataONTAP" AND eventSeverityCat = "Medium" AND errorNo IS NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostName, eventType </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Trap_7" phIncidentCategory="Environmental" function="AVAILABILITY">
    <Name>Critical APC Trap </Name>
    <active>true</active>
    <Description> Detects a high severity trap from APC devices (UPS, PDUs etc) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APC_TRAP_CRIT" severity="9">
      <ArgList>
        hostIpAddr = HighSevTrap.reptDevIpAddr, 
	hostName = HighSevTrap.hostName, 
	compEventType = HighSevTrap.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="HighSevTrap" name="HighSevTrap">
         <SingleEvtConstr> reptVendor = "APC" AND eventSeverityCat = "High" AND errorNo IS NULL </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,eventType </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Environ" id="PH_Rule_Trap_8" phIncidentCategory="Environmental" function="AVAILABILITY">
       <Name>Warning APC Trap </Name>
       <active>true</active>
    <Description> Detects a medium severity trap from APC devices (UPS, PDUs etc) </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_APC_TRAP_WARN" severity="7">
      <ArgList>
        destIpAddr = MedSevtrap.reptDevIpAddr, 
	hostName = MedSevtrap.hostName, 
	compEventType = MedSevtrap.eventType
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_ENV_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="MedSevtrap" name="MedSevtrap">
         <SingleEvtConstr> reptVendor = "APC" AND eventSeverityCat = "Medium" AND errorNo IS NULL  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostName, eventType </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_9" phIncidentCategory="Network" function="AVAILABILITY">
     <Name>Meraki Device Down </Name>
     <active>true</active>
     <Description> Detects a Cisco Meraki device is down </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_MERAKI_DEVICE_DOWN" severity="10">
       <ArgList>
         reptDevIpAddr = Down.reptDevIpAddr, 
	 hostName = Down.hostName, 
	 hostMACAddr = Down.hostMACAddr
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "Cisco-Meraki-deviceGoesDownTrap"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,eventType,reptDevIpAddr,hostMACAddr, hostName,rawEventMsg </AttrList>
     </TriggerEventDisplay>
     <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MERAKI_DEVICE_DOWN_CLEAR">
	<ArgList>
	  reptDevIpAddr = Down_CLEAR.reptDevIpAddr, 
	  hostName = Down_CLEAR.hostName, 
	  hostMACAddr = Down_CLEAR.hostMACAddr
	</ArgList>
      </ClearIncidentDef>
      <ClearConstr> 
	PH_RULE_MERAKI_DEVICE_DOWN.reptDevIpAddr = PH_RULE_MERAKI_DEVICE_DOWN_CLEAR.reptDevIpAddr, 
	PH_RULE_MERAKI_DEVICE_DOWN.hostName = PH_RULE_MERAKI_DEVICE_DOWN_CLEAR.hostName, 
	PH_RULE_MERAKI_DEVICE_DOWN.hostMACAddr = PH_RULE_MERAKI_DEVICE_DOWN_CLEAR.hostMACAddr
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "Cisco-Meraki-deviceComesOnline" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>
   
   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_10" phIncidentCategory="Network" function="AVAILABILITY">
     <Name>Meraki Device Cellular Connection Disconnected </Name>
     <active>true</active>
     <Description> Detects a cellular network is disconnected </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_MERAKI_CELLULAR_DISCONNECTED" severity="7">
       <ArgList>
         reptDevIpAddr = Down.reptDevIpAddr, 
	 hostName = Down.hostName, 
	 hostMACAddr = Down.hostMACAddr
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "Cisco-Meraki-cellularNetworkDown"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,eventType,reptDevIpAddr,hostMACAddr, hostName,intfName,rawEventMsg </AttrList>
     </TriggerEventDisplay>
     <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MERAKI_CELLULAR_DISCONNECTED_CLEAR">
	<ArgList> 
	  reptDevIpAddr = Down_CLEAR.reptDevIpAddr, 
	  hostName = Down_CLEAR.hostName, 
	  hostMACAddr = Down_CLEAR.hostMACAddr
	</ArgList>
      </ClearIncidentDef>
      <ClearConstr>
	PH_RULE_MERAKI_CELLULAR_DISCONNECTED.reptDevIpAddr = PH_RULE_MERAKI_CELLULAR_DISCONNECTED_CLEAR.reptDevIpAddr, 
	PH_RULE_MERAKI_CELLULAR_DISCONNECTED.hostName = PH_RULE_MERAKI_CELLULAR_DISCONNECTED_CLEAR.hostName, 
	PH_RULE_MERAKI_CELLULAR_DISCONNECTED.hostMACAddr = PH_RULE_MERAKI_CELLULAR_DISCONNECTED_CLEAR.hostMACAddr
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "Cisco-Meraki-cellularNetworkUp" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_11" phIncidentCategory="Network" function="AVAILABILITY">
     <Name>Meraki Device Interface Down </Name>
     <active>true</active>
     <Description> Detects a Meraki Device interface is down </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_MERAKI_INTF_DOWN" severity="9">
       <ArgList>
         reptDevIpAddr = Down.reptDevIpAddr, 
	 hostName = Down.hostName, 
	 hostMACAddr = Down.hostMACAddr,
	 intfAlias = Down.intfAlias
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "Cisco-Meraki-portDisconnected"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName, intfAlias </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,eventType,reptDevIpAddr,hostMACAddr, hostName,intfAlias,rawEventMsg </AttrList>
     </TriggerEventDisplay>
     <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MERAKI_INTF_DOWN_CLEAR">
	<ArgList>
	  reptDevIpAddr = Down_CLEAR.reptDevIpAddr, 
	  hostName = Down_CLEAR.hostName, 
	  hostMACAddr = Down_CLEAR.hostMACAddr,
	  intfAlias = Down_CLEAR.intfAlias
	</ArgList>
      </ClearIncidentDef>
      <ClearConstr> 
	PH_RULE_MERAKI_INTF_DOWN.reptDevIpAddr = PH_RULE_MERAKI_INTF_DOWN_CLEAR.reptDevIpAddr, 
	PH_RULE_MERAKI_INTF_DOWN.hostName = PH_RULE_MERAKI_INTF_DOWN_CLEAR.hostName, 
	PH_RULE_MERAKI_INTF_DOWN.hostMACAddr = PH_RULE_MERAKI_INTF_DOWN_CLEAR.hostMACAddr,
	PH_RULE_MERAKI_INTF_DOWN.intfAlias = PH_RULE_MERAKI_INTF_DOWN_CLEAR.intfAlias
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "Cisco-Meraki-portConnected" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName, intfAlias </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_12" phIncidentCategory="Network" function="AVAILABILITY">
     <Name>Meraki Device VPN Connectivity Down </Name>
     <active>true</active>
     <Description> Detects a Meraki Device VPN Connectivity is down </Description>
     <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
     <IncidentDef eventType="PH_RULE_MERAKI_VPN_DOWN" severity="9">
       <ArgList>
         reptDevIpAddr = Down.reptDevIpAddr, 
	 hostName = Down.hostName, 
	 hostMACAddr = Down.hostMACAddr,
	 remoteVpnIpAddr = Down.remoteVpnIpAddr
       </ArgList>
     </IncidentDef>
     <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
     </DynWatchListDef>
     <PatternClause window="600">
       <SubPattern displayName="Down" name="Down">
         <SingleEvtConstr> eventType = "Cisco-Meraki-vpnConnectivityChange-down"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName, remoteVpnIpAddr </GroupByAttr>
       </SubPattern>
     </PatternClause>
     <TriggerEventDisplay>
       <AttrList> phRecvTime,eventType,reptDevIpAddr,hostMACAddr, hostName,remoteVpnIpAddr,rawEventMsg </AttrList>
     </TriggerEventDisplay>
     <ClearCondition method="Auto" type = "patternbased">
      <ClearIncidentDef name="PH_RULE_MERAKI_VPN_DOWN_CLEAR">
	<ArgList>
	  reptDevIpAddr = Down_CLEAR.reptDevIpAddr, 
	  hostName = Down_CLEAR.hostName, 
	  hostMACAddr = Down_CLEAR.hostMACAddr,
	  remoteVpnIpAddr = Down_CLEAR.remoteVpnIpAddr
	</ArgList>
      </ClearIncidentDef>
      <ClearConstr>
	PH_RULE_MERAKI_VPN_DOWN.reptDevIpAddr = PH_RULE_MERAKI_VPN_DOWN_CLEAR.reptDevIpAddr, 
	PH_RULE_MERAKI_VPN_DOWN.hostName = PH_RULE_MERAKI_VPN_DOWN_CLEAR.hostName, 
	PH_RULE_MERAKI_VPN_DOWN.hostMACAddr = PH_RULE_MERAKI_VPN_DOWN_CLEAR.hostMACAddr,
	PH_RULE_MERAKI_VPN_DOWN.remoteVpnIpAddr = PH_RULE_MERAKI_VPN_DOWN_CLEAR.remoteVpnIpAddr
      </ClearConstr>
      <PatternClause window="300">
	<SubPattern displayName="Down_CLEAR" name="Down_CLEAR">
          <SingleEvtConstr> eventType = "Cisco-Meraki-vpnConnectivityChange-up" </SingleEvtConstr>
	  <GroupEvtConstr> COUNT(*) &gt;= 1 </GroupEvtConstr>
	  <GroupByAttr>reptDevIpAddr, hostMACAddr, hostName, remoteVpnIpAddr </GroupByAttr>
	</SubPattern>
      </PatternClause>
    </ClearCondition>
   </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_Trap_13" phIncidentCategory="Network" function="SECURITY">
    <Name>Meraki Foreign AP Detected </Name>
    <active>true</active>
    <Description> Meraki detects a foreign Access Point </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_FOREIGN_AP" severity="7">
      <ArgList>
        reptDevIpAddr = ForeignAP.reptDevIpAddr, 
	hostName = ForeignAP.hostName, 
	hostMACAddr = ForeignAP.hostMACAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_WLAN_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="ForeignAP" name="ForeignAP">
         <SingleEvtConstr> eventType = "Cisco-Meraki-foreignAPDetected"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,hostMACAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostMACAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_Trap_14" phIncidentCategory="Network" function="SECURITY">
    <Name>Meraki New DHCP Server </Name>
    <active>true</active>
    <Description> Meraki detects a new DHCP Server </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_NEW_DHCP_SERVER" severity="7">
      <ArgList>
        reptDevIpAddr = NewDHCP.reptDevIpAddr, 
	hostName = NewDHCP.hostName, 
	hostMACAddr = NewDHCP.hostMACAddr,
	hostVLAN = NewDHCP.hostVLAN,
	hostIpAddr = NewDHCP.hostIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="NewDHCP" name="NewDHCP">
         <SingleEvtConstr> eventType = "Cisco-Meraki-newDhcpServerAlert"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,hostMACAddr,hostIpAddr,hostVLAN </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostMACAddr,hostIpAddr,hostVLAN, rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_Trap_15" phIncidentCategory="Network" function="SECURITY">
    <Name>Meraki New Splash User </Name>
    <active>true</active>
    <Description> Meraki detects a new splash user registers to an SSID </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_NEW_SPLASH_USER" severity="7">
      <ArgList>
        reptDevIpAddr = NewUser.reptDevIpAddr, 
	user = NewUser.user, 
	wlanSsid = NewUser.wlanSsid,
	senderMailAddr = NewUser.senderMailAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="NewUser" name="NewUser">
         <SingleEvtConstr> eventType = "Cisco-Meraki-newSplashSignup"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,user,wlanSsid,senderMailAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,user,wlanSsid,senderMailAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_PolicyViolation" id="PH_Rule_Trap_16" phIncidentCategory="Network" function="SECURITY">
    <Name>Meraki Rogue DHCP Server </Name>
    <active>true</active>
    <Description> Meraki detects a rogue DHCP Server </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_ROGUE_DHCP_SERVER" severity="7">
      <ArgList>
        reptDevIpAddr = RogueDHCP.reptDevIpAddr, 
	hostName = RogueDHCP.hostName, 
	hostMACAddr = RogueDHCP.hostMACAddr,
	hostVLAN = RogueDHCP.hostVLAN,
	hostIpAddr = RogueDHCP.hostIpAddr
      </ArgList>
    </IncidentDef>
    <PatternClause window="600">
       <SubPattern displayName="RogueDHCP" name="RogueDHCP">
         <SingleEvtConstr> eventType = "Cisco-Meraki-rogueDhcpServer"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,hostMACAddr,hostIpAddr,hostVLAN </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostMACAddr,hostIpAddr,hostVLAN, rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_17" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Meraki VPN Failover </Name>
    <active>true</active>
    <Description> Meraki detects VPN Failover </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_VPN_FAILOVER" severity="7">
      <ArgList>
        reptDevIpAddr = VPNFailover.reptDevIpAddr, 
	hostName = VPNFailover.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="VPNFailover" name="VPNFailover">
         <SingleEvtConstr> eventType = "Cisco-Meraki-vpnFailoverDetected"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_18" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Meraki Unreachable Device </Name>
    <active>true</active>
    <Description> Meraki detects unreachable devices </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_UNREACHABLE_DEVICES" severity="9">
      <ArgList>
        reptDevIpAddr = UnreachableDev.reptDevIpAddr, 
	hostName = UnreachableDev.hostName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="UnreachableDev" name="UnreachableDev">
         <SingleEvtConstr> eventType = "Cisco-Meraki-unreachableDevicesDetected"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_19" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Meraki Device Port Cable Error </Name>
    <active>true</active>
    <Description> Meraki detects port cable errors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_PORT_CABLE_ERROR" severity="9">
      <ArgList>
        reptDevIpAddr = PortCableError.reptDevIpAddr, 
	hostName = PortCableError.hostName,
	hostMACAddr = PortCableError.hostMACAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="PortCableError" name="PortCableError">
         <SingleEvtConstr> eventType = "Cisco-Meraki-portCableError"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,hostMACAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostMACAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_20" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Meraki Device IP Conflict </Name>
    <active>true</active>
    <Description> Meraki detects IP conflict errors </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_IP_CONFLICT" severity="7">
      <ArgList>
        reptDevIpAddr = IPConflictError.reptDevIpAddr, 
	hostName = IPConflictError.hostName,
	hostMACAddr = IPConflictError.hostMACAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="IPConflictError" name="IPConflictError">
         <SingleEvtConstr> eventType = "Cisco-Meraki-ipConflict"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,hostMACAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostMACAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_21" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Meraki Unreachable RADIUS Server </Name>
    <active>true</active>
    <Description> Meraki detects unreachable RADIUS servers </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_UNREACHABLE_RADIUS_SERVER" severity="9">
      <ArgList>
        reptDevIpAddr = UnreachRadius.reptDevIpAddr, 
	hostName = UnreachRadius.hostName,
	hostIpAddr = UnreachRadius.hostIpAddr,
	authServerIpAddr = UnreachRadius.authServerIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="UnreachRadius" name="UnreachRadius">
         <SingleEvtConstr> eventType = "Cisco-Meraki-ipConflict"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,hostName,hostIpAddr,authServerIpAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostIpAddr,authServerIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

   <Rule group="PH_SYS_RULE_Avail_Network" id="PH_Rule_Trap_22" phIncidentCategory="Network" function="AVAILABILITY">
    <Name>Meraki No DHCP lease </Name>
    <active>true</active>
    <Description> Meraki detects no DHCP lease </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MERAKI_NO_DHCP_LEASE" severity="7">
      <ArgList>
        reptDevIpAddr = NoDHCPLease.reptDevIpAddr, 
	dhcpSubnetAddr = NoDHCPLease.dhcpSubnetAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_AVAIL_ISSUE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
       <SubPattern displayName="NoDHCPLease" name="NoDHCPLease">
         <SingleEvtConstr> eventType = "Cisco-Meraki-noDhcpLeases"  </SingleEvtConstr>
	 <GroupEvtConstr>COUNT (*) &gt;= 1</GroupEvtConstr>
	 <GroupByAttr>reptDevIpAddr,dhcpSubnetAddr </GroupByAttr>
       </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,eventType,reptDevIpAddr,hostName,hostIpAddr,authServerIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
   </Rule>

</Rules>
<Rules>
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_VoIP_1" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Degraded VoIP IPSLA Call Quality</Name>
    <active>true</active>
    <Description> Detects degraded VoIP call quality (mos score between 2.2 and 3.5) from IPSLA entries</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_VOIP_MOS" severity="7">
      <ArgList>
        srcName = MediumCallQuality.srcName, destName = MediumCallQuality.destName, ipSLAProto= MediumCallQuality.ipSLAProto, codec = MediumCallQuality.codec  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="MediumCallQuality" name="MediumCallQuality">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_VOIP_MET" </SingleEvtConstr>
	<GroupByAttr> srcName,destName,ipSLAProto,codec </GroupByAttr>
	<GroupEvtConstr> AVG(mosScore) &gt; 2.2 AND AVG(mosScore) &lt;= 3.5 AND COUNT (*) &gt;= 2 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,srcName,destIpAddr,destName,ipSLAProto,codec,mosScore,icpifScore,avgDurationMSec,avgJitterMs,pktLost,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_VoIP_2" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Poor VoIP IPSLA Call Quality</Name>
    <active>true</active>
    <Description> Detects poor VoIP call quality (mos score less than 2.2) from IPSLA entries </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_POOR_VOIP_MOS" severity="9">
      <ArgList>
        srcName = PoorCallQuality.srcName, destName = PoorCallQuality.destName, ipSLAProto= PoorCallQuality.ipSLAProto, codec = PoorCallQuality.codec  
      </ArgList>
    </IncidentDef>
    <PatternClause window="300">
      <SubPattern displayName="PoorCallQuality" name="PoorCallQuality">
        <SingleEvtConstr> eventType = "PH_DEV_MON_IPSLA_VOIP_MET" </SingleEvtConstr>
	<GroupByAttr> srcName,destName,ipSLAProto,codec </GroupByAttr>
	<GroupEvtConstr> AVG(mosScore) &lt;= 2.2 AND COUNT (*) &gt;= 2 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,srcName,destIpAddr,destName,ipSLAProto,codec,mosScore,icpifScore,avgDurationMSec,avgJitterMs,pktLost,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_VoIP_3" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Degraded VoIP Call Quality</Name>
    <active>true</active>
    <Description> Detects degraded VoIP call quality (mos score between 2.2 and 3.5) from CDR records. Calls originating from VPN Pools are excluded.</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DEGRADED_VOIP_MOS_CDR" severity="7">
      <ArgList> 
	srcIpAddr = DegradedCallQuality.srcIpAddr, mosScore = DegradedCallQuality.AVG(mosScore)
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="DegradedCallQuality" name="DegradedCallQuality">
        <SingleEvtConstr> eventType = "Cisco-CM-CDR" AND mosScore &gt; 2.2 AND mosScore &lt;= 3.5 AND srcIpAddr NOT IN (Group@PH_SYS_VPN_ADDRESS_POOL) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT (*) &gt;= 2 AND AVG(mosScore) &gt; 2.2 AND AVG(mosScore) &lt;= 3.5 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> dateTimeConnect,dateTimeDisconnect,callDuration,srcIpAddr,srcName,callingPartyNumber,destIpAddr,destName,originalCalledPartyNumber,finalCalledPartyNumber,mosScore </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Perf_App" id="PH_Rule_VoIP_4" phIncidentCategory="Network" function="PERFORMANCE">
    <Name>Poor VoIP Call Quality</Name>
    <active>true</active>
    <Description> Detects poor VoIP call quality (mos score less than 2.2) from CDR records. Calls originating from VPN Pools are excluded. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_POOR_VOIP_MOS_CDR" severity="9">
      <ArgList>
	srcIpAddr = PoorCallQuality.srcIpAddr, mosScore = PoorCallQuality.AVG(mosScore)
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="PoorCallQuality" name="PoorCallQuality">
        <SingleEvtConstr> eventType = "Cisco-CM-CDR" AND mosScore &gt; 0 AND srcIpAddr NOT IN (Group@PH_SYS_VPN_ADDRESS_POOL) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr</GroupByAttr>
	<GroupEvtConstr> COUNT(*) &gt;= 2 AND AVG(mosScore) &lt; 2.2  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> dateTimeConnect,dateTimeDisconnect,callDuration,srcIpAddr,srcName,callingPartyNumber,destIpAddr,destName,originalCalledPartyNumber,finalCalledPartyNumber,mosScore </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
<Rules>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_1" phIncidentCategory="Server" function = "SECURITY">
    <Name>Scanner found severe vulnerability</Name>
    <active>true</active>
    <Description>Detects a high severity vulnerability reported by a vulnerability scanner</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_HIGH_SEV_SCANNER" severity="9">
      <ArgList>
        hostName = ScannerHighSev.hostName, vulnName = ScannerHighSev.vulnName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_VULN_SYSTEM</WatchList>
    </DynWatchListDef> 
    <PatternClause window="300">
      <SubPattern displayName="ScannerHighSev" name="ScannerHighSev">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Vulnerability) AND reptVendor IN ("Qualys", "Nessus", "nCircle", "Rapid7", "McAfee", "Tenable","Fortinet") AND eventSeverity &gt;= 8 </SingleEvtConstr>
	<GroupByAttr>hostName,vulnName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> scanEnd,reptVendor,hostName,osType,vulnName,eventSeverity,vulnType,vulnCVEId,vulnBugTraqID,vulnScore,vulnConseq,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_2" phIncidentCategory="Server" function = "SECURITY">
    <Name>Virus found but not remediated</Name>
    <active>true</active>
    <Description>Detects that host anti-virus or content inspection devices found a virus but could not remediate it</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VIRUS_NON_REMEDY" severity="9">
      <ArgList>
        hostIpAddr = VirusFound.hostIpAddr, hostName=VirusFound.computer, virusName = VirusFound.virusName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="VirusFound" name="VirusFound">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Worm_Remedy_Failed) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)  </SingleEvtConstr>
	<GroupByAttr>hostIpAddr,computer,virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,virusName,virusType,fileName,virusAction,virusQuarantStatus,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_3" phIncidentCategory="Server" function = "SECURITY">
    <Name>Spam/Malicious Mail Attachment found but not remediated</Name>
    <active>true</active>
    <Description>Detects that host anti-virus or content inspection devices found a Spam/Malicious Mail Attachment but could not rremediate it. The sender is sending to 5 or more distinct receiver mail addresses </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MAILATTACH_NON_REMEDY" severity="7">
      <ArgList>
	hostIpAddr = AttachFound.hostIpAddr, senderMailAddr = AttachFound.senderMailAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="AttachFound" name="AttachFound">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_MailMalware_Found) </SingleEvtConstr>
	<GroupByAttr>hostIpAddr,senderMailAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT receiverMailAddr) &gt;= 5</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,senderMailAddr,receiverMailAddr,mailSubject,vendor,spamScore,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_4" phIncidentCategory="Server" function = "SECURITY">
    <Name>Spyware found but not remediated</Name>
    <active>true</active>
    <Description>Detects that host anti-virus or content inspection devices found a spyware but could not remediate it</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_SPYWARE_NON_REMEDY" severity="8">
      <ArgList>
        hostIpAddr = SpywareFound.hostIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="SpywareFound" name="SpywareFound">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Spyware_Remedy_Failed) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW) </SingleEvtConstr>
	<GroupByAttr>hostIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,fileName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_5" phIncidentCategory="Server" function = "SECURITY">
    <Name>Virus outbreak</Name>
    <active>true</active>
    <Description>Detects potential virus outbreak - same virus found on three distinct computers/IP addresses </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_VIRUS_OUTBREAK" severity="9">
      <ArgList>
        virusName = VirusOutbreak.virusName
      </ArgList>
    </IncidentDef>
    <PatternClause window="900">
      <SubPattern displayName="VirusOutbreak" name="VirusOutbreak">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Worm_Found) AND reptDevIpAddr IN (Group@PH_SYS_APP_SEC_MGMT,Group@PH_SYS_DEVICE_SEC_GW)  </SingleEvtConstr>
	<GroupByAttr>virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT computer) &gt;= 5 OR COUNT(DISTINCT hostIpAddr) &gt;= 5 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,computer,user,virusName,virusType,fileName,virusAction,virusQuarantStatus,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_6" phIncidentCategory="Network" function = "SECURITY">
    <Name>DNS Traffic to Malware Domains</Name>
    <active>true</active>
    <Description>Detects DNS traffic to malware domains </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DNS_MALWARE_DOMAIN" severity="9">
      <ArgList>
        srcIpAddr = MalwareDomain.srcIpAddr, destName = MalwareDomain.destName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="MalwareDomain" name="MalwareDomain">
        <SingleEvtConstr> destName IN (Group@PH_SYS_MAL_DOMAIN_MDL) AND eventType IN (Group@PH_SYS_EVENT_CommonDNSTraffic)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

   <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_7" phIncidentCategory="Network" function = "SECURITY">
    <Name>Traffic to Emerging Threat IP List</Name>
    <active>true</active>
    <Description>Detects network traffic to emerging threat IP List</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TO_EMERGING_THREAT_IP" severity="9">
      <ArgList>
        srcIpAddr = Shadowserver.srcIpAddr, destIpAddr = Shadowserver.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Shadowserver" name="Shadowserver">
        <SingleEvtConstr> destIpAddr IN (Group@PH_SYS_EMER_THREAT) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_11" phIncidentCategory="Network" function = "SECURITY">
    <Name>Traffic to Zeus Blocked IP List</Name>
    <active>true</active>
    <Description>Detects network traffic to Zeus Blocked IP List </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TO_ZEUS_BLOCKED_IP" severity="9">
      <ArgList>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Spamhaus" name="Spamhaus">
        <SingleEvtConstr> destIpAddr IN (Group@PH_SYS_ZEUS_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_12" phIncidentCategory="Network" function = "SECURITY">
    <Name>Permitted Traffic from Emerging Threat IP List</Name>
    <active>true</active>
    <Description>Detects network traffic from emerging threat IP List</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FROM_EMERGING_THREAT_IP" severity="9">
      <ArgList>
        srcIpAddr = Shadowserver.srcIpAddr, destIpAddr = Shadowserver.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Shadowserver" name="Shadowserver">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_EMER_THREAT) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_16" phIncidentCategory="Network" function = "SECURITY">
    <Name>Permitted Traffic from Zeus Blocked IP List</Name>
    <active>true</active>
    <Description>Detects permitted network traffic from Zeus Blocked IP List </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FROM_ZEUS_BLOCKED_IP" severity="9">
      <ArgList>
        srcIpAddr = Spamhaus.srcIpAddr, destIpAddr = Spamhaus.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Spamhaus" name="Spamhaus">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_ZEUS_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_17" phIncidentCategory="Server" function = "SECURITY">
    <Name>Malware found but not remediated</Name>
    <active>true</active>
    <Description>Detects that host anti-virus or content inspection devices found malware that it failed to remediate </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MALWARE_NON_REMEDY" severity="10">
      <ArgList>
        computer = MalwareFound.computer
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="computer">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="MalwareFound" name="MalwareFound">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_GenMalware_Remedy_Failed) </SingleEvtConstr>
	<GroupByAttr>computer</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_18" phIncidentCategory="Server" function = "SECURITY">
    <Name>Phishing attack found but not remediated</Name>
    <active>true</active>
    <Description>Detects that host anti-virus or content inspection devices found phishing attacks that it failed to remediate </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_PHISH_NON_REMEDY" severity="10">
      <ArgList>
        computer = MalwareFound.computer
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="computer">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="MalwareFound" name="MalwareFound">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Phish_Remedy_Failed) </SingleEvtConstr>
	<GroupByAttr>computer</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_19" phIncidentCategory="Server" function = "SECURITY">
    <Name>Rootkit found </Name>
    <active>true</active>
    <Description>Detects that host anti-virus or content inspection devices found a rootkit that it failed to remediate </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ROOTKIT" severity="10">
      <ArgList>
        computer = RootkitFound.computer
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="computer">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="RootkitFound" name="RootkitFound">
        <SingleEvtConstr> eventType IN (Group@PH_SYS_EVENT_Rootkit_Found) </SingleEvtConstr>
	<GroupByAttr>computer</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,hostIpAddr,user,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_20" phIncidentCategory="Server" function = "SECURITY">
    <Name>Adware process found </Name>
    <active>true</active>
    <Description>Detects suspicious adware process on a host </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_ADWARE_PROCESS" severity="10">
      <ArgList>
        hostName = AdwareFound.hostName,hostIpAddr = AdwareFound.hostIpAddr,swProcName = AdwareFound.swProcName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="AdwareFound" name="AdwareFound">
        <SingleEvtConstr> swProcName IN (Group@PH_SYS_MAL_PROC_ADWARE) AND eventType = "PH_DEV_MON_PROC_RESOURCE_UTIL" </SingleEvtConstr>
	<GroupByAttr>hostName,hostIpAddr,swProcName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>
  
  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_21" phIncidentCategory="Server" function = "SECURITY">
    <Name>FireEye HX IOC found </Name>
    <active>true</active>
    <Description>FireEye Mandiant Agent found indicators of comporomise on a host</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MANDIANT_IOC_FOUND" severity="10">
      <ArgList>
        hostName = IOCFound.hostName,
	hostIpAddr = IOCFound.hostIpAddr,
	osType = IOCFound.osType,
	iocName = IOCFound.iocName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="IOCFound" name="IOCFound">
        <SingleEvtConstr> eventType = "FireEye-HX_IOC_Hit_Found" </SingleEvtConstr>
	<GroupByAttr>hostName,hostIpAddr,osType,iocName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,hostIpAddr,osType,iocName,hostMACAddr,deviceTime,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_22" phIncidentCategory="Server" function = "SECURITY">
    <Name>FireEye Malware Callback</Name>
    <active>true</active>
    <Description>FireEye MPS found a host attempting to connect back to botnet controllers</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FEYE_MALWARE_FOUND" severity="10">
      <ArgList>
	srcIpAddr = MalwareFound.srcIpAddr,
	destIpAddr = MalwareFound.destIpAddr,
	virusName = MalwareFound.virusName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="MalwareFound" name="MalwareFound">
        <SingleEvtConstr> eventType = "FireEye-malware-callback" </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,destIpAddr,virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,srcIpAddr,srcMACAddr,destIpAddr,destIpPort,virusName,cncPort,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_23" phIncidentCategory="Server" function = "SECURITY">
    <Name>Malware hash match</Name>
    <active>true</active>
    <Description>Detects a blacklist malware hash match from FortiSIEM file monitoring. Malware hash blacklist is populated by external threat intelligence sources such as ThreatStream Anomali, FortiSandbox etc. </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_AO_MALWARE_HASH_MATCH" severity="10">
      <ArgList>
	hostName = MalwareFound.hostName,
	fileName = MalwareFound.fileName,
	hashCode = MalwareFound.hashCode
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="hostName">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="MalwareFound" name="MalwareFound">
        <SingleEvtConstr> eventType IN ("PH_DEV_MON_CUST_FILE_CREATE","PH_DEV_MON_CUST_FILE_SCAN", "PH_DEV_MON_CUST_FILE_CHANGE_CONTENT") AND hashCode IN (Group@PH_SYS_MALWARE_HASH)</SingleEvtConstr>
	<GroupByAttr>hostName,fileName,hashCode</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,hostName,fileName,hashCode,user,userGrp,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_24" phIncidentCategory="Network" function = "SECURITY">
    <Name>Traffic to Threat Stream Malware IP List</Name>
    <active>true</active>
    <Description>Detects network traffic to Threat Stream Blocked IP List </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TO_THREATSTREAM_MALWARE_IP" severity="9">
      <ArgList>
        srcIpAddr = Threatstream.srcIpAddr, destIpAddr = Threatstream.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Threatstream" name="Threatstream">
        <SingleEvtConstr> destIpAddr IN (Group@PH_SYS_THREATSTREAM_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_24B" phIncidentCategory="Network" function = "SECURITY">
    <Name>Traffic to FortiGuard Malware IP List</Name>
    <active>true</active>
    <Description>Detects network traffic to FortiGuard Blocked IP List </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_TO_FORTIGUARD_MALWARE_IP" severity="9">
      <ArgList>
        srcIpAddr = FortiGuard.srcIpAddr, destIpAddr = FortiGuard.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiGuard" name="FortiGuard">
        <SingleEvtConstr> destIpAddr IN (Group@PH_SYS_FORTIGUARD_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_25" phIncidentCategory="Network" function = "SECURITY">
    <Name>Permitted Traffic from Threat Stream Malware IP List</Name>
    <active>true</active>
    <Description>Detects network traffic from Threat Stream Malware IP List</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FROM_THREATSTREAM_MALWARE_IP" severity="9">
      <ArgList>
        srcIpAddr = Threatstream.srcIpAddr, destIpAddr = Threatstream.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Threatstream" name="Threatstream">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_THREATSTREAM_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_25B" phIncidentCategory="Network" function = "SECURITY">
    <Name>Permitted Traffic from FortiGuard Malware IP List</Name>
    <active>true</active>
    <Description>Detects network traffic from FortiGuard Malware IP List</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FROM_FORTIGUARD_MALWARE_IP" severity="9">
      <ArgList>
        srcIpAddr = FortiGuard.srcIpAddr, destIpAddr = FortiGuard.destIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="destIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiGuard" name="FortiGuard">
        <SingleEvtConstr> srcIpAddr IN (Group@PH_SYS_FORTIGUARD_BLOCKED_IP) AND reptDevIpAddr IN (Group@PH_SYS_DEVICE_FIREWALL) AND eventType IN (Group@PH_SYS_EVENT_PermitTraffic) </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destIpAddr</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destIpAddr,ipProto,srcIpPort,destIpPort,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_26" phIncidentCategory="Network" function = "SECURITY">
    <Name>DNS Traffic to Threat Stream Malware Domains</Name>
    <active>true</active>
    <Description>Detects DNS traffic to malware domains </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DNS_THREATSTREAM_MALWARE_DOMAIN" severity="9">
      <ArgList>
        srcIpAddr = Threatstream.srcIpAddr, destName = Threatstream.destName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Threatstream" name="Threatstream">
        <SingleEvtConstr> destName IN (Group@PH_SYS_MAL_DOMAIN_THREATSTREAM) AND eventType IN (Group@PH_SYS_EVENT_CommonDNSTraffic)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_26B" phIncidentCategory="Network" function = "SECURITY">
    <Name>DNS Traffic to FortiGuard Malware Domains</Name>
    <active>true</active>
    <Description>Detects DNS traffic to FortiGuard malware domains </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_DNS_FORTIGUARD_MALWARE_DOMAIN" severity="9">
      <ArgList>
        srcIpAddr = FortiGuard.srcIpAddr, destName = FortiGuard.destName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiGuard" name="FortiGuard">
        <SingleEvtConstr> destName IN (Group@PH_SYS_FORTIGUARD_MAL_DOMAIN) AND eventType IN (Group@PH_SYS_EVENT_CommonDNSTraffic)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_27" phIncidentCategory="Network" function = "SECURITY">
    <Name>Web Traffic to Threat Stream Malicious URLs</Name>
    <active>true</active>
    <Description>Detects HTTP traffic where the URL matches the external Threat Stream Malicious URL list</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WEB_THREATSTREAM_MALWARE_URL" severity="9">
      <ArgList>
        srcIpAddr = Threatstream.srcIpAddr, destName = Threatstream.destName, infoURL = Threatstream.infoURL
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="Threatstream" name="Threatstream">
        <SingleEvtConstr> infoURL IN (Group@PH_SYS_THREATSTREAM_BLOCKED_URL) AND eventType IN (Group@PH_SYS_EVENT_PermitWebTraffic)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destName, infoURL</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,infoURL,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_28" phIncidentCategory="Network" function = "SECURITY">
    <Name>Web Traffic to FortiSandbox Malicious URLs</Name>
    <active>true</active>
    <Description>Detects HTTP traffic where the URL matches the external FortiSandbox Malicious URL list</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WEB_FORTISANDBOX_MALWARE_URL" severity="9">
      <ArgList>
        srcIpAddr = FortiSandbox.srcIpAddr, destName = FortiSandbox.destName, infoURL = FortiSandbox.infoURL
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> infoURL IN (Group@PH_SYS_FORTISANDBOX_BLOCKED_URL) AND eventType IN (Group@PH_SYS_EVENT_PermitWebTraffic)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destName, infoURL</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,infoURL,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_28B" phIncidentCategory="Network" function = "SECURITY">
    <Name>Web Traffic to FortiGuard Malicious URLs</Name>
    <active>true</active>
    <Description>Detects HTTP traffic where the URL matches the external FortiGuard Malicious URL list</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_WEB_FORTIGUARD_MALWARE_URL" severity="9">
      <ArgList>
        srcIpAddr = FortiGuard.srcIpAddr, destName = FortiGuard.destName, infoURL = FortiGuard.infoURL
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiGuard" name="FortiGuard">
        <SingleEvtConstr> infoURL IN (Group@PH_SYS_FORTIGUARD_BLOCKED_URL) AND eventType IN (Group@PH_SYS_EVENT_PermitWebTraffic)  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, destName, infoURL</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,eventType,srcIpAddr,destName,infoURL,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_29" phIncidentCategory="Network" function = "SECURITY">
    <Name>FortiSandbox detects file malware</Name>
    <active>true</active>
    <Description>FortiSandbox claims that a file has malware</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTISANDBOX_FILE_MALWARE" severity="9">
      <ArgList>
        srcIpAddr = FortiSandbox.srcIpAddr,
	virusName = FortiSandbox.virusName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> eventType = "FortiSandbox-Malware-Detected" AND riskName = "Malicious" </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,virusName, infoURL, rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_30" phIncidentCategory="Network" function = "SECURITY">
    <Name>FortiSandbox detects Botnet</Name>
    <active>true</active>
    <Description>FortiSandbox validates that a file has malware</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTISANDBOX_BOTNET" severity="9">
      <ArgList>
        srcIpAddr = FortiSandbox.srcIpAddr,
	srcName = FortiSandbox.srcName,
	virusName = FortiSandbox.virusName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> eventType = "FortiSandbox-NetAlert-Botnet"  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, srcName, virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr, virusName, rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_31" phIncidentCategory="Network" function = "SECURITY">
    <Name>FortiSandbox detects Malware URL</Name>
    <active>true</active>
    <Description>FortiSandbox claims that a file has malware</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTISANDBOX_MALWARE_URL" severity="9">
      <ArgList>
        srcIpAddr = FortiSandbox.srcIpAddr,
	srcName = FortiSandbox.srcName,
	virusName = FortiSandbox.virusName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> eventType = "FortiSandbox-NetAlert-URL"  </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, srcName, virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr, virusName, rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_32" phIncidentCategory="Network" function = "SECURITY">
    <Name>FortiSandbox detects Network Attack</Name>
    <active>true</active>
    <Description>FortiSandbox claims that a file has malware</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTISANDBOX_NETWORK_ATTACK" severity="9">
      <ArgList>
        srcIpAddr = FortiSandbox.srcIpAddr,
	srcName = FortiSandbox.srcName,
	ipsEventName = FortiSandbox.ipsEventName,
	virusName = FortiSandbox.virusName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> eventType = "FortiSandbox-NetAlert-Attack" </SingleEvtConstr>
	<GroupByAttr>srcIpAddr, srcName, ipsEventName, virusName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1  </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,srcName, ipsEventName, virusName, rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_33" phIncidentCategory="Network" function = "SECURITY">
    <Name>FortiSandbox detects multiple attacks from same source</Name>
    <active>true</active>
    <Description>FortiSandbox detects multiple attacks from the same source </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTISANDBOX_SAME_SRC_MULTIPLE_ATTACK" severity="10">
      <ArgList>
        srcIpAddr = FortiSandbox.srcIpAddr
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> eventType IN ("FortiSandbox-NetAlert-Attack", "FortiSandbox-Malware-Detected", "FortiSandbox-NetAlert-URL", "FortiSandbox-NetAlert-Botnet") </SingleEvtConstr>
	<GroupByAttr>srcIpAddr </GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT eventType) &gt;= 2 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr,eventType, rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_34" phIncidentCategory="Network" function = "SECURITY">
    <Name>FortiSandbox detects multiple hosts with infected files </Name>
    <active>true</active>
    <Description>FortiSandbox detects multiple attacks from the same source </Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_FORTISANDBOX_MALWARE_OUTBREAK" severity="10">
      <ArgList>
        virusName = FortiSandbox.virusName,
	fileName = FortiSandbox.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcIpAddr">
       <WatchList>PH_DYNLIST_LIKELY_MALWARE</WatchList>
    </DynWatchListDef>
    <PatternClause window="600">
      <SubPattern displayName="FortiSandbox" name="FortiSandbox">
        <SingleEvtConstr> eventType =  "FortiSandbox-Malware-Detected" </SingleEvtConstr>
	<GroupByAttr>virusName,fileName</GroupByAttr>
	<GroupEvtConstr>COUNT(DISTINCT srcIpAddr) &gt;= 5 </GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,destIpAddr, virusName, fileName,rawEventMsg</AttrList>
    </TriggerEventDisplay>
  </Rule>

  <Rule group="PH_SYS_RULE_Vuln" id="PH_Rule_Vuln_35" phIncidentCategory="Server" function = "SECURITY">
    <Name>Virus found in mail</Name>
    <active>true</active>
    <Description>Fortimail and other mail gateways found a virus in mail attachment</Description>
    <CustomerScope groupByEachCustomer="true"> <Include all="true"/> <Exclude/> </CustomerScope>
    <IncidentDef eventType="PH_RULE_MAIL_VIRUS" severity="10">
      <ArgList>
        srcIpAddr = VirusFound.srcIpAddr,
	srcUser = VirusFound.srcUser,
	destUser = VirusFound.destUser, 
	virusName = VirusFound.virusName,
	fileName = VirusFound.fileName
      </ArgList>
    </IncidentDef>
    <DynWatchListDef attr="srcUser">
       <WatchList>PH_DYNLIST_MALWARE_FOUND</WatchList>
    </DynWatchListDef>
    <PatternClause window="300">
      <SubPattern displayName="VirusFound" name="VirusFound">
        <SingleEvtConstr> eventType = "FortiMail-Antivirus-virus-infected" </SingleEvtConstr>
	<GroupByAttr>srcIpAddr,srcUser,destUser,virusName,fileName</GroupByAttr>
	<GroupEvtConstr>COUNT(*) &gt;= 1</GroupEvtConstr>
      </SubPattern>
    </PatternClause>
    <TriggerEventDisplay>
      <AttrList> phRecvTime,reptDevIpAddr,srcIpAddr,srcUser,destUser,virusName,fileName,rawEventMsg </AttrList>
    </TriggerEventDisplay>
  </Rule>

</Rules>
